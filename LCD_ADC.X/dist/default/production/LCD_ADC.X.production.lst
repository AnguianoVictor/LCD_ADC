

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon May 13 13:59:08 2019

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  0088                     	;# 
    83  0089                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  008F                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  0105                     	;# 
   107  0107                     	;# 
   108  0108                     	;# 
   109  0109                     	;# 
   110  010C                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0185                     	;# 
   116  0187                     	;# 
   117  0188                     	;# 
   118  0189                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  008F                     	;# 
   166  0090                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0093                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0095                     	;# 
   174  0096                     	;# 
   175  0097                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  0105                     	;# 
   185  0107                     	;# 
   186  0108                     	;# 
   187  0109                     	;# 
   188  010C                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  0185                     	;# 
   194  0187                     	;# 
   195  0188                     	;# 
   196  0189                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0008                     	;# 
   208  0009                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  000E                     	;# 
   215  000F                     	;# 
   216  0010                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0014                     	;# 
   221  0015                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001B                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001D                     	;# 
   232  001E                     	;# 
   233  001F                     	;# 
   234  0081                     	;# 
   235  0085                     	;# 
   236  0086                     	;# 
   237  0087                     	;# 
   238  0088                     	;# 
   239  0089                     	;# 
   240  008C                     	;# 
   241  008D                     	;# 
   242  008E                     	;# 
   243  008F                     	;# 
   244  0090                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0093                     	;# 
   248  0093                     	;# 
   249  0093                     	;# 
   250  0094                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  0105                     	;# 
   263  0107                     	;# 
   264  0108                     	;# 
   265  0109                     	;# 
   266  010C                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  010E                     	;# 
   270  010F                     	;# 
   271  0185                     	;# 
   272  0187                     	;# 
   273  0188                     	;# 
   274  0189                     	;# 
   275  018C                     	;# 
   276  018D                     	;# 
   277                           
   278                           	psect	strings
   279  1000                     __pstrings:	
   280  1000                     stringtab:	
   281  1000                     __stringtab:	
   282  1000                     stringcode:	
   283                           ;	String table - string pointers are 1 byte each
   284                           
   285  1000                     stringdir:	
   286  1000  3010               	movlw	high stringdir
   287  1001  008A               	movwf	10
   288  1002  0804               	movf	4,w
   289  1003  0A84               	incf	4,f
   290  1004  0782               	addwf	2,f
   291  1005                     __stringbase:	
   292  1005  3400               	retlw	0
   293  1006                     __end_of__stringtab:	
   294  1006                     _dpowers:	
   295  1006  3401               	retlw	1
   296  1007  3400               	retlw	0
   297  1008  3400               	retlw	0
   298  1009  3400               	retlw	0
   299  100A  340A               	retlw	10
   300  100B  3400               	retlw	0
   301  100C  3400               	retlw	0
   302  100D  3400               	retlw	0
   303  100E  3464               	retlw	100
   304  100F  3400               	retlw	0
   305  1010  3400               	retlw	0
   306  1011  3400               	retlw	0
   307  1012  34E8               	retlw	232
   308  1013  3403               	retlw	3
   309  1014  3400               	retlw	0
   310  1015  3400               	retlw	0
   311  1016  3410               	retlw	16
   312  1017  3427               	retlw	39
   313  1018  3400               	retlw	0
   314  1019  3400               	retlw	0
   315  101A  34A0               	retlw	160
   316  101B  3486               	retlw	134
   317  101C  3401               	retlw	1
   318  101D  3400               	retlw	0
   319  101E  3440               	retlw	64
   320  101F  3442               	retlw	66
   321  1020  340F               	retlw	15
   322  1021  3400               	retlw	0
   323  1022  3480               	retlw	128
   324  1023  3496               	retlw	150
   325  1024  3498               	retlw	152
   326  1025  3400               	retlw	0
   327  1026  3400               	retlw	0
   328  1027  34E1               	retlw	225
   329  1028  34F5               	retlw	245
   330  1029  3405               	retlw	5
   331  102A  3400               	retlw	0
   332  102B  34CA               	retlw	202
   333  102C  349A               	retlw	154
   334  102D  343B               	retlw	59
   335  102E                     __end_of_dpowers:	
   336  102E                     __npowers_:	
   337  102E  3400               	retlw	0
   338  102F  3480               	retlw	128
   339  1030  343F               	retlw	63
   340  1031  34CD               	retlw	205
   341  1032  34CC               	retlw	204
   342  1033  343D               	retlw	61
   343  1034  34D7               	retlw	215
   344  1035  3423               	retlw	35
   345  1036  343C               	retlw	60
   346  1037  3412               	retlw	18
   347  1038  3483               	retlw	131
   348  1039  343A               	retlw	58
   349  103A  34B7               	retlw	183
   350  103B  34D1               	retlw	209
   351  103C  3438               	retlw	56
   352  103D  34C6               	retlw	198
   353  103E  3427               	retlw	39
   354  103F  3437               	retlw	55
   355  1040  3438               	retlw	56
   356  1041  3486               	retlw	134
   357  1042  3435               	retlw	53
   358  1043  34C0               	retlw	192
   359  1044  34D6               	retlw	214
   360  1045  3433               	retlw	51
   361  1046  34CC               	retlw	204
   362  1047  342B               	retlw	43
   363  1048  3432               	retlw	50
   364  1049  3470               	retlw	112
   365  104A  3489               	retlw	137
   366  104B  3430               	retlw	48
   367  104C  34E7               	retlw	231
   368  104D  34DB               	retlw	219
   369  104E  342E               	retlw	46
   370  104F  34E5               	retlw	229
   371  1050  343C               	retlw	60
   372  1051  341E               	retlw	30
   373  1052  3442               	retlw	66
   374  1053  34A2               	retlw	162
   375  1054  340D               	retlw	13
   376  1055                     __end_of__npowers_:	
   377  1055                     __powers_:	
   378  1055  3400               	retlw	0
   379  1056  3480               	retlw	128
   380  1057  343F               	retlw	63
   381  1058  3400               	retlw	0
   382  1059  3420               	retlw	32
   383  105A  3441               	retlw	65
   384  105B  3400               	retlw	0
   385  105C  34C8               	retlw	200
   386  105D  3442               	retlw	66
   387  105E  3400               	retlw	0
   388  105F  347A               	retlw	122
   389  1060  3444               	retlw	68
   390  1061  3440               	retlw	64
   391  1062  341C               	retlw	28
   392  1063  3446               	retlw	70
   393  1064  3450               	retlw	80
   394  1065  34C3               	retlw	195
   395  1066  3447               	retlw	71
   396  1067  3424               	retlw	36
   397  1068  3474               	retlw	116
   398  1069  3449               	retlw	73
   399  106A  3497               	retlw	151
   400  106B  3418               	retlw	24
   401  106C  344B               	retlw	75
   402  106D  34BC               	retlw	188
   403  106E  34BE               	retlw	190
   404  106F  344C               	retlw	76
   405  1070  346B               	retlw	107
   406  1071  346E               	retlw	110
   407  1072  344E               	retlw	78
   408  1073  3403               	retlw	3
   409  1074  3415               	retlw	21
   410  1075  3450               	retlw	80
   411  1076  3479               	retlw	121
   412  1077  34AD               	retlw	173
   413  1078  3460               	retlw	96
   414  1079  34F3               	retlw	243
   415  107A  3449               	retlw	73
   416  107B  3471               	retlw	113
   417  107C                     __end_of__powers_:	
   418  001F                     _ADCON0	set	31
   419  001E                     _ADRESH	set	30
   420  0007                     _PORTC	set	7
   421  0001                     _TMR0	set	1
   422  00F9                     _GO_DONE	set	249
   423  0029                     _RA1	set	41
   424  002A                     _RA2	set	42
   425  002C                     _RA4	set	44
   426  005A                     _T0IF	set	90
   427  009F                     _ADCON1	set	159
   428  009E                     _ADRESL	set	158
   429  0081                     _OPTION_REG	set	129
   430  0085                     _TRISA	set	133
   431  0086                     _TRISB	set	134
   432  0087                     _TRISC	set	135
   433  0089                     _TRISE	set	137
   434  0188                     _ANSEL	set	392
   435  0189                     _ANSELH	set	393
   436  107C                     STR_1:	
   437  107C  3456               	retlw	86	;'V'
   438  107D  3431               	retlw	49	;'1'
   439  107E  343D               	retlw	61	;'='
   440  107F  3425               	retlw	37	;'%'
   441  1080  342E               	retlw	46	;'.'
   442  1081  3433               	retlw	51	;'3'
   443  1082  3466               	retlw	102	;'f'
   444  1083  3400               	retlw	0
   445  1084                     STR_2:	
   446  1084  3456               	retlw	86	;'V'
   447  1085  3432               	retlw	50	;'2'
   448  1086  343D               	retlw	61	;'='
   449  1087  3425               	retlw	37	;'%'
   450  1088  342E               	retlw	46	;'.'
   451  1089  3433               	retlw	51	;'3'
   452  108A  3466               	retlw	102	;'f'
   453  108B  3400               	retlw	0
   454  108C                     STR_3:	
   455  108C  3456               	retlw	86	;'V'
   456  108D  3433               	retlw	51	;'3'
   457  108E  343D               	retlw	61	;'='
   458  108F  3425               	retlw	37	;'%'
   459  1090  342E               	retlw	46	;'.'
   460  1091  3433               	retlw	51	;'3'
   461  1092  3466               	retlw	102	;'f'
   462  1093  3400               	retlw	0
   463  1094                     STR_4:	
   464  1094  3456               	retlw	86	;'V'
   465  1095  3434               	retlw	52	;'4'
   466  1096  343D               	retlw	61	;'='
   467  1097  3425               	retlw	37	;'%'
   468  1098  342E               	retlw	46	;'.'
   469  1099  3433               	retlw	51	;'3'
   470  109A  3466               	retlw	102	;'f'
   471  109B  3400               	retlw	0
   472                           
   473                           ; #config settings
   474  0000                     
   475                           	psect	cinit
   476  07F2                     start_initialization:	
   477  07F2                     __initialization:	
   478                           
   479                           ; Clear objects allocated to BANK0
   480  07F2  01E8               	clrf	__pbssBANK0& (0+127)
   481  07F3  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   482  07F4  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   483                           
   484                           ; Clear objects allocated to BANK1
   485  07F5  1383               	bcf	3,7	;select IRP bank0
   486  07F6  30B7               	movlw	low __pbssBANK1
   487  07F7  0084               	movwf	4
   488  07F8  30CB               	movlw	low (__pbssBANK1+20)
   489  07F9  160A  118A  2294   	fcall	clear_ram0
   490  07FC                     end_of_initialization:	
   491                           ;End of C runtime variable initialization code
   492                           
   493  07FC                     __end_of__initialization:	
   494  07FC  0183               	clrf	3
   495  07FD  120A  158A  2B38   	ljmp	_main	;jump to C main() function
   496                           
   497                           	psect	bssBANK0
   498  0068                     __pbssBANK0:	
   499  0068                     _read:	
   500  0068                     	ds	3
   501                           
   502                           	psect	bssBANK1
   503  00B7                     __pbssBANK1:	
   504  00B7                     _buffer:	
   505  00B7                     	ds	20
   506                           
   507                           	psect	clrtext
   508  1294                     clear_ram0:	
   509                           ;	Called with FSR containing the base address, and
   510                           ;	W with the last address+1
   511                           
   512  1294  0064               	clrwdt	;clear the watchdog before getting into this loop
   513  1295                     clrloop0:	
   514  1295  0180               	clrf	0	;clear RAM location pointed to by FSR
   515  1296  0A84               	incf	4,f	;increment pointer
   516  1297  0604               	xorwf	4,w	;XOR with final address
   517  1298  1903               	btfsc	3,2	;have we reached the end yet?
   518  1299  3400               	retlw	0	;all done for this memory range, return
   519  129A  0604               	xorwf	4,w	;XOR again to restore value
   520  129B  2A95               	goto	clrloop0	;do the next byte
   521                           
   522                           	psect	cstackBANK1
   523  00A0                     __pcstackBANK1:	
   524  00A0                     _sprintf$969:	
   525                           
   526                           ; 3 bytes @ 0x0
   527  00A0                     	ds	3
   528  00A3                     sprintf@ap:	
   529                           
   530                           ; 1 bytes @ 0x3
   531  00A3                     	ds	1
   532  00A4                     sprintf@flag:	
   533                           
   534                           ; 2 bytes @ 0x4
   535  00A4                     	ds	2
   536  00A6                     sprintf@val:	
   537                           
   538                           ; 4 bytes @ 0x6
   539  00A6                     	ds	4
   540  00AA                     sprintf@exp:	
   541                           
   542                           ; 2 bytes @ 0xA
   543  00AA                     	ds	2
   544  00AC                     sprintf@tmpval:	
   545                           
   546                           ; 4 bytes @ 0xC
   547  00AC                     	ds	4
   548  00B0                     sprintf@prec:	
   549                           
   550                           ; 2 bytes @ 0x10
   551  00B0                     	ds	2
   552  00B2                     sprintf@sp:	
   553                           
   554                           ; 1 bytes @ 0x12
   555  00B2                     	ds	1
   556  00B3                     sprintf@fval:	
   557                           
   558                           ; 3 bytes @ 0x13
   559  00B3                     	ds	3
   560  00B6                     sprintf@c:	
   561                           
   562                           ; 1 bytes @ 0x16
   563  00B6                     	ds	1
   564                           
   565                           	psect	cstackCOMMON
   566  0070                     __pcstackCOMMON:	
   567  0070                     ?_lcd_init:	
   568  0070                     ?_lcd_clear:	
   569                           ; 0 bytes @ 0x0
   570                           
   571  0070                     ?_pause:	
   572                           ; 0 bytes @ 0x0
   573                           
   574  0070                     ?_lcd_goto:	
   575                           ; 0 bytes @ 0x0
   576                           
   577  0070                     ?_lcd_puts:	
   578                           ; 0 bytes @ 0x0
   579                           
   580  0070                     ?_isdigit:	
   581                           ; 0 bytes @ 0x0
   582                           
   583  0070                     ??_isdigit:	
   584                           ; 1 bit 
   585                           
   586  0070                     ?_main:	
   587                           ; 0 bytes @ 0x0
   588                           
   589  0070                     ?_lcd_write:	
   590                           ; 0 bytes @ 0x0
   591                           
   592  0070                     ?_msecbase:	
   593                           ; 0 bytes @ 0x0
   594                           
   595  0070                     ??_msecbase:	
   596                           ; 0 bytes @ 0x0
   597                           
   598  0070                     ?___ftge:	
   599                           ; 0 bytes @ 0x0
   600                           
   601  0070                     ?___wmul:	
   602                           ; 1 bit 
   603                           
   604  0070                     ?___awmod:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0070                     ?___ftpack:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ?___ftneg:	
   611                           ; 3 bytes @ 0x0
   612                           
   613  0070                     ?__tdiv_to_l_:	
   614                           ; 3 bytes @ 0x0
   615                           
   616  0070                     ?__div_to_l_:	
   617                           ; 4 bytes @ 0x0
   618                           
   619  0070                     ?___lldiv:	
   620                           ; 4 bytes @ 0x0
   621                           
   622  0070                     ?___llmod:	
   623                           ; 4 bytes @ 0x0
   624                           
   625  0070                     _isdigit$755:	
   626                           ; 4 bytes @ 0x0
   627                           
   628  0070                     pause@usvalue:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ___wmul@multiplier:	
   632                           ; 2 bytes @ 0x0
   633                           
   634  0070                     ___awmod@divisor:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0070                     __div_to_l_@f1:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0070                     ___ftpack@arg:	
   641                           ; 3 bytes @ 0x0
   642                           
   643  0070                     __tdiv_to_l_@f1:	
   644                           ; 3 bytes @ 0x0
   645                           
   646  0070                     ___ftge@ff1:	
   647                           ; 3 bytes @ 0x0
   648                           
   649  0070                     ___ftneg@f1:	
   650                           ; 3 bytes @ 0x0
   651                           
   652  0070                     ___lldiv@divisor:	
   653                           ; 3 bytes @ 0x0
   654                           
   655  0070                     ___llmod@divisor:	
   656                           ; 4 bytes @ 0x0
   657                           
   658                           
   659                           ; 4 bytes @ 0x0
   660  0070                     	ds	1
   661  0071                     isdigit@c:	
   662                           
   663                           ; 1 bytes @ 0x1
   664  0071                     	ds	1
   665  0072                     ??_pause:	
   666  0072                     pause@x:	
   667                           ; 0 bytes @ 0x2
   668                           
   669  0072                     ___wmul@multiplicand:	
   670                           ; 2 bytes @ 0x2
   671                           
   672  0072                     ___awmod@dividend:	
   673                           ; 2 bytes @ 0x2
   674                           
   675                           
   676                           ; 2 bytes @ 0x2
   677  0072                     	ds	1
   678  0073                     ??___ftneg:	
   679  0073                     ___ftpack@exp:	
   680                           ; 0 bytes @ 0x3
   681                           
   682  0073                     __div_to_l_@f2:	
   683                           ; 1 bytes @ 0x3
   684                           
   685  0073                     __tdiv_to_l_@f2:	
   686                           ; 3 bytes @ 0x3
   687                           
   688  0073                     ___ftge@ff2:	
   689                           ; 3 bytes @ 0x3
   690                           
   691                           
   692                           ; 3 bytes @ 0x3
   693  0073                     	ds	1
   694  0074                     ??_lcd_write:	
   695  0074                     ??___wmul:	
   696                           ; 0 bytes @ 0x4
   697                           
   698  0074                     ??___awmod:	
   699                           ; 0 bytes @ 0x4
   700                           
   701  0074                     ___ftpack@sign:	
   702                           ; 0 bytes @ 0x4
   703                           
   704  0074                     ___wmul@product:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0074                     ___lldiv@dividend:	
   708                           ; 2 bytes @ 0x4
   709                           
   710  0074                     ___llmod@dividend:	
   711                           ; 4 bytes @ 0x4
   712                           
   713                           
   714                           ; 4 bytes @ 0x4
   715  0074                     	ds	1
   716  0075                     ??___ftpack:	
   717  0075                     lcd_write@c:	
   718                           ; 0 bytes @ 0x5
   719                           
   720  0075                     ___awmod@counter:	
   721                           ; 1 bytes @ 0x5
   722                           
   723                           
   724                           ; 1 bytes @ 0x5
   725  0075                     	ds	1
   726  0076                     ??_lcd_init:	
   727  0076                     ??_lcd_clear:	
   728                           ; 0 bytes @ 0x6
   729                           
   730  0076                     ??_lcd_goto:	
   731                           ; 0 bytes @ 0x6
   732                           
   733  0076                     ??_lcd_puts:	
   734                           ; 0 bytes @ 0x6
   735                           
   736  0076                     ??__tdiv_to_l_:	
   737                           ; 0 bytes @ 0x6
   738                           
   739  0076                     ??__div_to_l_:	
   740                           ; 0 bytes @ 0x6
   741                           
   742  0076                     ??___ftge:	
   743                           ; 0 bytes @ 0x6
   744                           
   745  0076                     lcd_goto@pos:	
   746                           ; 0 bytes @ 0x6
   747                           
   748  0076                     ___awmod@sign:	
   749                           ; 1 bytes @ 0x6
   750                           
   751                           
   752                           ; 1 bytes @ 0x6
   753  0076                     	ds	1
   754  0077                     ?___awdiv:	
   755  0077                     lcd_puts@s:	
   756                           ; 2 bytes @ 0x7
   757                           
   758  0077                     lcd_init@init_value:	
   759                           ; 1 bytes @ 0x7
   760                           
   761  0077                     ___awdiv@divisor:	
   762                           ; 1 bytes @ 0x7
   763                           
   764                           
   765                           ; 2 bytes @ 0x7
   766  0077                     	ds	1
   767  0078                     ??___lldiv:	
   768  0078                     ??___llmod:	
   769                           ; 0 bytes @ 0x8
   770                           
   771  0078                     ?___awtoft:	
   772                           ; 0 bytes @ 0x8
   773                           
   774  0078                     ?___lltoft:	
   775                           ; 3 bytes @ 0x8
   776                           
   777  0078                     ___awtoft@c:	
   778                           ; 3 bytes @ 0x8
   779                           
   780  0078                     ___lltoft@c:	
   781                           ; 2 bytes @ 0x8
   782                           
   783                           
   784                           ; 4 bytes @ 0x8
   785  0078                     	ds	1
   786  0079                     ___llmod@counter:	
   787  0079                     ___awdiv@dividend:	
   788                           ; 1 bytes @ 0x9
   789                           
   790  0079                     ___lldiv@quotient:	
   791                           ; 2 bytes @ 0x9
   792                           
   793                           
   794                           ; 4 bytes @ 0x9
   795  0079                     	ds	2
   796  007B                     ??___awdiv:	
   797  007B                     ??___awtoft:	
   798                           ; 0 bytes @ 0xB
   799                           
   800                           
   801                           ; 0 bytes @ 0xB
   802  007B                     	ds	1
   803  007C                     ??___bmul:	
   804  007C                     ??___lltoft:	
   805                           ; 0 bytes @ 0xC
   806                           
   807                           
   808                           ; 0 bytes @ 0xC
   809  007C                     	ds	1
   810  007D                     ___awtoft@sign:	
   811  007D                     ___lldiv@counter:	
   812                           ; 1 bytes @ 0xD
   813                           
   814  007D                     ___lltoft@exp:	
   815                           ; 1 bytes @ 0xD
   816                           
   817                           
   818                           ; 1 bytes @ 0xD
   819  007D                     	ds	1
   820  007E                     ??___ftsub:	
   821                           
   822                           	psect	cstackBANK0
   823  0020                     __pcstackBANK0:	
   824                           ; 0 bytes @ 0xE
   825                           
   826  0020                     ___awdiv@counter:	
   827  0020                     __div_to_l_@quot:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0020                     __tdiv_to_l_@quot:	
   831                           ; 4 bytes @ 0x0
   832                           
   833                           
   834                           ; 4 bytes @ 0x0
   835  0020                     	ds	1
   836  0021                     ___awdiv@sign:	
   837                           
   838                           ; 1 bytes @ 0x1
   839  0021                     	ds	1
   840  0022                     ___awdiv@quotient:	
   841                           
   842                           ; 2 bytes @ 0x2
   843  0022                     	ds	2
   844  0024                     ?___bmul:	
   845  0024                     ___bmul@multiplicand:	
   846                           ; 1 bytes @ 0x4
   847                           
   848  0024                     __div_to_l_@cntr:	
   849                           ; 1 bytes @ 0x4
   850                           
   851  0024                     __tdiv_to_l_@cntr:	
   852                           ; 1 bytes @ 0x4
   853                           
   854                           
   855                           ; 1 bytes @ 0x4
   856  0024                     	ds	1
   857  0025                     ___bmul@product:	
   858  0025                     __div_to_l_@exp1:	
   859                           ; 1 bytes @ 0x5
   860                           
   861  0025                     __tdiv_to_l_@exp1:	
   862                           ; 1 bytes @ 0x5
   863                           
   864                           
   865                           ; 1 bytes @ 0x5
   866  0025                     	ds	1
   867  0026                     ___bmul@multiplier:	
   868                           
   869                           ; 1 bytes @ 0x6
   870  0026                     	ds	1
   871  0027                     ?___ftmul:	
   872  0027                     ___ftmul@f1:	
   873                           ; 3 bytes @ 0x7
   874                           
   875                           
   876                           ; 3 bytes @ 0x7
   877  0027                     	ds	3
   878  002A                     ___ftmul@f2:	
   879                           
   880                           ; 3 bytes @ 0xA
   881  002A                     	ds	3
   882  002D                     ??___ftmul:	
   883                           
   884                           ; 0 bytes @ 0xD
   885  002D                     	ds	4
   886  0031                     ___ftmul@exp:	
   887                           
   888                           ; 1 bytes @ 0x11
   889  0031                     	ds	1
   890  0032                     ___ftmul@f3_as_product:	
   891                           
   892                           ; 3 bytes @ 0x12
   893  0032                     	ds	3
   894  0035                     ___ftmul@cntr:	
   895                           
   896                           ; 1 bytes @ 0x15
   897  0035                     	ds	1
   898  0036                     ___ftmul@sign:	
   899                           
   900                           ; 1 bytes @ 0x16
   901  0036                     	ds	1
   902  0037                     ?_fround:	
   903  0037                     ?_scale:	
   904                           ; 3 bytes @ 0x17
   905                           
   906  0037                     ?___ftdiv:	
   907                           ; 3 bytes @ 0x17
   908                           
   909  0037                     ___ftdiv@f2:	
   910                           ; 3 bytes @ 0x17
   911                           
   912                           
   913                           ; 3 bytes @ 0x17
   914  0037                     	ds	3
   915  003A                     ??_fround:	
   916  003A                     ??_scale:	
   917                           ; 0 bytes @ 0x1A
   918                           
   919  003A                     ___ftdiv@f1:	
   920                           ; 0 bytes @ 0x1A
   921                           
   922                           
   923                           ; 3 bytes @ 0x1A
   924  003A                     	ds	2
   925  003C                     _scale$968:	
   926                           
   927                           ; 3 bytes @ 0x1C
   928  003C                     	ds	1
   929  003D                     ??___ftdiv:	
   930                           
   931                           ; 0 bytes @ 0x1D
   932  003D                     	ds	2
   933  003F                     scale@scl:	
   934                           
   935                           ; 1 bytes @ 0x1F
   936  003F                     	ds	1
   937  0040                     ?___fttol:	
   938  0040                     ___fttol@f1:	
   939                           ; 4 bytes @ 0x20
   940                           
   941  0040                     _fround$967:	
   942                           ; 3 bytes @ 0x20
   943                           
   944                           
   945                           ; 3 bytes @ 0x20
   946  0040                     	ds	1
   947  0041                     ___ftdiv@cntr:	
   948                           
   949                           ; 1 bytes @ 0x21
   950  0041                     	ds	1
   951  0042                     ___ftdiv@f3:	
   952                           
   953                           ; 3 bytes @ 0x22
   954  0042                     	ds	1
   955  0043                     _fround$966:	
   956                           
   957                           ; 3 bytes @ 0x23
   958  0043                     	ds	1
   959  0044                     ??___fttol:	
   960                           
   961                           ; 0 bytes @ 0x24
   962  0044                     	ds	1
   963  0045                     ___ftdiv@exp:	
   964                           
   965                           ; 1 bytes @ 0x25
   966  0045                     	ds	1
   967  0046                     fround@prec:	
   968  0046                     ___ftdiv@sign:	
   969                           ; 1 bytes @ 0x26
   970                           
   971                           
   972                           ; 1 bytes @ 0x26
   973  0046                     	ds	1
   974  0047                     ?___ftadd:	
   975  0047                     ___ftadd@f1:	
   976                           ; 3 bytes @ 0x27
   977                           
   978                           
   979                           ; 3 bytes @ 0x27
   980  0047                     	ds	1
   981  0048                     ___fttol@sign1:	
   982                           
   983                           ; 1 bytes @ 0x28
   984  0048                     	ds	1
   985  0049                     ___fttol@lval:	
   986                           
   987                           ; 4 bytes @ 0x29
   988  0049                     	ds	1
   989  004A                     ___ftadd@f2:	
   990                           
   991                           ; 3 bytes @ 0x2A
   992  004A                     	ds	3
   993  004D                     ??___ftadd:	
   994  004D                     ___fttol@exp1:	
   995                           ; 0 bytes @ 0x2D
   996                           
   997                           
   998                           ; 1 bytes @ 0x2D
   999  004D                     	ds	4
  1000  0051                     ___ftadd@sign:	
  1001                           
  1002                           ; 1 bytes @ 0x31
  1003  0051                     	ds	1
  1004  0052                     ___ftadd@exp2:	
  1005                           
  1006                           ; 1 bytes @ 0x32
  1007  0052                     	ds	1
  1008  0053                     ___ftadd@exp1:	
  1009                           
  1010                           ; 1 bytes @ 0x33
  1011  0053                     	ds	1
  1012  0054                     ?___ftsub:	
  1013  0054                     ___ftsub@f2:	
  1014                           ; 3 bytes @ 0x34
  1015                           
  1016                           
  1017                           ; 3 bytes @ 0x34
  1018  0054                     	ds	3
  1019  0057                     ___ftsub@f1:	
  1020                           
  1021                           ; 3 bytes @ 0x37
  1022  0057                     	ds	3
  1023  005A                     ?_sprintf:	
  1024  005A                     sprintf@f:	
  1025                           ; 2 bytes @ 0x3A
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x3A
  1029  005A                     	ds	4
  1030  005E                     ??_sprintf:	
  1031                           
  1032                           ; 0 bytes @ 0x3E
  1033  005E                     	ds	6
  1034  0064                     ??_main:	
  1035                           
  1036                           ; 0 bytes @ 0x44
  1037  0064                     	ds	4
  1038                           
  1039                           	psect	maintext
  1040  0B38                     __pmaintext:	
  1041 ;;
  1042 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1043 ;;
  1044 ;; *************** function _main *****************
  1045 ;; Defined at:
  1046 ;;		line 33 in file "main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;		None               void
  1053 ;; Registers used:
  1054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : B00/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          0       4       0       0       0
  1063 ;;      Totals:         0       4       0       0       0
  1064 ;;Total ram usage:        4 bytes
  1065 ;; Hardware stack levels required when called:    5
  1066 ;; This function calls:
  1067 ;;		___awtoft
  1068 ;;		___ftdiv
  1069 ;;		___ftmul
  1070 ;;		_lcd_clear
  1071 ;;		_lcd_goto
  1072 ;;		_lcd_init
  1073 ;;		_lcd_puts
  1074 ;;		_pause
  1075 ;;		_sprintf
  1076 ;; This function is called by:
  1077 ;;		Startup code after reset
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           
  1082                           ;psect for function _main
  1083  0B38                     _main:	
  1084                           
  1085                           ;main.c: 35: ANSEL = 0xF0;
  1086                           
  1087                           ;incstack = 0
  1088                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1089  0B38  30F0               	movlw	240
  1090  0B39  1683               	bsf	3,5	;RP0=1, select bank3
  1091  0B3A  1703               	bsf	3,6	;RP1=1, select bank3
  1092  0B3B  0088               	movwf	8	;volatile
  1093                           
  1094                           ;main.c: 36: ANSELH = 0x00;
  1095  0B3C  0189               	clrf	9	;volatile
  1096                           
  1097                           ;main.c: 37: ADCON1 = 0b10000000;
  1098  0B3D  3080               	movlw	128
  1099  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  1100  0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  1101  0B40  009F               	movwf	31	;volatile
  1102                           
  1103                           ;main.c: 39: TRISA = 0b00000000;
  1104  0B41  0185               	clrf	5	;volatile
  1105                           
  1106                           ;main.c: 40: TRISB = 0b00000100;
  1107  0B42  3004               	movlw	4
  1108  0B43  0086               	movwf	6	;volatile
  1109                           
  1110                           ;main.c: 41: TRISE = 0b00000111;
  1111  0B44  3007               	movlw	7
  1112  0B45  0089               	movwf	9	;volatile
  1113                           
  1114                           ;main.c: 43: lcd_init();
  1115  0B46  160A  118A  241A  120A  158A  	fcall	_lcd_init
  1116                           
  1117                           ;main.c: 44: lcd_clear();
  1118  0B4B  120A  118A  2003  120A  158A  	fcall	_lcd_clear
  1119  0B50                     l3441:	
  1120                           ;main.c: 46: while(1)
  1121                           
  1122                           
  1123                           ;main.c: 47: {
  1124                           ;main.c: 48: ADCON0 = 0b00100001;
  1125  0B50  3021               	movlw	33
  1126  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0B53  009F               	movwf	31	;volatile
  1129                           
  1130                           ;main.c: 49: GO_DONE = 1;
  1131  0B54  149F               	bsf	31,1	;volatile
  1132                           
  1133                           ;main.c: 50: pause(1);
  1134  0B55  3001               	movlw	1
  1135  0B56  00F0               	movwf	pause@usvalue
  1136  0B57  3000               	movlw	0
  1137  0B58  00F1               	movwf	pause@usvalue+1
  1138  0B59  160A  118A  22C9  120A  158A  	fcall	_pause
  1139  0B5E                     l40:	
  1140                           ;main.c: 51: while(GO_DONE == 1);
  1141                           
  1142  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0B60  189F               	btfsc	31,1	;volatile
  1145  0B61  2B5E               	goto	l40
  1146                           
  1147                           ;main.c: 52: read = (ADRESH << 8)|ADRESL;
  1148  0B62  1683               	bsf	3,5	;RP0=1, select bank1
  1149  0B63  1303               	bcf	3,6	;RP1=0, select bank1
  1150  0B64  081E               	movf	30,w	;volatile
  1151  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0B67  00E4               	movwf	??_main
  1154  0B68  01E5               	clrf	??_main+1
  1155  0B69  081E               	movf	30,w	;volatile
  1156  0B6A  00E6               	movwf	??_main+2
  1157  0B6B  01E7               	clrf	??_main+3
  1158  0B6C  0866               	movf	??_main+2,w
  1159  0B6D  00E7               	movwf	??_main+3
  1160  0B6E  01E6               	clrf	??_main+2
  1161  0B6F  0864               	movf	??_main,w
  1162  0B70  0466               	iorwf	??_main+2,w
  1163  0B71  00F8               	movwf	___awtoft@c
  1164  0B72  0865               	movf	??_main+1,w
  1165  0B73  0467               	iorwf	??_main+3,w
  1166  0B74  00F9               	movwf	___awtoft@c+1
  1167  0B75  160A  118A  2316  120A  158A  	fcall	___awtoft
  1168  0B7A  0878               	movf	?___awtoft,w
  1169  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  1170  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0B7D  00E8               	movwf	_read
  1172  0B7E  0879               	movf	?___awtoft+1,w
  1173  0B7F  00E9               	movwf	_read+1
  1174  0B80  087A               	movf	?___awtoft+2,w
  1175  0B81  00EA               	movwf	_read+2
  1176                           
  1177                           ;main.c: 53: read = (read*5.0)/1023;
  1178  0B82  30C0               	movlw	192
  1179  0B83  00B7               	movwf	___ftdiv@f2
  1180  0B84  307F               	movlw	127
  1181  0B85  00B8               	movwf	___ftdiv@f2+1
  1182  0B86  3044               	movlw	68
  1183  0B87  00B9               	movwf	___ftdiv@f2+2
  1184  0B88  3000               	movlw	0
  1185  0B89  00A7               	movwf	___ftmul@f1
  1186  0B8A  30A0               	movlw	160
  1187  0B8B  00A8               	movwf	___ftmul@f1+1
  1188  0B8C  3040               	movlw	64
  1189  0B8D  00A9               	movwf	___ftmul@f1+2
  1190  0B8E  0868               	movf	_read,w
  1191  0B8F  00AA               	movwf	___ftmul@f2
  1192  0B90  0869               	movf	_read+1,w
  1193  0B91  00AB               	movwf	___ftmul@f2+1
  1194  0B92  086A               	movf	_read+2,w
  1195  0B93  00AC               	movwf	___ftmul@f2+2
  1196  0B94  120A  158A  202A  120A  158A  	fcall	___ftmul
  1197  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0B9B  0827               	movf	?___ftmul,w
  1200  0B9C  00BA               	movwf	___ftdiv@f1
  1201  0B9D  0828               	movf	?___ftmul+1,w
  1202  0B9E  00BB               	movwf	___ftdiv@f1+1
  1203  0B9F  0829               	movf	?___ftmul+2,w
  1204  0BA0  00BC               	movwf	___ftdiv@f1+2
  1205  0BA1  160A  118A  2685  120A  158A  	fcall	___ftdiv
  1206  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0BA8  0837               	movf	?___ftdiv,w
  1209  0BA9  00E8               	movwf	_read
  1210  0BAA  0838               	movf	?___ftdiv+1,w
  1211  0BAB  00E9               	movwf	_read+1
  1212  0BAC  0839               	movf	?___ftdiv+2,w
  1213  0BAD  00EA               	movwf	_read+2
  1214                           
  1215                           ;main.c: 54: lcd_goto(0x80);
  1216  0BAE  3080               	movlw	128
  1217  0BAF  120A  158A  2000  120A  158A  	fcall	_lcd_goto
  1218                           
  1219                           ;main.c: 55: sprintf(buffer,"V1=%.3f",read);
  1220  0BB4  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1221  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0BB7  00E4               	movwf	??_main
  1224  0BB8  0864               	movf	??_main,w
  1225  0BB9  00DA               	movwf	sprintf@f
  1226  0BBA  0868               	movf	_read,w
  1227  0BBB  00DB               	movwf	?_sprintf+1
  1228  0BBC  0869               	movf	_read+1,w
  1229  0BBD  00DC               	movwf	?_sprintf+2
  1230  0BBE  086A               	movf	_read+2,w
  1231  0BBF  00DD               	movwf	?_sprintf+3
  1232  0BC0  30B7               	movlw	(low (_buffer| 0))& (0+255)
  1233  0BC1  120A  118A  21AE  120A  158A  	fcall	_sprintf
  1234                           
  1235                           ;main.c: 56: lcd_puts(buffer);
  1236  0BC6  30B7               	movlw	(low (_buffer| 0))& (0+255)
  1237  0BC7  160A  118A  22DF  120A  158A  	fcall	_lcd_puts
  1238                           
  1239                           ;main.c: 57: pause(50);
  1240  0BCC  3032               	movlw	50
  1241  0BCD  00F0               	movwf	pause@usvalue
  1242  0BCE  3000               	movlw	0
  1243  0BCF  00F1               	movwf	pause@usvalue+1
  1244  0BD0  160A  118A  22C9  120A  158A  	fcall	_pause
  1245                           
  1246                           ;main.c: 59: ADCON0 = 0b00010101;
  1247  0BD5  3015               	movlw	21
  1248  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0BD8  009F               	movwf	31	;volatile
  1251                           
  1252                           ;main.c: 60: GO_DONE = 1;
  1253  0BD9  149F               	bsf	31,1	;volatile
  1254                           
  1255                           ;main.c: 61: pause(1);
  1256  0BDA  3001               	movlw	1
  1257  0BDB  00F0               	movwf	pause@usvalue
  1258  0BDC  3000               	movlw	0
  1259  0BDD  00F1               	movwf	pause@usvalue+1
  1260  0BDE  160A  118A  22C9  120A  158A  	fcall	_pause
  1261  0BE3                     l43:	
  1262                           ;main.c: 62: while(GO_DONE == 1);
  1263                           
  1264  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0BE5  189F               	btfsc	31,1	;volatile
  1267  0BE6  2BE3               	goto	l43
  1268                           
  1269                           ;main.c: 63: read = (ADRESH << 8)|ADRESL;
  1270  0BE7  1683               	bsf	3,5	;RP0=1, select bank1
  1271  0BE8  1303               	bcf	3,6	;RP1=0, select bank1
  1272  0BE9  081E               	movf	30,w	;volatile
  1273  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0BEC  00E4               	movwf	??_main
  1276  0BED  01E5               	clrf	??_main+1
  1277  0BEE  081E               	movf	30,w	;volatile
  1278  0BEF  00E6               	movwf	??_main+2
  1279  0BF0  01E7               	clrf	??_main+3
  1280  0BF1  0866               	movf	??_main+2,w
  1281  0BF2  00E7               	movwf	??_main+3
  1282  0BF3  01E6               	clrf	??_main+2
  1283  0BF4  0864               	movf	??_main,w
  1284  0BF5  0466               	iorwf	??_main+2,w
  1285  0BF6  00F8               	movwf	___awtoft@c
  1286  0BF7  0865               	movf	??_main+1,w
  1287  0BF8  0467               	iorwf	??_main+3,w
  1288  0BF9  00F9               	movwf	___awtoft@c+1
  1289  0BFA  160A  118A  2316  120A  158A  	fcall	___awtoft
  1290  0BFF  0878               	movf	?___awtoft,w
  1291  0C00  1283               	bcf	3,5	;RP0=0, select bank0
  1292  0C01  1303               	bcf	3,6	;RP1=0, select bank0
  1293  0C02  00E8               	movwf	_read
  1294  0C03  0879               	movf	?___awtoft+1,w
  1295  0C04  00E9               	movwf	_read+1
  1296  0C05  087A               	movf	?___awtoft+2,w
  1297  0C06  00EA               	movwf	_read+2
  1298                           
  1299                           ;main.c: 64: read = (read*5.0)/1023;
  1300  0C07  30C0               	movlw	192
  1301  0C08  00B7               	movwf	___ftdiv@f2
  1302  0C09  307F               	movlw	127
  1303  0C0A  00B8               	movwf	___ftdiv@f2+1
  1304  0C0B  3044               	movlw	68
  1305  0C0C  00B9               	movwf	___ftdiv@f2+2
  1306  0C0D  3000               	movlw	0
  1307  0C0E  00A7               	movwf	___ftmul@f1
  1308  0C0F  30A0               	movlw	160
  1309  0C10  00A8               	movwf	___ftmul@f1+1
  1310  0C11  3040               	movlw	64
  1311  0C12  00A9               	movwf	___ftmul@f1+2
  1312  0C13  0868               	movf	_read,w
  1313  0C14  00AA               	movwf	___ftmul@f2
  1314  0C15  0869               	movf	_read+1,w
  1315  0C16  00AB               	movwf	___ftmul@f2+1
  1316  0C17  086A               	movf	_read+2,w
  1317  0C18  00AC               	movwf	___ftmul@f2+2
  1318  0C19  120A  158A  202A  120A  158A  	fcall	___ftmul
  1319  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0C20  0827               	movf	?___ftmul,w
  1322  0C21  00BA               	movwf	___ftdiv@f1
  1323  0C22  0828               	movf	?___ftmul+1,w
  1324  0C23  00BB               	movwf	___ftdiv@f1+1
  1325  0C24  0829               	movf	?___ftmul+2,w
  1326  0C25  00BC               	movwf	___ftdiv@f1+2
  1327  0C26  160A  118A  2685  120A  158A  	fcall	___ftdiv
  1328  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0C2D  0837               	movf	?___ftdiv,w
  1331  0C2E  00E8               	movwf	_read
  1332  0C2F  0838               	movf	?___ftdiv+1,w
  1333  0C30  00E9               	movwf	_read+1
  1334  0C31  0839               	movf	?___ftdiv+2,w
  1335  0C32  00EA               	movwf	_read+2
  1336                           
  1337                           ;main.c: 65: lcd_goto(0x89);
  1338  0C33  3089               	movlw	137
  1339  0C34  120A  158A  2000  120A  158A  	fcall	_lcd_goto
  1340                           
  1341                           ;main.c: 66: sprintf(buffer,"V2=%.3f",read);
  1342  0C39  307F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1343  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0C3C  00E4               	movwf	??_main
  1346  0C3D  0864               	movf	??_main,w
  1347  0C3E  00DA               	movwf	sprintf@f
  1348  0C3F  0868               	movf	_read,w
  1349  0C40  00DB               	movwf	?_sprintf+1
  1350  0C41  0869               	movf	_read+1,w
  1351  0C42  00DC               	movwf	?_sprintf+2
  1352  0C43  086A               	movf	_read+2,w
  1353  0C44  00DD               	movwf	?_sprintf+3
  1354  0C45  30B7               	movlw	(low (_buffer| 0))& (0+255)
  1355  0C46  120A  118A  21AE  120A  158A  	fcall	_sprintf
  1356                           
  1357                           ;main.c: 67: lcd_puts(buffer);
  1358  0C4B  30B7               	movlw	(low (_buffer| 0))& (0+255)
  1359  0C4C  160A  118A  22DF  120A  158A  	fcall	_lcd_puts
  1360                           
  1361                           ;main.c: 68: pause(50);
  1362  0C51  3032               	movlw	50
  1363  0C52  00F0               	movwf	pause@usvalue
  1364  0C53  3000               	movlw	0
  1365  0C54  00F1               	movwf	pause@usvalue+1
  1366  0C55  160A  118A  22C9  120A  158A  	fcall	_pause
  1367                           
  1368                           ;main.c: 70: ADCON0 = 0b00011001;
  1369  0C5A  3019               	movlw	25
  1370  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0C5D  009F               	movwf	31	;volatile
  1373                           
  1374                           ;main.c: 71: GO_DONE = 1;
  1375  0C5E  149F               	bsf	31,1	;volatile
  1376                           
  1377                           ;main.c: 72: pause(1);
  1378  0C5F  3001               	movlw	1
  1379  0C60  00F0               	movwf	pause@usvalue
  1380  0C61  3000               	movlw	0
  1381  0C62  00F1               	movwf	pause@usvalue+1
  1382  0C63  160A  118A  22C9  120A  158A  	fcall	_pause
  1383  0C68                     l46:	
  1384                           ;main.c: 73: while(GO_DONE == 1);
  1385                           
  1386  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0C6A  189F               	btfsc	31,1	;volatile
  1389  0C6B  2C68               	goto	l46
  1390                           
  1391                           ;main.c: 74: read = (ADRESH << 8)|ADRESL;
  1392  0C6C  1683               	bsf	3,5	;RP0=1, select bank1
  1393  0C6D  1303               	bcf	3,6	;RP1=0, select bank1
  1394  0C6E  081E               	movf	30,w	;volatile
  1395  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0C70  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0C71  00E4               	movwf	??_main
  1398  0C72  01E5               	clrf	??_main+1
  1399  0C73  081E               	movf	30,w	;volatile
  1400  0C74  00E6               	movwf	??_main+2
  1401  0C75  01E7               	clrf	??_main+3
  1402  0C76  0866               	movf	??_main+2,w
  1403  0C77  00E7               	movwf	??_main+3
  1404  0C78  01E6               	clrf	??_main+2
  1405  0C79  0864               	movf	??_main,w
  1406  0C7A  0466               	iorwf	??_main+2,w
  1407  0C7B  00F8               	movwf	___awtoft@c
  1408  0C7C  0865               	movf	??_main+1,w
  1409  0C7D  0467               	iorwf	??_main+3,w
  1410  0C7E  00F9               	movwf	___awtoft@c+1
  1411  0C7F  160A  118A  2316  120A  158A  	fcall	___awtoft
  1412  0C84  0878               	movf	?___awtoft,w
  1413  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  1414  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  1415  0C87  00E8               	movwf	_read
  1416  0C88  0879               	movf	?___awtoft+1,w
  1417  0C89  00E9               	movwf	_read+1
  1418  0C8A  087A               	movf	?___awtoft+2,w
  1419  0C8B  00EA               	movwf	_read+2
  1420                           
  1421                           ;main.c: 75: read = (read*5.0)/1023;
  1422  0C8C  30C0               	movlw	192
  1423  0C8D  00B7               	movwf	___ftdiv@f2
  1424  0C8E  307F               	movlw	127
  1425  0C8F  00B8               	movwf	___ftdiv@f2+1
  1426  0C90  3044               	movlw	68
  1427  0C91  00B9               	movwf	___ftdiv@f2+2
  1428  0C92  3000               	movlw	0
  1429  0C93  00A7               	movwf	___ftmul@f1
  1430  0C94  30A0               	movlw	160
  1431  0C95  00A8               	movwf	___ftmul@f1+1
  1432  0C96  3040               	movlw	64
  1433  0C97  00A9               	movwf	___ftmul@f1+2
  1434  0C98  0868               	movf	_read,w
  1435  0C99  00AA               	movwf	___ftmul@f2
  1436  0C9A  0869               	movf	_read+1,w
  1437  0C9B  00AB               	movwf	___ftmul@f2+1
  1438  0C9C  086A               	movf	_read+2,w
  1439  0C9D  00AC               	movwf	___ftmul@f2+2
  1440  0C9E  120A  158A  202A  120A  158A  	fcall	___ftmul
  1441  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0CA5  0827               	movf	?___ftmul,w
  1444  0CA6  00BA               	movwf	___ftdiv@f1
  1445  0CA7  0828               	movf	?___ftmul+1,w
  1446  0CA8  00BB               	movwf	___ftdiv@f1+1
  1447  0CA9  0829               	movf	?___ftmul+2,w
  1448  0CAA  00BC               	movwf	___ftdiv@f1+2
  1449  0CAB  160A  118A  2685  120A  158A  	fcall	___ftdiv
  1450  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0CB2  0837               	movf	?___ftdiv,w
  1453  0CB3  00E8               	movwf	_read
  1454  0CB4  0838               	movf	?___ftdiv+1,w
  1455  0CB5  00E9               	movwf	_read+1
  1456  0CB6  0839               	movf	?___ftdiv+2,w
  1457  0CB7  00EA               	movwf	_read+2
  1458                           
  1459                           ;main.c: 76: lcd_goto(0xC0);
  1460  0CB8  30C0               	movlw	192
  1461  0CB9  120A  158A  2000  120A  158A  	fcall	_lcd_goto
  1462                           
  1463                           ;main.c: 77: sprintf(buffer,"V3=%.3f",read);
  1464  0CBE  3087               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1465  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0CC1  00E4               	movwf	??_main
  1468  0CC2  0864               	movf	??_main,w
  1469  0CC3  00DA               	movwf	sprintf@f
  1470  0CC4  0868               	movf	_read,w
  1471  0CC5  00DB               	movwf	?_sprintf+1
  1472  0CC6  0869               	movf	_read+1,w
  1473  0CC7  00DC               	movwf	?_sprintf+2
  1474  0CC8  086A               	movf	_read+2,w
  1475  0CC9  00DD               	movwf	?_sprintf+3
  1476  0CCA  30B7               	movlw	(low (_buffer| 0))& (0+255)
  1477  0CCB  120A  118A  21AE  120A  158A  	fcall	_sprintf
  1478                           
  1479                           ;main.c: 78: lcd_puts(buffer);
  1480  0CD0  30B7               	movlw	(low (_buffer| 0))& (0+255)
  1481  0CD1  160A  118A  22DF  120A  158A  	fcall	_lcd_puts
  1482                           
  1483                           ;main.c: 79: pause(50);
  1484  0CD6  3032               	movlw	50
  1485  0CD7  00F0               	movwf	pause@usvalue
  1486  0CD8  3000               	movlw	0
  1487  0CD9  00F1               	movwf	pause@usvalue+1
  1488  0CDA  160A  118A  22C9  120A  158A  	fcall	_pause
  1489                           
  1490                           ;main.c: 81: ADCON0 = 0b00011101;
  1491  0CDF  301D               	movlw	29
  1492  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  1493  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  1494  0CE2  009F               	movwf	31	;volatile
  1495                           
  1496                           ;main.c: 82: GO_DONE = 1;
  1497  0CE3  149F               	bsf	31,1	;volatile
  1498                           
  1499                           ;main.c: 83: pause(1);
  1500  0CE4  3001               	movlw	1
  1501  0CE5  00F0               	movwf	pause@usvalue
  1502  0CE6  3000               	movlw	0
  1503  0CE7  00F1               	movwf	pause@usvalue+1
  1504  0CE8  160A  118A  22C9  120A  158A  	fcall	_pause
  1505  0CED                     l49:	
  1506                           ;main.c: 84: while(GO_DONE == 1);
  1507                           
  1508  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0CEF  189F               	btfsc	31,1	;volatile
  1511  0CF0  2CED               	goto	l49
  1512                           
  1513                           ;main.c: 85: read = (ADRESH << 8)|ADRESL;
  1514  0CF1  1683               	bsf	3,5	;RP0=1, select bank1
  1515  0CF2  1303               	bcf	3,6	;RP1=0, select bank1
  1516  0CF3  081E               	movf	30,w	;volatile
  1517  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0CF6  00E4               	movwf	??_main
  1520  0CF7  01E5               	clrf	??_main+1
  1521  0CF8  081E               	movf	30,w	;volatile
  1522  0CF9  00E6               	movwf	??_main+2
  1523  0CFA  01E7               	clrf	??_main+3
  1524  0CFB  0866               	movf	??_main+2,w
  1525  0CFC  00E7               	movwf	??_main+3
  1526  0CFD  01E6               	clrf	??_main+2
  1527  0CFE  0864               	movf	??_main,w
  1528  0CFF  0466               	iorwf	??_main+2,w
  1529  0D00  00F8               	movwf	___awtoft@c
  1530  0D01  0865               	movf	??_main+1,w
  1531  0D02  0467               	iorwf	??_main+3,w
  1532  0D03  00F9               	movwf	___awtoft@c+1
  1533  0D04  160A  118A  2316  120A  158A  	fcall	___awtoft
  1534  0D09  0878               	movf	?___awtoft,w
  1535  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0D0C  00E8               	movwf	_read
  1538  0D0D  0879               	movf	?___awtoft+1,w
  1539  0D0E  00E9               	movwf	_read+1
  1540  0D0F  087A               	movf	?___awtoft+2,w
  1541  0D10  00EA               	movwf	_read+2
  1542                           
  1543                           ;main.c: 86: read = (read*5.0)/1023;
  1544  0D11  30C0               	movlw	192
  1545  0D12  00B7               	movwf	___ftdiv@f2
  1546  0D13  307F               	movlw	127
  1547  0D14  00B8               	movwf	___ftdiv@f2+1
  1548  0D15  3044               	movlw	68
  1549  0D16  00B9               	movwf	___ftdiv@f2+2
  1550  0D17  3000               	movlw	0
  1551  0D18  00A7               	movwf	___ftmul@f1
  1552  0D19  30A0               	movlw	160
  1553  0D1A  00A8               	movwf	___ftmul@f1+1
  1554  0D1B  3040               	movlw	64
  1555  0D1C  00A9               	movwf	___ftmul@f1+2
  1556  0D1D  0868               	movf	_read,w
  1557  0D1E  00AA               	movwf	___ftmul@f2
  1558  0D1F  0869               	movf	_read+1,w
  1559  0D20  00AB               	movwf	___ftmul@f2+1
  1560  0D21  086A               	movf	_read+2,w
  1561  0D22  00AC               	movwf	___ftmul@f2+2
  1562  0D23  120A  158A  202A  120A  158A  	fcall	___ftmul
  1563  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0D2A  0827               	movf	?___ftmul,w
  1566  0D2B  00BA               	movwf	___ftdiv@f1
  1567  0D2C  0828               	movf	?___ftmul+1,w
  1568  0D2D  00BB               	movwf	___ftdiv@f1+1
  1569  0D2E  0829               	movf	?___ftmul+2,w
  1570  0D2F  00BC               	movwf	___ftdiv@f1+2
  1571  0D30  160A  118A  2685  120A  158A  	fcall	___ftdiv
  1572  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0D37  0837               	movf	?___ftdiv,w
  1575  0D38  00E8               	movwf	_read
  1576  0D39  0838               	movf	?___ftdiv+1,w
  1577  0D3A  00E9               	movwf	_read+1
  1578  0D3B  0839               	movf	?___ftdiv+2,w
  1579  0D3C  00EA               	movwf	_read+2
  1580                           
  1581                           ;main.c: 87: lcd_goto(0xC9);
  1582  0D3D  30C9               	movlw	201
  1583  0D3E  120A  158A  2000  120A  158A  	fcall	_lcd_goto
  1584                           
  1585                           ;main.c: 88: sprintf(buffer,"V4=%.3f",read);
  1586  0D43  308F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1587  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0D46  00E4               	movwf	??_main
  1590  0D47  0864               	movf	??_main,w
  1591  0D48  00DA               	movwf	sprintf@f
  1592  0D49  0868               	movf	_read,w
  1593  0D4A  00DB               	movwf	?_sprintf+1
  1594  0D4B  0869               	movf	_read+1,w
  1595  0D4C  00DC               	movwf	?_sprintf+2
  1596  0D4D  086A               	movf	_read+2,w
  1597  0D4E  00DD               	movwf	?_sprintf+3
  1598  0D4F  30B7               	movlw	(low (_buffer| 0))& (0+255)
  1599  0D50  120A  118A  21AE  120A  158A  	fcall	_sprintf
  1600                           
  1601                           ;main.c: 89: lcd_puts(buffer);
  1602  0D55  30B7               	movlw	(low (_buffer| 0))& (0+255)
  1603  0D56  160A  118A  22DF  120A  158A  	fcall	_lcd_puts
  1604                           
  1605                           ;main.c: 90: pause(50);
  1606  0D5B  3032               	movlw	50
  1607  0D5C  00F0               	movwf	pause@usvalue
  1608  0D5D  3000               	movlw	0
  1609  0D5E  00F1               	movwf	pause@usvalue+1
  1610  0D5F  160A  118A  22C9  120A  158A  	fcall	_pause
  1611  0D64  2B50               	goto	l3441
  1612  0D65                     __end_of_main:	
  1613                           ;main.c: 91: }
  1614                           ;main.c: 92: return;
  1615                           
  1616                           
  1617                           	psect	text1
  1618  01AE                     __ptext1:	
  1619 ;; *************** function _sprintf *****************
  1620 ;; Defined at:
  1621 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  sp              1    wreg     PTR unsigned char 
  1624 ;;		 -> buffer(20), 
  1625 ;;  f               1   58[BANK0 ] PTR const unsigned char 
  1626 ;;		 -> STR_4(8), STR_3(8), STR_2(8), STR_1(8), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  1629 ;;		 -> buffer(20), 
  1630 ;;  tmpval          4   12[BANK1 ] struct .
  1631 ;;  val             4    6[BANK1 ] unsigned long 
  1632 ;;  fval            3   19[BANK1 ] unsigned long 
  1633 ;;  prec            2   16[BANK1 ] int 
  1634 ;;  exp             2   10[BANK1 ] int 
  1635 ;;  flag            2    4[BANK1 ] unsigned short 
  1636 ;;  cp              2    0        PTR const unsigned char 
  1637 ;;  len             2    0        unsigned int 
  1638 ;;  width           2    0        int 
  1639 ;;  c               1   22[BANK1 ] char 
  1640 ;;  ap              1    3[BANK1 ] PTR void [1]
  1641 ;;		 -> ?_sprintf(2), 
  1642 ;;  d               1    0        unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  2   58[BANK0 ] int 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       4       0       0       0
  1653 ;;      Locals:         0       0      23       0       0
  1654 ;;      Temps:          0       6       0       0       0
  1655 ;;      Totals:         0      10      23       0       0
  1656 ;;Total ram usage:       33 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    3
  1659 ;; This function calls:
  1660 ;;		___awdiv
  1661 ;;		___ftadd
  1662 ;;		___ftge
  1663 ;;		___ftmul
  1664 ;;		___ftneg
  1665 ;;		___ftsub
  1666 ;;		___fttol
  1667 ;;		___lldiv
  1668 ;;		___llmod
  1669 ;;		___lltoft
  1670 ;;		___wmul
  1671 ;;		__div_to_l_
  1672 ;;		__tdiv_to_l_
  1673 ;;		_fround
  1674 ;;		_isdigit
  1675 ;;		_scale
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           
  1682                           ;psect for function _sprintf
  1683  01AE                     _sprintf:	
  1684                           
  1685                           ;incstack = 0
  1686                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1687                           ;sprintf@sp stored from wreg
  1688  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  1689  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  1690  01B0  00B2               	movwf	sprintf@sp^(0+128)
  1691                           
  1692                           ;doprnt.c: 494: va_list ap;
  1693                           ;doprnt.c: 499: signed char c;
  1694                           ;doprnt.c: 501: int width;
  1695                           ;doprnt.c: 504: int prec;
  1696                           ;doprnt.c: 508: unsigned short flag;
  1697                           ;doprnt.c: 515: char d;
  1698                           ;doprnt.c: 516: double fval;
  1699                           ;doprnt.c: 517: int exp;
  1700                           ;doprnt.c: 523: union {
  1701                           ;doprnt.c: 524: unsigned long vd;
  1702                           ;doprnt.c: 525: double integ;
  1703                           ;doprnt.c: 526: } tmpval;
  1704                           ;doprnt.c: 528: unsigned long val;
  1705                           ;doprnt.c: 529: unsigned len;
  1706                           ;doprnt.c: 530: const char * cp;
  1707                           ;doprnt.c: 533: *ap = __va_start();
  1708  01B1  305B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1709  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1710  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1711  01B4  00DE               	movwf	??_sprintf
  1712  01B5  085E               	movf	??_sprintf,w
  1713  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  1714  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  1715  01B8  00A3               	movwf	sprintf@ap^(0+128)
  1716  01B9                     l3359:	
  1717                           ;doprnt.c: 536: while(c = *f++) {
  1718                           
  1719  01B9  3001               	movlw	1
  1720  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1721  01BB  07DA               	addwf	sprintf@f,f
  1722  01BC  30FF               	movlw	-1
  1723  01BD  075A               	addwf	sprintf@f,w
  1724  01BE  0084               	movwf	4
  1725  01BF  160A  118A  2000  120A  118A  	fcall	stringdir
  1726  01C4  00DE               	movwf	??_sprintf
  1727  01C5  085E               	movf	??_sprintf,w
  1728  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  1729  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  1730  01C8  00B6               	movwf	sprintf@c^(0+128)
  1731  01C9  0836               	movf	sprintf@c^(0+128),w
  1732  01CA  1903               	btfsc	3,2
  1733  01CB  2FED               	goto	l3361
  1734                           
  1735                           ;doprnt.c: 538: if(c != '%')
  1736  01CC  3025               	movlw	37
  1737  01CD  0636               	xorwf	sprintf@c^(0+128),w
  1738  01CE  1903               	btfsc	3,2
  1739  01CF  29D4               	goto	l3179
  1740                           
  1741                           ;doprnt.c: 540: {
  1742                           ;doprnt.c: 541: ((*sp++ = (c)));
  1743  01D0  0836               	movf	sprintf@c^(0+128),w
  1744  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1745  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1746  01D3  2FDC               	goto	L6
  1747  01D4                     l3179:	
  1748                           ;doprnt.c: 542: continue;
  1749                           
  1750                           
  1751                           ;doprnt.c: 543: }
  1752                           ;doprnt.c: 548: flag = 0;
  1753  01D4  01A4               	clrf	sprintf@flag^(0+128)
  1754  01D5  01A5               	clrf	(sprintf@flag+1)^(0+128)
  1755                           
  1756                           ;doprnt.c: 611: if(*f == '.') {
  1757  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1758  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1759  01D8  085A               	movf	sprintf@f,w
  1760  01D9  0084               	movwf	4
  1761  01DA  160A  118A  2000  120A  118A  	fcall	stringdir
  1762  01DF  3A2E               	xorlw	46
  1763  01E0  1D03               	skipz
  1764  01E1  2A32               	goto	l3195
  1765                           
  1766                           ;doprnt.c: 612: flag |= 0x4000;
  1767  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1768  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1769  01E4  1725               	bsf	(sprintf@flag^(0+128)+1),6
  1770                           
  1771                           ;doprnt.c: 613: f++;
  1772  01E5  3001               	movlw	1
  1773  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1774  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1775  01E8  00DE               	movwf	??_sprintf
  1776  01E9  085E               	movf	??_sprintf,w
  1777  01EA  07DA               	addwf	sprintf@f,f
  1778                           
  1779                           ;doprnt.c: 620: {
  1780                           ;doprnt.c: 621: prec = 0;
  1781  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1782  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1783  01ED  01B0               	clrf	sprintf@prec^(0+128)
  1784  01EE  01B1               	clrf	(sprintf@prec+1)^(0+128)
  1785  01EF                     l3193:	
  1786                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1787                           
  1788  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1789  01F0  085A               	movf	sprintf@f,w
  1790  01F1  0084               	movwf	4
  1791  01F2  160A  118A  2000  120A  118A  	fcall	stringdir
  1792  01F7  160A  118A  22A8  120A  118A  	fcall	_isdigit
  1793  01FC  1C03               	btfss	3,0
  1794  01FD  2A3A               	goto	l3201
  1795                           
  1796                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1797  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  1798  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  1799  0200  0831               	movf	(sprintf@prec+1)^(0+128),w
  1800  0201  00F1               	movwf	___wmul@multiplier+1
  1801  0202  0830               	movf	sprintf@prec^(0+128),w
  1802  0203  00F0               	movwf	___wmul@multiplier
  1803  0204  300A               	movlw	10
  1804  0205  00F2               	movwf	___wmul@multiplicand
  1805  0206  3000               	movlw	0
  1806  0207  00F3               	movwf	___wmul@multiplicand+1
  1807  0208  120A  158A  2009  120A  118A  	fcall	___wmul
  1808  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1809  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1810  020F  085A               	movf	sprintf@f,w
  1811  0210  0084               	movwf	4
  1812  0211  160A  118A  2000  120A  118A  	fcall	stringdir
  1813  0216  0770               	addwf	?___wmul,w
  1814  0217  00DE               	movwf	??_sprintf
  1815  0218  3000               	movlw	0
  1816  0219  1803               	skipnc
  1817  021A  3001               	movlw	1
  1818  021B  0771               	addwf	?___wmul+1,w
  1819  021C  00DF               	movwf	??_sprintf+1
  1820  021D  085E               	movf	??_sprintf,w
  1821  021E  3ED0               	addlw	208
  1822  021F  1683               	bsf	3,5	;RP0=1, select bank1
  1823  0220  1303               	bcf	3,6	;RP1=0, select bank1
  1824  0221  00B0               	movwf	sprintf@prec^(0+128)
  1825  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1826  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1827  0224  085F               	movf	??_sprintf+1,w
  1828  0225  1803               	skipnc
  1829  0226  3E01               	addlw	1
  1830  0227  3EFF               	addlw	255
  1831  0228  1683               	bsf	3,5	;RP0=1, select bank1
  1832  0229  1303               	bcf	3,6	;RP1=0, select bank1
  1833  022A  00B1               	movwf	(sprintf@prec+1)^(0+128)
  1834  022B  3001               	movlw	1
  1835  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1836  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1837  022E  00DE               	movwf	??_sprintf
  1838  022F  085E               	movf	??_sprintf,w
  1839  0230  07DA               	addwf	sprintf@f,f
  1840  0231  29EF               	goto	l3193
  1841  0232                     l3195:	
  1842                           ;doprnt.c: 624: }
  1843                           ;doprnt.c: 625: } else {
  1844                           
  1845                           
  1846                           ;doprnt.c: 626: prec = 0;
  1847  0232  1683               	bsf	3,5	;RP0=1, select bank1
  1848  0233  1303               	bcf	3,6	;RP1=0, select bank1
  1849  0234  01B0               	clrf	sprintf@prec^(0+128)
  1850  0235  01B1               	clrf	(sprintf@prec+1)^(0+128)
  1851                           
  1852                           ;doprnt.c: 628: flag |= 0x1000;
  1853  0236  1625               	bsf	(sprintf@flag^(0+128)+1),4
  1854                           
  1855                           ;doprnt.c: 630: }
  1856                           ;doprnt.c: 635: switch(c = *f++) {
  1857  0237  2A3A               	goto	l3201
  1858  0238                     l975:	
  1859                           ;doprnt.c: 662: case 'f':
  1860                           
  1861                           ;doprnt.c: 638: goto alldone;
  1862                           
  1863                           ;doprnt.c: 637: case 0:
  1864                           
  1865                           
  1866                           ;doprnt.c: 663: flag |= 0x400;
  1867  0238  1525               	bsf	(sprintf@flag^(0+128)+1),2
  1868                           
  1869                           ;doprnt.c: 664: break;
  1870  0239  2A50               	goto	l3203
  1871  023A                     l3201:	
  1872                           ;doprnt.c: 822: }
  1873                           
  1874                           ;doprnt.c: 813: continue;
  1875                           
  1876                           ;doprnt.c: 802: default:
  1877                           
  1878  023A  3001               	movlw	1
  1879  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1880  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1881  023D  07DA               	addwf	sprintf@f,f
  1882  023E  30FF               	movlw	-1
  1883  023F  075A               	addwf	sprintf@f,w
  1884  0240  0084               	movwf	4
  1885  0241  160A  118A  2000  120A  118A  	fcall	stringdir
  1886  0246  1683               	bsf	3,5	;RP0=1, select bank1
  1887  0247  1303               	bcf	3,6	;RP1=0, select bank1
  1888  0248  00B6               	movwf	sprintf@c^(0+128)
  1889                           
  1890                           ; Switch size 1, requested type "space"
  1891                           ; Number of cases is 2, Range of values is 0 to 102
  1892                           ; switch strategies available:
  1893                           ; Name         Instructions Cycles
  1894                           ; simple_byte            7     4 (average)
  1895                           ; jumptable            260     6 (fixed)
  1896                           ;	Chosen strategy is simple_byte
  1897  0249  3A00               	xorlw	0	; case 0
  1898  024A  1903               	skipnz
  1899  024B  2FED               	goto	l3361
  1900  024C  3A66               	xorlw	102	; case 102
  1901  024D  1903               	skipnz
  1902  024E  2A38               	goto	l975
  1903  024F  29B9               	goto	l3359
  1904  0250                     l3203:	
  1905                           
  1906                           ;doprnt.c: 825: if(flag & (0x700)) {
  1907  0250  3000               	movlw	0
  1908  0251  0524               	andwf	sprintf@flag^(0+128),w
  1909  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0254  00DE               	movwf	??_sprintf
  1912  0255  3007               	movlw	7
  1913  0256  1683               	bsf	3,5	;RP0=1, select bank1
  1914  0257  1303               	bcf	3,6	;RP1=0, select bank1
  1915  0258  0525               	andwf	(sprintf@flag+1)^(0+128),w
  1916  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1917  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1918  025B  00DF               	movwf	??_sprintf+1
  1919  025C  085E               	movf	??_sprintf,w
  1920  025D  045F               	iorwf	??_sprintf+1,w
  1921  025E  1903               	btfsc	3,2
  1922  025F  2F6F               	goto	l3343
  1923                           
  1924                           ;doprnt.c: 827: if(flag & 0x1000)
  1925  0260  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0261  1303               	bcf	3,6	;RP1=0, select bank1
  1927  0262  1E25               	btfss	(sprintf@flag+1)^(0+128),4
  1928  0263  2A68               	goto	l3209
  1929                           
  1930                           ;doprnt.c: 829: prec = 6;
  1931  0264  3006               	movlw	6
  1932  0265  00B0               	movwf	sprintf@prec^(0+128)
  1933  0266  3000               	movlw	0
  1934  0267  00B1               	movwf	(sprintf@prec^(0+128)+1)
  1935  0268                     l3209:	
  1936                           
  1937                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1938  0268  0823               	movf	sprintf@ap^(0+128),w
  1939  0269  0084               	movwf	4
  1940  026A  1383               	bcf	3,7	;select IRP bank0
  1941  026B  0800               	movf	0,w
  1942  026C  00B3               	movwf	sprintf@fval^(0+128)
  1943  026D  0A84               	incf	4,f
  1944  026E  0800               	movf	0,w
  1945  026F  00B4               	movwf	(sprintf@fval+1)^(0+128)
  1946  0270  0A84               	incf	4,f
  1947  0271  0800               	movf	0,w
  1948  0272  00B5               	movwf	(sprintf@fval+2)^(0+128)
  1949  0273  3003               	movlw	3
  1950  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0276  00DE               	movwf	??_sprintf
  1953  0277  085E               	movf	??_sprintf,w
  1954  0278  1683               	bsf	3,5	;RP0=1, select bank1
  1955  0279  1303               	bcf	3,6	;RP1=0, select bank1
  1956  027A  07A3               	addwf	sprintf@ap^(0+128),f
  1957                           
  1958                           ;doprnt.c: 831: if(fval < 0.0) {
  1959  027B  0833               	movf	sprintf@fval^(0+128),w
  1960  027C  00F0               	movwf	___ftge@ff1
  1961  027D  0834               	movf	(sprintf@fval+1)^(0+128),w
  1962  027E  00F1               	movwf	___ftge@ff1+1
  1963  027F  0835               	movf	(sprintf@fval+2)^(0+128),w
  1964  0280  00F2               	movwf	___ftge@ff1+2
  1965  0281  3000               	movlw	0
  1966  0282  00F3               	movwf	___ftge@ff2
  1967  0283  3000               	movlw	0
  1968  0284  00F4               	movwf	___ftge@ff2+1
  1969  0285  3000               	movlw	0
  1970  0286  00F5               	movwf	___ftge@ff2+2
  1971  0287  160A  118A  24D0  120A  118A  	fcall	___ftge
  1972  028C  1803               	btfsc	3,0
  1973  028D  2AA7               	goto	l3219
  1974                           
  1975                           ;doprnt.c: 832: fval = -fval;
  1976  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1977  028F  1303               	bcf	3,6	;RP1=0, select bank1
  1978  0290  0833               	movf	sprintf@fval^(0+128),w
  1979  0291  00F0               	movwf	___ftneg@f1
  1980  0292  0834               	movf	(sprintf@fval+1)^(0+128),w
  1981  0293  00F1               	movwf	___ftneg@f1+1
  1982  0294  0835               	movf	(sprintf@fval+2)^(0+128),w
  1983  0295  00F2               	movwf	___ftneg@f1+2
  1984  0296  160A  118A  228C  120A  118A  	fcall	___ftneg
  1985  029B  0870               	movf	?___ftneg,w
  1986  029C  1683               	bsf	3,5	;RP0=1, select bank1
  1987  029D  1303               	bcf	3,6	;RP1=0, select bank1
  1988  029E  00B3               	movwf	sprintf@fval^(0+128)
  1989  029F  0871               	movf	?___ftneg+1,w
  1990  02A0  00B4               	movwf	(sprintf@fval+1)^(0+128)
  1991  02A1  0872               	movf	?___ftneg+2,w
  1992  02A2  00B5               	movwf	(sprintf@fval+2)^(0+128)
  1993                           
  1994                           ;doprnt.c: 833: flag |= 0x03;
  1995  02A3  3003               	movlw	3
  1996  02A4  04A4               	iorwf	sprintf@flag^(0+128),f
  1997  02A5  3000               	movlw	0
  1998  02A6  04A5               	iorwf	(sprintf@flag+1)^(0+128),f
  1999  02A7                     l3219:	
  2000                           
  2001                           ;doprnt.c: 834: }
  2002                           ;doprnt.c: 835: exp = 0;
  2003  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  2004  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  2005  02A9  01AA               	clrf	sprintf@exp^(0+128)
  2006  02AA  01AB               	clrf	(sprintf@exp+1)^(0+128)
  2007                           
  2008                           ;doprnt.c: 836: if( fval!=0) {
  2009  02AB  0835               	movf	(sprintf@fval+2)^(0+128),w
  2010  02AC  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2011  02AD  0433               	iorwf	sprintf@fval^(0+128),w
  2012  02AE  1903               	skipnz
  2013  02AF  2B9B               	goto	l3247
  2014                           
  2015                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2016  02B0  30B3               	movlw	low (sprintf@fval| 0)
  2017  02B1  0084               	movwf	4
  2018  02B2  1383               	bcf	3,7	;select IRP bank1
  2019  02B3  0800               	movf	0,w
  2020  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2021  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2022  02B6  00DE               	movwf	??_sprintf
  2023  02B7  0A84               	incf	4,f
  2024  02B8  0800               	movf	0,w
  2025  02B9  00DF               	movwf	??_sprintf+1
  2026  02BA  0A84               	incf	4,f
  2027  02BB  0800               	movf	0,w
  2028  02BC  00E0               	movwf	??_sprintf+2
  2029  02BD  0A84               	incf	4,f
  2030  02BE  0800               	movf	0,w
  2031  02BF  00E1               	movwf	??_sprintf+3
  2032  02C0  300F               	movlw	15
  2033  02C1                     u3475:	
  2034  02C1  1003               	clrc
  2035  02C2  0CE1               	rrf	??_sprintf+3,f
  2036  02C3  0CE0               	rrf	??_sprintf+2,f
  2037  02C4  0CDF               	rrf	??_sprintf+1,f
  2038  02C5  0CDE               	rrf	??_sprintf,f
  2039  02C6  3EFF               	addlw	-1
  2040  02C7  1D03               	skipz
  2041  02C8  2AC1               	goto	u3475
  2042  02C9  30FF               	movlw	255
  2043  02CA  055E               	andwf	??_sprintf,w
  2044  02CB  00E2               	movwf	??_sprintf+4
  2045  02CC  3000               	movlw	0
  2046  02CD  055F               	andwf	??_sprintf+1,w
  2047  02CE  00E3               	movwf	??_sprintf+5
  2048  02CF  0862               	movf	??_sprintf+4,w
  2049  02D0  3E82               	addlw	130
  2050  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2051  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2052  02D3  00AA               	movwf	sprintf@exp^(0+128)
  2053  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2054  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2055  02D6  0863               	movf	??_sprintf+5,w
  2056  02D7  1803               	skipnc
  2057  02D8  3E01               	addlw	1
  2058  02D9  3EFF               	addlw	255
  2059  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  2060  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  2061  02DC  00AB               	movwf	(sprintf@exp+1)^(0+128)
  2062                           
  2063                           ;doprnt.c: 838: exp--;
  2064  02DD  30FF               	movlw	255
  2065  02DE  07AA               	addwf	sprintf@exp^(0+128),f
  2066  02DF  1803               	skipnc
  2067  02E0  0AAB               	incf	(sprintf@exp+1)^(0+128),f
  2068  02E1  30FF               	movlw	255
  2069  02E2  07AB               	addwf	(sprintf@exp+1)^(0+128),f
  2070                           
  2071                           ;doprnt.c: 839: exp *= 3;
  2072  02E3  3003               	movlw	3
  2073  02E4  00F0               	movwf	___wmul@multiplier
  2074  02E5  3000               	movlw	0
  2075  02E6  00F1               	movwf	___wmul@multiplier+1
  2076  02E7  082B               	movf	(sprintf@exp+1)^(0+128),w
  2077  02E8  00F3               	movwf	___wmul@multiplicand+1
  2078  02E9  082A               	movf	sprintf@exp^(0+128),w
  2079  02EA  00F2               	movwf	___wmul@multiplicand
  2080  02EB  120A  158A  2009  120A  118A  	fcall	___wmul
  2081  02F0  0871               	movf	?___wmul+1,w
  2082  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2083  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2084  02F3  00AB               	movwf	(sprintf@exp+1)^(0+128)
  2085  02F4  0870               	movf	?___wmul,w
  2086  02F5  00AA               	movwf	sprintf@exp^(0+128)
  2087                           
  2088                           ;doprnt.c: 840: exp /= 10;
  2089  02F6  300A               	movlw	10
  2090  02F7  00F7               	movwf	___awdiv@divisor
  2091  02F8  3000               	movlw	0
  2092  02F9  00F8               	movwf	___awdiv@divisor+1
  2093  02FA  082B               	movf	(sprintf@exp+1)^(0+128),w
  2094  02FB  00FA               	movwf	___awdiv@dividend+1
  2095  02FC  082A               	movf	sprintf@exp^(0+128),w
  2096  02FD  00F9               	movwf	___awdiv@dividend
  2097  02FE  160A  118A  2475  120A  118A  	fcall	___awdiv
  2098  0303  0878               	movf	?___awdiv+1,w
  2099  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0306  00AB               	movwf	(sprintf@exp+1)^(0+128)
  2102  0307  0877               	movf	?___awdiv,w
  2103  0308  00AA               	movwf	sprintf@exp^(0+128)
  2104                           
  2105                           ;doprnt.c: 841: if(exp < 0)
  2106  0309  1FAB               	btfss	(sprintf@exp+1)^(0+128),7
  2107  030A  2B11               	goto	l3235
  2108                           
  2109                           ;doprnt.c: 842: exp--;
  2110  030B  30FF               	movlw	255
  2111  030C  07AA               	addwf	sprintf@exp^(0+128),f
  2112  030D  1803               	skipnc
  2113  030E  0AAB               	incf	(sprintf@exp+1)^(0+128),f
  2114  030F  30FF               	movlw	255
  2115  0310  07AB               	addwf	(sprintf@exp+1)^(0+128),f
  2116  0311                     l3235:	
  2117                           
  2118                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2119  0311  032A               	decf	sprintf@exp^(0+128),w
  2120  0312  3AFF               	xorlw	255
  2121  0313  120A  158A  2565  120A  118A  	fcall	_scale
  2122  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2124  031A  0837               	movf	?_scale,w
  2125  031B  1683               	bsf	3,5	;RP0=1, select bank1
  2126  031C  1303               	bcf	3,6	;RP1=0, select bank1
  2127  031D  00AC               	movwf	sprintf@tmpval^(0+128)
  2128  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2129  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0320  0838               	movf	?_scale+1,w
  2131  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2132  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2133  0323  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2134  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0326  0839               	movf	?_scale+2,w
  2137  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2138  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2139  0329  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2140                           
  2141                           ;doprnt.c: 847: tmpval.integ *= fval;
  2142  032A  0833               	movf	sprintf@fval^(0+128),w
  2143  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2144  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2145  032D  00A7               	movwf	___ftmul@f1
  2146  032E  1683               	bsf	3,5	;RP0=1, select bank1
  2147  032F  1303               	bcf	3,6	;RP1=0, select bank1
  2148  0330  0834               	movf	(sprintf@fval+1)^(0+128),w
  2149  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0333  00A8               	movwf	___ftmul@f1+1
  2152  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2153  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2154  0336  0835               	movf	(sprintf@fval+2)^(0+128),w
  2155  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0339  00A9               	movwf	___ftmul@f1+2
  2158  033A  1683               	bsf	3,5	;RP0=1, select bank1
  2159  033B  1303               	bcf	3,6	;RP1=0, select bank1
  2160  033C  082C               	movf	sprintf@tmpval^(0+128),w
  2161  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2162  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2163  033F  00AA               	movwf	___ftmul@f2
  2164  0340  1683               	bsf	3,5	;RP0=1, select bank1
  2165  0341  1303               	bcf	3,6	;RP1=0, select bank1
  2166  0342  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2167  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0345  00AB               	movwf	___ftmul@f2+1
  2170  0346  1683               	bsf	3,5	;RP0=1, select bank1
  2171  0347  1303               	bcf	3,6	;RP1=0, select bank1
  2172  0348  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2173  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2174  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2175  034B  00AC               	movwf	___ftmul@f2+2
  2176  034C  120A  158A  202A  120A  118A  	fcall	___ftmul
  2177  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0353  0827               	movf	?___ftmul,w
  2180  0354  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0355  1303               	bcf	3,6	;RP1=0, select bank1
  2182  0356  00AC               	movwf	sprintf@tmpval^(0+128)
  2183  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0359  0828               	movf	?___ftmul+1,w
  2186  035A  1683               	bsf	3,5	;RP0=1, select bank1
  2187  035B  1303               	bcf	3,6	;RP1=0, select bank1
  2188  035C  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2189  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2190  035E  1303               	bcf	3,6	;RP1=0, select bank0
  2191  035F  0829               	movf	?___ftmul+2,w
  2192  0360  1683               	bsf	3,5	;RP0=1, select bank1
  2193  0361  1303               	bcf	3,6	;RP1=0, select bank1
  2194  0362  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2195                           
  2196                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2197  0363  082C               	movf	sprintf@tmpval^(0+128),w
  2198  0364  00F0               	movwf	___ftge@ff1
  2199  0365  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2200  0366  00F1               	movwf	___ftge@ff1+1
  2201  0367  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2202  0368  00F2               	movwf	___ftge@ff1+2
  2203  0369  3000               	movlw	0
  2204  036A  00F3               	movwf	___ftge@ff2
  2205  036B  3080               	movlw	128
  2206  036C  00F4               	movwf	___ftge@ff2+1
  2207  036D  303F               	movlw	63
  2208  036E  00F5               	movwf	___ftge@ff2+2
  2209  036F  160A  118A  24D0  120A  118A  	fcall	___ftge
  2210  0374  1803               	btfsc	3,0
  2211  0375  2B7E               	goto	l3243
  2212                           
  2213                           ;doprnt.c: 849: exp--;
  2214  0376  30FF               	movlw	255
  2215  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2216  0378  1303               	bcf	3,6	;RP1=0, select bank1
  2217  0379  07AA               	addwf	sprintf@exp^(0+128),f
  2218  037A  1803               	skipnc
  2219  037B  0AAB               	incf	(sprintf@exp+1)^(0+128),f
  2220  037C  30FF               	movlw	255
  2221  037D  2B9A               	goto	L1
  2222  037E                     l3243:	
  2223                           
  2224                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2225  037E  1683               	bsf	3,5	;RP0=1, select bank1
  2226  037F  1303               	bcf	3,6	;RP1=0, select bank1
  2227  0380  082C               	movf	sprintf@tmpval^(0+128),w
  2228  0381  00F0               	movwf	___ftge@ff1
  2229  0382  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2230  0383  00F1               	movwf	___ftge@ff1+1
  2231  0384  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2232  0385  00F2               	movwf	___ftge@ff1+2
  2233  0386  3000               	movlw	0
  2234  0387  00F3               	movwf	___ftge@ff2
  2235  0388  3020               	movlw	32
  2236  0389  00F4               	movwf	___ftge@ff2+1
  2237  038A  3041               	movlw	65
  2238  038B  00F5               	movwf	___ftge@ff2+2
  2239  038C  160A  118A  24D0  120A  118A  	fcall	___ftge
  2240  0391  1C03               	btfss	3,0
  2241  0392  2B9B               	goto	l3247
  2242                           
  2243                           ;doprnt.c: 851: exp++;
  2244  0393  3001               	movlw	1
  2245  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2247  0396  07AA               	addwf	sprintf@exp^(0+128),f
  2248  0397  1803               	skipnc
  2249  0398  0AAB               	incf	(sprintf@exp+1)^(0+128),f
  2250  0399  3000               	movlw	0
  2251  039A                     L1:	
  2252  039A  07AB               	addwf	(sprintf@exp+1)^(0+128),f
  2253  039B                     l3247:	
  2254                           
  2255                           ;doprnt.c: 852: }
  2256                           ;doprnt.c: 1112: if(prec <= 12)
  2257  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2258  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2259  039D  0831               	movf	(sprintf@prec+1)^(0+128),w
  2260  039E  3A80               	xorlw	128
  2261  039F  00FF               	movwf	127
  2262  03A0  3080               	movlw	128
  2263  03A1  027F               	subwf	127,w
  2264  03A2  1D03               	skipz
  2265  03A3  2BA6               	goto	u3515
  2266  03A4  300D               	movlw	13
  2267  03A5  0230               	subwf	sprintf@prec^(0+128),w
  2268  03A6                     u3515:	
  2269  03A6  1803               	skipnc
  2270  03A7  2BE1               	goto	l3251
  2271                           
  2272                           ;doprnt.c: 1113: fval += fround(prec);
  2273  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2274  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2275  03AA  0830               	movf	sprintf@prec^(0+128),w
  2276  03AB  120A  118A  2014  120A  118A  	fcall	_fround
  2277  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2278  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2279  03B2  0837               	movf	?_fround,w
  2280  03B3  00C7               	movwf	___ftadd@f1
  2281  03B4  0838               	movf	?_fround+1,w
  2282  03B5  00C8               	movwf	___ftadd@f1+1
  2283  03B6  0839               	movf	?_fround+2,w
  2284  03B7  00C9               	movwf	___ftadd@f1+2
  2285  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  2286  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  2287  03BA  0833               	movf	sprintf@fval^(0+128),w
  2288  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2289  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2290  03BD  00CA               	movwf	___ftadd@f2
  2291  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  2292  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  2293  03C0  0834               	movf	(sprintf@fval+1)^(0+128),w
  2294  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2295  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2296  03C3  00CB               	movwf	___ftadd@f2+1
  2297  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2298  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2299  03C6  0835               	movf	(sprintf@fval+2)^(0+128),w
  2300  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2301  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2302  03C9  00CC               	movwf	___ftadd@f2+2
  2303  03CA  120A  158A  20FD  120A  118A  	fcall	___ftadd
  2304  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2305  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2306  03D1  0847               	movf	?___ftadd,w
  2307  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2308  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2309  03D4  00B3               	movwf	sprintf@fval^(0+128)
  2310  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2311  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2312  03D7  0848               	movf	?___ftadd+1,w
  2313  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2314  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2315  03DA  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2316  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2317  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2318  03DD  0849               	movf	?___ftadd+2,w
  2319  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2320  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2321  03E0  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2322  03E1                     l3251:	
  2323                           
  2324                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2325  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2326  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  2327  03E3  082B               	movf	(sprintf@exp+1)^(0+128),w
  2328  03E4  3A80               	xorlw	128
  2329  03E5  00FF               	movwf	127
  2330  03E6  3080               	movlw	128
  2331  03E7  027F               	subwf	127,w
  2332  03E8  1D03               	skipz
  2333  03E9  2BEC               	goto	u3525
  2334  03EA  300A               	movlw	10
  2335  03EB  022A               	subwf	sprintf@exp^(0+128),w
  2336  03EC                     u3525:	
  2337  03EC  1803               	skipnc
  2338  03ED  2C1F               	goto	l3259
  2339  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2340  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2341  03F0  0835               	movf	(sprintf@fval+2)^(0+128),w
  2342  03F1  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2343  03F2  0433               	iorwf	sprintf@fval^(0+128),w
  2344  03F3  1903               	skipnz
  2345  03F4  2C78               	goto	l3273
  2346  03F5  0833               	movf	sprintf@fval^(0+128),w
  2347  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2348  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2349  03F8  00C0               	movwf	___fttol@f1
  2350  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2351  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2352  03FB  0834               	movf	(sprintf@fval+1)^(0+128),w
  2353  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2354  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2355  03FE  00C1               	movwf	___fttol@f1+1
  2356  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0400  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0401  0835               	movf	(sprintf@fval+2)^(0+128),w
  2359  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0404  00C2               	movwf	___fttol@f1+2
  2362  0405  160A  118A  25F7  120A  118A  	fcall	___fttol
  2363  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2364  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2365  040C  0843               	movf	?___fttol+3,w
  2366  040D  0442               	iorwf	?___fttol+2,w
  2367  040E  0441               	iorwf	?___fttol+1,w
  2368  040F  0440               	iorwf	?___fttol,w
  2369  0410  1D03               	skipz
  2370  0411  2C78               	goto	l3273
  2371  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2373  0414  082B               	movf	(sprintf@exp+1)^(0+128),w
  2374  0415  3A80               	xorlw	128
  2375  0416  00FF               	movwf	127
  2376  0417  3080               	movlw	128
  2377  0418  027F               	subwf	127,w
  2378  0419  1D03               	skipz
  2379  041A  2C1D               	goto	u3555
  2380  041B  3002               	movlw	2
  2381  041C  022A               	subwf	sprintf@exp^(0+128),w
  2382  041D                     u3555:	
  2383  041D  1C03               	skipc
  2384  041E  2C78               	goto	l3273
  2385  041F                     l3259:	
  2386                           
  2387                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2388  041F  1683               	bsf	3,5	;RP0=1, select bank1
  2389  0420  1303               	bcf	3,6	;RP1=0, select bank1
  2390  0421  082C               	movf	sprintf@tmpval^(0+128),w
  2391  0422  00F0               	movwf	___ftge@ff1
  2392  0423  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2393  0424  00F1               	movwf	___ftge@ff1+1
  2394  0425  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2395  0426  00F2               	movwf	___ftge@ff1+2
  2396  0427  3070               	movlw	112
  2397  0428  00F3               	movwf	___ftge@ff2
  2398  0429  3089               	movlw	137
  2399  042A  00F4               	movwf	___ftge@ff2+1
  2400  042B  3040               	movlw	64
  2401  042C  00F5               	movwf	___ftge@ff2+2
  2402  042D  160A  118A  24D0  120A  118A  	fcall	___ftge
  2403  0432  1803               	btfsc	3,0
  2404  0433  2C36               	goto	l3263
  2405                           
  2406                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2407  0434  30F7               	movlw	247
  2408  0435  2C37               	goto	L2
  2409  0436                     l3263:	
  2410                           ;doprnt.c: 1122: }else{
  2411                           
  2412                           
  2413                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2414  0436  30F8               	movlw	248
  2415  0437                     L2:	
  2416  0437  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0438  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0439  07AA               	addwf	sprintf@exp^(0+128),f
  2419  043A  1803               	skipnc
  2420  043B  0AAB               	incf	(sprintf@exp+1)^(0+128),f
  2421  043C  30FF               	movlw	255
  2422  043D  07AB               	addwf	(sprintf@exp+1)^(0+128),f
  2423                           
  2424                           ;doprnt.c: 1124: }
  2425                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2426  043E  082A               	movf	sprintf@exp^(0+128),w
  2427  043F  120A  158A  2565  120A  118A  	fcall	_scale
  2428  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2430  0446  0837               	movf	?_scale,w
  2431  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2432  0448  1303               	bcf	3,6	;RP1=0, select bank1
  2433  0449  00AC               	movwf	sprintf@tmpval^(0+128)
  2434  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2435  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2436  044C  0838               	movf	?_scale+1,w
  2437  044D  1683               	bsf	3,5	;RP0=1, select bank1
  2438  044E  1303               	bcf	3,6	;RP1=0, select bank1
  2439  044F  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2440  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0452  0839               	movf	?_scale+2,w
  2443  0453  1683               	bsf	3,5	;RP0=1, select bank1
  2444  0454  1303               	bcf	3,6	;RP1=0, select bank1
  2445  0455  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2446                           
  2447                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2448  0456  0833               	movf	sprintf@fval^(0+128),w
  2449  0457  00F0               	movwf	__tdiv_to_l_@f1
  2450  0458  0834               	movf	(sprintf@fval+1)^(0+128),w
  2451  0459  00F1               	movwf	__tdiv_to_l_@f1+1
  2452  045A  0835               	movf	(sprintf@fval+2)^(0+128),w
  2453  045B  00F2               	movwf	__tdiv_to_l_@f1+2
  2454  045C  082C               	movf	sprintf@tmpval^(0+128),w
  2455  045D  00F3               	movwf	__tdiv_to_l_@f2
  2456  045E  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2457  045F  00F4               	movwf	__tdiv_to_l_@f2+1
  2458  0460  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2459  0461  00F5               	movwf	__tdiv_to_l_@f2+2
  2460  0462  160A  118A  273D  120A  118A  	fcall	__tdiv_to_l_
  2461  0467  0873               	movf	?__tdiv_to_l_+3,w
  2462  0468  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0469  1303               	bcf	3,6	;RP1=0, select bank1
  2464  046A  00A9               	movwf	(sprintf@val+3)^(0+128)
  2465  046B  0872               	movf	?__tdiv_to_l_+2,w
  2466  046C  00A8               	movwf	(sprintf@val+2)^(0+128)
  2467  046D  0871               	movf	?__tdiv_to_l_+1,w
  2468  046E  00A7               	movwf	(sprintf@val+1)^(0+128)
  2469  046F  0870               	movf	?__tdiv_to_l_,w
  2470  0470  00A6               	movwf	sprintf@val^(0+128)
  2471                           
  2472                           ;doprnt.c: 1129: fval = 0.0;
  2473  0471  3000               	movlw	0
  2474  0472  00B3               	movwf	sprintf@fval^(0+128)
  2475  0473  3000               	movlw	0
  2476  0474  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2477  0475  3000               	movlw	0
  2478  0476  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2479                           
  2480                           ;doprnt.c: 1130: } else {
  2481  0477  2CE7               	goto	l3277
  2482  0478                     l3273:	
  2483                           
  2484                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2485  0478  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0479  1303               	bcf	3,6	;RP1=0, select bank1
  2487  047A  0833               	movf	sprintf@fval^(0+128),w
  2488  047B  1283               	bcf	3,5	;RP0=0, select bank0
  2489  047C  1303               	bcf	3,6	;RP1=0, select bank0
  2490  047D  00C0               	movwf	___fttol@f1
  2491  047E  1683               	bsf	3,5	;RP0=1, select bank1
  2492  047F  1303               	bcf	3,6	;RP1=0, select bank1
  2493  0480  0834               	movf	(sprintf@fval+1)^(0+128),w
  2494  0481  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0482  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0483  00C1               	movwf	___fttol@f1+1
  2497  0484  1683               	bsf	3,5	;RP0=1, select bank1
  2498  0485  1303               	bcf	3,6	;RP1=0, select bank1
  2499  0486  0835               	movf	(sprintf@fval+2)^(0+128),w
  2500  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0489  00C2               	movwf	___fttol@f1+2
  2503  048A  160A  118A  25F7  120A  118A  	fcall	___fttol
  2504  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0491  0843               	movf	?___fttol+3,w
  2507  0492  1683               	bsf	3,5	;RP0=1, select bank1
  2508  0493  1303               	bcf	3,6	;RP1=0, select bank1
  2509  0494  00A9               	movwf	(sprintf@val+3)^(0+128)
  2510  0495  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0496  1303               	bcf	3,6	;RP1=0, select bank0
  2512  0497  0842               	movf	?___fttol+2,w
  2513  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2514  0499  1303               	bcf	3,6	;RP1=0, select bank1
  2515  049A  00A8               	movwf	(sprintf@val+2)^(0+128)
  2516  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2517  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2518  049D  0841               	movf	?___fttol+1,w
  2519  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2520  049F  1303               	bcf	3,6	;RP1=0, select bank1
  2521  04A0  00A7               	movwf	(sprintf@val+1)^(0+128)
  2522  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2523  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2524  04A3  0840               	movf	?___fttol,w
  2525  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  2526  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  2527  04A6  00A6               	movwf	sprintf@val^(0+128)
  2528                           
  2529                           ;doprnt.c: 1132: fval -= (double)val;
  2530  04A7  0829               	movf	(sprintf@val+3)^(0+128),w
  2531  04A8  00FB               	movwf	___lltoft@c+3
  2532  04A9  0828               	movf	(sprintf@val+2)^(0+128),w
  2533  04AA  00FA               	movwf	___lltoft@c+2
  2534  04AB  0827               	movf	(sprintf@val+1)^(0+128),w
  2535  04AC  00F9               	movwf	___lltoft@c+1
  2536  04AD  0826               	movf	sprintf@val^(0+128),w
  2537  04AE  00F8               	movwf	___lltoft@c
  2538  04AF  160A  118A  2358  120A  118A  	fcall	___lltoft
  2539  04B4  0878               	movf	?___lltoft,w
  2540  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2541  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2542  04B7  00D4               	movwf	___ftsub@f2
  2543  04B8  0879               	movf	?___lltoft+1,w
  2544  04B9  00D5               	movwf	___ftsub@f2+1
  2545  04BA  087A               	movf	?___lltoft+2,w
  2546  04BB  00D6               	movwf	___ftsub@f2+2
  2547  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2548  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2549  04BE  0833               	movf	sprintf@fval^(0+128),w
  2550  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2551  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2552  04C1  00D7               	movwf	___ftsub@f1
  2553  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2554  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2555  04C4  0834               	movf	(sprintf@fval+1)^(0+128),w
  2556  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2557  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2558  04C7  00D8               	movwf	___ftsub@f1+1
  2559  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2560  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  2561  04CA  0835               	movf	(sprintf@fval+2)^(0+128),w
  2562  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2563  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2564  04CD  00D9               	movwf	___ftsub@f1+2
  2565  04CE  160A  118A  2337  120A  118A  	fcall	___ftsub
  2566  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2567  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2568  04D5  0854               	movf	?___ftsub,w
  2569  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  2570  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  2571  04D8  00B3               	movwf	sprintf@fval^(0+128)
  2572  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2573  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2574  04DB  0855               	movf	?___ftsub+1,w
  2575  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  2576  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  2577  04DE  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2578  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2579  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2580  04E1  0856               	movf	?___ftsub+2,w
  2581  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  2582  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  2583  04E4  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2584                           
  2585                           ;doprnt.c: 1133: exp = 0;
  2586  04E5  01AA               	clrf	sprintf@exp^(0+128)
  2587  04E6  01AB               	clrf	(sprintf@exp+1)^(0+128)
  2588  04E7                     l3277:	
  2589                           
  2590                           ;doprnt.c: 1134: }
  2591                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2592  04E7  01B6               	clrf	sprintf@c^(0+128)
  2593  04E8  0AB6               	incf	sprintf@c^(0+128),f
  2594  04E9  300A               	movlw	10
  2595  04EA  0636               	xorwf	sprintf@c^(0+128),w
  2596  04EB  1903               	btfsc	3,2
  2597  04EC  2D3D               	goto	l3289
  2598  04ED                     l3283:	
  2599                           
  2600                           ;doprnt.c: 1137: if(val < dpowers[c])
  2601  04ED  0836               	movf	sprintf@c^(0+128),w
  2602  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2603  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  2604  04F0  00DE               	movwf	??_sprintf
  2605  04F1  3001               	movlw	1
  2606  04F2                     u3585:	
  2607  04F2  1003               	clrc
  2608  04F3  0DDE               	rlf	??_sprintf,f
  2609  04F4  3EFF               	addlw	-1
  2610  04F5  1D03               	skipz
  2611  04F6  2CF2               	goto	u3585
  2612  04F7  1003               	clrc
  2613  04F8  0D5E               	rlf	??_sprintf,w
  2614  04F9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2615  04FA  0084               	movwf	4
  2616  04FB  160A  118A  2000  120A  118A  	fcall	stringdir
  2617  0500  00DF               	movwf	??_sprintf+1
  2618  0501  160A  118A  2000  120A  118A  	fcall	stringdir
  2619  0506  00E0               	movwf	??_sprintf+2
  2620  0507  160A  118A  2000  120A  118A  	fcall	stringdir
  2621  050C  00E1               	movwf	??_sprintf+3
  2622  050D  160A  118A  2000  120A  118A  	fcall	stringdir
  2623  0512  00E2               	movwf	??_sprintf+4
  2624  0513  0862               	movf	??_sprintf+4,w
  2625  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2626  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2627  0516  0229               	subwf	(sprintf@val+3)^(0+128),w
  2628  0517  1D03               	skipz
  2629  0518  2D2F               	goto	u3595
  2630  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2631  051A  1303               	bcf	3,6	;RP1=0, select bank0
  2632  051B  0861               	movf	??_sprintf+3,w
  2633  051C  1683               	bsf	3,5	;RP0=1, select bank1
  2634  051D  1303               	bcf	3,6	;RP1=0, select bank1
  2635  051E  0228               	subwf	(sprintf@val+2)^(0+128),w
  2636  051F  1D03               	skipz
  2637  0520  2D2F               	goto	u3595
  2638  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2639  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2640  0523  0860               	movf	??_sprintf+2,w
  2641  0524  1683               	bsf	3,5	;RP0=1, select bank1
  2642  0525  1303               	bcf	3,6	;RP1=0, select bank1
  2643  0526  0227               	subwf	(sprintf@val+1)^(0+128),w
  2644  0527  1D03               	skipz
  2645  0528  2D2F               	goto	u3595
  2646  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2647  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2648  052B  085F               	movf	??_sprintf+1,w
  2649  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2650  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2651  052E  0226               	subwf	sprintf@val^(0+128),w
  2652  052F                     u3595:	
  2653  052F  1C03               	btfss	3,0
  2654  0530  2D3D               	goto	l3289
  2655                           
  2656                           ;doprnt.c: 1138: break;
  2657  0531  3001               	movlw	1
  2658  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2659  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2660  0534  00DE               	movwf	??_sprintf
  2661  0535  085E               	movf	??_sprintf,w
  2662  0536  1683               	bsf	3,5	;RP0=1, select bank1
  2663  0537  1303               	bcf	3,6	;RP1=0, select bank1
  2664  0538  07B6               	addwf	sprintf@c^(0+128),f
  2665  0539  300A               	movlw	10
  2666  053A  0636               	xorwf	sprintf@c^(0+128),w
  2667  053B  1D03               	btfss	3,2
  2668  053C  2CED               	goto	l3283
  2669  053D                     l3289:	
  2670                           
  2671                           ;doprnt.c: 1175: {
  2672                           ;doprnt.c: 1188: if(flag & 0x03)
  2673  053D  3003               	movlw	3
  2674  053E  0524               	andwf	sprintf@flag^(0+128),w
  2675  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0540  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0541  00DE               	movwf	??_sprintf
  2678  0542  3000               	movlw	0
  2679  0543  1683               	bsf	3,5	;RP0=1, select bank1
  2680  0544  1303               	bcf	3,6	;RP1=0, select bank1
  2681  0545  0525               	andwf	(sprintf@flag+1)^(0+128),w
  2682  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0547  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0548  00DF               	movwf	??_sprintf+1
  2685  0549  085E               	movf	??_sprintf,w
  2686  054A  045F               	iorwf	??_sprintf+1,w
  2687  054B  1903               	btfsc	3,2
  2688  054C  2D5E               	goto	l1001
  2689                           
  2690                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  2691  054D  302D               	movlw	45
  2692  054E                     L3:	
  2693  054E  00DE               	movwf	??_sprintf
  2694  054F  1683               	bsf	3,5	;RP0=1, select bank1
  2695  0550  1303               	bcf	3,6	;RP1=0, select bank1
  2696  0551  0832               	movf	sprintf@sp^(0+128),w
  2697  0552  0084               	movwf	4
  2698  0553  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0554  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0555  085E               	movf	??_sprintf,w
  2701  0556  1383               	bcf	3,7	;select IRP bank0
  2702  0557  0080               	movwf	0
  2703  0558  3001               	movlw	1
  2704  0559  00DE               	movwf	??_sprintf
  2705  055A  085E               	movf	??_sprintf,w
  2706  055B  1683               	bsf	3,5	;RP0=1, select bank1
  2707  055C  1303               	bcf	3,6	;RP1=0, select bank1
  2708  055D  07B2               	addwf	sprintf@sp^(0+128),f
  2709  055E                     l1001:	
  2710  055E  30FF               	movlw	255
  2711  055F  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0560  00DE               	movwf	??_sprintf
  2713  0561  085E               	movf	??_sprintf,w
  2714  0562  1683               	bsf	3,5	;RP0=1, select bank1
  2715  0563  1303               	bcf	3,6	;RP1=0, select bank1
  2716  0564  07B6               	addwf	sprintf@c^(0+128),f
  2717  0565  0A36               	incf	sprintf@c^(0+128),w
  2718  0566  1903               	btfsc	3,2
  2719  0567  2DE4               	goto	l3307
  2720                           
  2721                           ;doprnt.c: 1200: {
  2722                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2723                           
  2724                           ;doprnt.c: 1195: }
  2725                           ;doprnt.c: 1196: while(c--) {
  2726  0568  0836               	movf	sprintf@c^(0+128),w
  2727  0569  1283               	bcf	3,5	;RP0=0, select bank0
  2728  056A  1303               	bcf	3,6	;RP1=0, select bank0
  2729  056B  00DE               	movwf	??_sprintf
  2730  056C  3001               	movlw	1
  2731  056D                     u3625:	
  2732  056D  1003               	clrc
  2733  056E  0DDE               	rlf	??_sprintf,f
  2734  056F  3EFF               	addlw	-1
  2735  0570  1D03               	skipz
  2736  0571  2D6D               	goto	u3625
  2737  0572  1003               	clrc
  2738  0573  0D5E               	rlf	??_sprintf,w
  2739  0574  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2740  0575  0084               	movwf	4
  2741  0576  160A  118A  2000  120A  118A  	fcall	stringdir
  2742  057B  00F0               	movwf	___lldiv@divisor
  2743  057C  160A  118A  2000  120A  118A  	fcall	stringdir
  2744  0581  00F1               	movwf	___lldiv@divisor+1
  2745  0582  160A  118A  2000  120A  118A  	fcall	stringdir
  2746  0587  00F2               	movwf	___lldiv@divisor+2
  2747  0588  160A  118A  2000  120A  118A  	fcall	stringdir
  2748  058D  00F3               	movwf	___lldiv@divisor+3
  2749  058E  1683               	bsf	3,5	;RP0=1, select bank1
  2750  058F  1303               	bcf	3,6	;RP1=0, select bank1
  2751  0590  0829               	movf	(sprintf@val+3)^(0+128),w
  2752  0591  00F7               	movwf	___lldiv@dividend+3
  2753  0592  0828               	movf	(sprintf@val+2)^(0+128),w
  2754  0593  00F6               	movwf	___lldiv@dividend+2
  2755  0594  0827               	movf	(sprintf@val+1)^(0+128),w
  2756  0595  00F5               	movwf	___lldiv@dividend+1
  2757  0596  0826               	movf	sprintf@val^(0+128),w
  2758  0597  00F4               	movwf	___lldiv@dividend
  2759  0598  160A  118A  252D  120A  118A  	fcall	___lldiv
  2760  059D  0873               	movf	?___lldiv+3,w
  2761  059E  1683               	bsf	3,5	;RP0=1, select bank1
  2762  059F  1303               	bcf	3,6	;RP1=0, select bank1
  2763  05A0  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  2764  05A1  0872               	movf	?___lldiv+2,w
  2765  05A2  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2766  05A3  0871               	movf	?___lldiv+1,w
  2767  05A4  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2768  05A5  0870               	movf	?___lldiv,w
  2769  05A6  00AC               	movwf	sprintf@tmpval^(0+128)
  2770                           
  2771                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2772  05A7  3000               	movlw	0
  2773  05A8  00F3               	movwf	___llmod@divisor+3
  2774  05A9  3000               	movlw	0
  2775  05AA  00F2               	movwf	___llmod@divisor+2
  2776  05AB  3000               	movlw	0
  2777  05AC  00F1               	movwf	___llmod@divisor+1
  2778  05AD  300A               	movlw	10
  2779  05AE  00F0               	movwf	___llmod@divisor
  2780  05AF  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  2781  05B0  00F7               	movwf	___llmod@dividend+3
  2782  05B1  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2783  05B2  00F6               	movwf	___llmod@dividend+2
  2784  05B3  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2785  05B4  00F5               	movwf	___llmod@dividend+1
  2786  05B5  082C               	movf	sprintf@tmpval^(0+128),w
  2787  05B6  00F4               	movwf	___llmod@dividend
  2788  05B7  160A  118A  23CE  120A  118A  	fcall	___llmod
  2789  05BC  0873               	movf	?___llmod+3,w
  2790  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  2791  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  2792  05BF  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  2793  05C0  0872               	movf	?___llmod+2,w
  2794  05C1  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2795  05C2  0871               	movf	?___llmod+1,w
  2796  05C3  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2797  05C4  0870               	movf	?___llmod,w
  2798  05C5  00AC               	movwf	sprintf@tmpval^(0+128)
  2799                           
  2800                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  2801  05C6  082C               	movf	sprintf@tmpval^(0+128),w
  2802  05C7  3E30               	addlw	48
  2803  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2804  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2805  05CA  2D4E               	goto	L3
  2806  05CB                     l3301:	
  2807                           ;doprnt.c: 1204: }
  2808                           ;doprnt.c: 1206: }
  2809                           ;doprnt.c: 1207: while(exp > 0) {
  2810                           
  2811                           
  2812                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  2813  05CB  3030               	movlw	48
  2814  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2815  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2816  05CE  00DE               	movwf	??_sprintf
  2817  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  2818  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  2819  05D1  0832               	movf	sprintf@sp^(0+128),w
  2820  05D2  0084               	movwf	4
  2821  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2822  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2823  05D5  085E               	movf	??_sprintf,w
  2824  05D6  1383               	bcf	3,7	;select IRP bank0
  2825  05D7  0080               	movwf	0
  2826  05D8  3001               	movlw	1
  2827  05D9  00DE               	movwf	??_sprintf
  2828  05DA  085E               	movf	??_sprintf,w
  2829  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  2830  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  2831  05DD  07B2               	addwf	sprintf@sp^(0+128),f
  2832                           
  2833                           ;doprnt.c: 1209: exp--;
  2834  05DE  30FF               	movlw	255
  2835  05DF  07AA               	addwf	sprintf@exp^(0+128),f
  2836  05E0  1803               	skipnc
  2837  05E1  0AAB               	incf	(sprintf@exp+1)^(0+128),f
  2838  05E2  30FF               	movlw	255
  2839  05E3  07AB               	addwf	(sprintf@exp+1)^(0+128),f
  2840  05E4                     l3307:	
  2841  05E4  082B               	movf	(sprintf@exp+1)^(0+128),w
  2842  05E5  3A80               	xorlw	128
  2843  05E6  00FF               	movwf	127
  2844  05E7  3080               	movlw	128
  2845  05E8  027F               	subwf	127,w
  2846  05E9  1D03               	skipz
  2847  05EA  2DED               	goto	u3645
  2848  05EB  3001               	movlw	1
  2849  05EC  022A               	subwf	sprintf@exp^(0+128),w
  2850  05ED                     u3645:	
  2851  05ED  1803               	skipnc
  2852  05EE  2DCB               	goto	l3301
  2853                           
  2854                           ;doprnt.c: 1210: }
  2855                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2856  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  2857  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  2858  05F1  0831               	movf	(sprintf@prec+1)^(0+128),w
  2859  05F2  3A80               	xorlw	128
  2860  05F3  00FF               	movwf	127
  2861  05F4  3080               	movlw	128
  2862  05F5  027F               	subwf	127,w
  2863  05F6  1D03               	skipz
  2864  05F7  2DFA               	goto	u3655
  2865  05F8  3009               	movlw	9
  2866  05F9  0230               	subwf	sprintf@prec^(0+128),w
  2867  05FA                     u3655:	
  2868  05FA  1C03               	skipc
  2869  05FB  2DFE               	goto	l3313
  2870                           
  2871                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2872  05FC  3008               	movlw	8
  2873  05FD  2E01               	goto	L4
  2874  05FE                     l3313:	
  2875                           
  2876                           ;doprnt.c: 1213: else
  2877                           ;doprnt.c: 1214: c = prec;
  2878  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  2879  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  2880  0600  0830               	movf	sprintf@prec^(0+128),w
  2881  0601                     L4:	
  2882  0601  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0602  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0603  00DE               	movwf	??_sprintf
  2885  0604  085E               	movf	??_sprintf,w
  2886  0605  1683               	bsf	3,5	;RP0=1, select bank1
  2887  0606  1303               	bcf	3,6	;RP1=0, select bank1
  2888  0607  00B6               	movwf	sprintf@c^(0+128)
  2889                           
  2890                           ;doprnt.c: 1215: prec -= c;
  2891  0608  0836               	movf	sprintf@c^(0+128),w
  2892  0609  1283               	bcf	3,5	;RP0=0, select bank0
  2893  060A  1303               	bcf	3,6	;RP1=0, select bank0
  2894  060B  00DE               	movwf	??_sprintf
  2895  060C  01DF               	clrf	??_sprintf+1
  2896  060D  1BDE               	btfsc	??_sprintf,7
  2897  060E  03DF               	decf	??_sprintf+1,f
  2898  060F  085E               	movf	??_sprintf,w
  2899  0610  1683               	bsf	3,5	;RP0=1, select bank1
  2900  0611  1303               	bcf	3,6	;RP1=0, select bank1
  2901  0612  02B0               	subwf	sprintf@prec^(0+128),f
  2902  0613  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0614  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0615  085F               	movf	??_sprintf+1,w
  2905  0616  1683               	bsf	3,5	;RP0=1, select bank1
  2906  0617  1303               	bcf	3,6	;RP1=0, select bank1
  2907  0618  1C03               	skipc
  2908  0619  03B1               	decf	(sprintf@prec+1)^(0+128),f
  2909  061A  02B1               	subwf	(sprintf@prec+1)^(0+128),f
  2910                           
  2911                           ;doprnt.c: 1219: if(c)
  2912  061B  0836               	movf	sprintf@c^(0+128),w
  2913  061C  1903               	btfsc	3,2
  2914  061D  2E31               	goto	l3321
  2915                           
  2916                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2917  061E  302E               	movlw	46
  2918  061F  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0620  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0621  00DE               	movwf	??_sprintf
  2921  0622  1683               	bsf	3,5	;RP0=1, select bank1
  2922  0623  1303               	bcf	3,6	;RP1=0, select bank1
  2923  0624  0832               	movf	sprintf@sp^(0+128),w
  2924  0625  0084               	movwf	4
  2925  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0628  085E               	movf	??_sprintf,w
  2928  0629  1383               	bcf	3,7	;select IRP bank0
  2929  062A  0080               	movwf	0
  2930  062B  3001               	movlw	1
  2931  062C  00DE               	movwf	??_sprintf
  2932  062D  085E               	movf	??_sprintf,w
  2933  062E  1683               	bsf	3,5	;RP0=1, select bank1
  2934  062F  1303               	bcf	3,6	;RP1=0, select bank1
  2935  0630  07B2               	addwf	sprintf@sp^(0+128),f
  2936  0631                     l3321:	
  2937                           
  2938                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2939  0631  0836               	movf	sprintf@c^(0+128),w
  2940  0632  120A  158A  2565  120A  118A  	fcall	_scale
  2941  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0639  0837               	movf	?_scale,w
  2944  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2945  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2946  063C  00A0               	movwf	_sprintf$969^(0+128)
  2947  063D  1283               	bcf	3,5	;RP0=0, select bank0
  2948  063E  1303               	bcf	3,6	;RP1=0, select bank0
  2949  063F  0838               	movf	?_scale+1,w
  2950  0640  1683               	bsf	3,5	;RP0=1, select bank1
  2951  0641  1303               	bcf	3,6	;RP1=0, select bank1
  2952  0642  00A1               	movwf	(_sprintf$969+1)^(0+128)
  2953  0643  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0644  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0645  0839               	movf	?_scale+2,w
  2956  0646  1683               	bsf	3,5	;RP0=1, select bank1
  2957  0647  1303               	bcf	3,6	;RP1=0, select bank1
  2958  0648  00A2               	movwf	(_sprintf$969+2)^(0+128)
  2959                           
  2960                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2961  0649  0820               	movf	_sprintf$969^(0+128),w
  2962  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2963  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2964  064C  00AA               	movwf	___ftmul@f2
  2965  064D  1683               	bsf	3,5	;RP0=1, select bank1
  2966  064E  1303               	bcf	3,6	;RP1=0, select bank1
  2967  064F  0821               	movf	(_sprintf$969+1)^(0+128),w
  2968  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0652  00AB               	movwf	___ftmul@f2+1
  2971  0653  1683               	bsf	3,5	;RP0=1, select bank1
  2972  0654  1303               	bcf	3,6	;RP1=0, select bank1
  2973  0655  0822               	movf	(_sprintf$969+2)^(0+128),w
  2974  0656  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0657  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0658  00AC               	movwf	___ftmul@f2+2
  2977  0659  1683               	bsf	3,5	;RP0=1, select bank1
  2978  065A  1303               	bcf	3,6	;RP1=0, select bank1
  2979  065B  0833               	movf	sprintf@fval^(0+128),w
  2980  065C  1283               	bcf	3,5	;RP0=0, select bank0
  2981  065D  1303               	bcf	3,6	;RP1=0, select bank0
  2982  065E  00A7               	movwf	___ftmul@f1
  2983  065F  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0660  1303               	bcf	3,6	;RP1=0, select bank1
  2985  0661  0834               	movf	(sprintf@fval+1)^(0+128),w
  2986  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2987  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2988  0664  00A8               	movwf	___ftmul@f1+1
  2989  0665  1683               	bsf	3,5	;RP0=1, select bank1
  2990  0666  1303               	bcf	3,6	;RP1=0, select bank1
  2991  0667  0835               	movf	(sprintf@fval+2)^(0+128),w
  2992  0668  1283               	bcf	3,5	;RP0=0, select bank0
  2993  0669  1303               	bcf	3,6	;RP1=0, select bank0
  2994  066A  00A9               	movwf	___ftmul@f1+2
  2995  066B  120A  158A  202A  120A  118A  	fcall	___ftmul
  2996  0670  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0671  1303               	bcf	3,6	;RP1=0, select bank0
  2998  0672  0827               	movf	?___ftmul,w
  2999  0673  00C0               	movwf	___fttol@f1
  3000  0674  0828               	movf	?___ftmul+1,w
  3001  0675  00C1               	movwf	___fttol@f1+1
  3002  0676  0829               	movf	?___ftmul+2,w
  3003  0677  00C2               	movwf	___fttol@f1+2
  3004  0678  160A  118A  25F7  120A  118A  	fcall	___fttol
  3005  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3006  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3007  067F  0843               	movf	?___fttol+3,w
  3008  0680  1683               	bsf	3,5	;RP0=1, select bank1
  3009  0681  1303               	bcf	3,6	;RP1=0, select bank1
  3010  0682  00A9               	movwf	(sprintf@val+3)^(0+128)
  3011  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0685  0842               	movf	?___fttol+2,w
  3014  0686  1683               	bsf	3,5	;RP0=1, select bank1
  3015  0687  1303               	bcf	3,6	;RP1=0, select bank1
  3016  0688  00A8               	movwf	(sprintf@val+2)^(0+128)
  3017  0689  1283               	bcf	3,5	;RP0=0, select bank0
  3018  068A  1303               	bcf	3,6	;RP1=0, select bank0
  3019  068B  0841               	movf	?___fttol+1,w
  3020  068C  1683               	bsf	3,5	;RP0=1, select bank1
  3021  068D  1303               	bcf	3,6	;RP1=0, select bank1
  3022  068E  00A7               	movwf	(sprintf@val+1)^(0+128)
  3023  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0691  0840               	movf	?___fttol,w
  3026  0692  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0693  1303               	bcf	3,6	;RP1=0, select bank1
  3028  0694                     L5:	
  3029  0694  00A6               	movwf	sprintf@val^(0+128)
  3030  0695  30FF               	movlw	255
  3031  0696  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0697  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0698  00DE               	movwf	??_sprintf
  3034  0699  085E               	movf	??_sprintf,w
  3035  069A  1683               	bsf	3,5	;RP0=1, select bank1
  3036  069B  1303               	bcf	3,6	;RP1=0, select bank1
  3037  069C  07B6               	addwf	sprintf@c^(0+128),f
  3038  069D  0A36               	incf	sprintf@c^(0+128),w
  3039  069E  1903               	btfsc	3,2
  3040  069F  2F6A               	goto	l3341
  3041                           
  3042                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3043                           
  3044                           ;doprnt.c: 1228: while(c--) {
  3045  06A0  0836               	movf	sprintf@c^(0+128),w
  3046  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  3047  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  3048  06A3  00DE               	movwf	??_sprintf
  3049  06A4  3001               	movlw	1
  3050  06A5                     u3675:	
  3051  06A5  1003               	clrc
  3052  06A6  0DDE               	rlf	??_sprintf,f
  3053  06A7  3EFF               	addlw	-1
  3054  06A8  1D03               	skipz
  3055  06A9  2EA5               	goto	u3675
  3056  06AA  1003               	clrc
  3057  06AB  0D5E               	rlf	??_sprintf,w
  3058  06AC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3059  06AD  0084               	movwf	4
  3060  06AE  160A  118A  2000  120A  118A  	fcall	stringdir
  3061  06B3  00F0               	movwf	___lldiv@divisor
  3062  06B4  160A  118A  2000  120A  118A  	fcall	stringdir
  3063  06B9  00F1               	movwf	___lldiv@divisor+1
  3064  06BA  160A  118A  2000  120A  118A  	fcall	stringdir
  3065  06BF  00F2               	movwf	___lldiv@divisor+2
  3066  06C0  160A  118A  2000  120A  118A  	fcall	stringdir
  3067  06C5  00F3               	movwf	___lldiv@divisor+3
  3068  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  3069  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  3070  06C8  0829               	movf	(sprintf@val+3)^(0+128),w
  3071  06C9  00F7               	movwf	___lldiv@dividend+3
  3072  06CA  0828               	movf	(sprintf@val+2)^(0+128),w
  3073  06CB  00F6               	movwf	___lldiv@dividend+2
  3074  06CC  0827               	movf	(sprintf@val+1)^(0+128),w
  3075  06CD  00F5               	movwf	___lldiv@dividend+1
  3076  06CE  0826               	movf	sprintf@val^(0+128),w
  3077  06CF  00F4               	movwf	___lldiv@dividend
  3078  06D0  160A  118A  252D  120A  118A  	fcall	___lldiv
  3079  06D5  0873               	movf	?___lldiv+3,w
  3080  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3081  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  3082  06D8  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  3083  06D9  0872               	movf	?___lldiv+2,w
  3084  06DA  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3085  06DB  0871               	movf	?___lldiv+1,w
  3086  06DC  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3087  06DD  0870               	movf	?___lldiv,w
  3088  06DE  00AC               	movwf	sprintf@tmpval^(0+128)
  3089                           
  3090                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3091  06DF  3000               	movlw	0
  3092  06E0  00F3               	movwf	___llmod@divisor+3
  3093  06E1  3000               	movlw	0
  3094  06E2  00F2               	movwf	___llmod@divisor+2
  3095  06E3  3000               	movlw	0
  3096  06E4  00F1               	movwf	___llmod@divisor+1
  3097  06E5  300A               	movlw	10
  3098  06E6  00F0               	movwf	___llmod@divisor
  3099  06E7  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  3100  06E8  00F7               	movwf	___llmod@dividend+3
  3101  06E9  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3102  06EA  00F6               	movwf	___llmod@dividend+2
  3103  06EB  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3104  06EC  00F5               	movwf	___llmod@dividend+1
  3105  06ED  082C               	movf	sprintf@tmpval^(0+128),w
  3106  06EE  00F4               	movwf	___llmod@dividend
  3107  06EF  160A  118A  23CE  120A  118A  	fcall	___llmod
  3108  06F4  0873               	movf	?___llmod+3,w
  3109  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3110  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  3111  06F7  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  3112  06F8  0872               	movf	?___llmod+2,w
  3113  06F9  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3114  06FA  0871               	movf	?___llmod+1,w
  3115  06FB  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3116  06FC  0870               	movf	?___llmod,w
  3117  06FD  00AC               	movwf	sprintf@tmpval^(0+128)
  3118                           
  3119                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3120  06FE  082C               	movf	sprintf@tmpval^(0+128),w
  3121  06FF  3E30               	addlw	48
  3122  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0702  00DE               	movwf	??_sprintf
  3125  0703  1683               	bsf	3,5	;RP0=1, select bank1
  3126  0704  1303               	bcf	3,6	;RP1=0, select bank1
  3127  0705  0832               	movf	sprintf@sp^(0+128),w
  3128  0706  0084               	movwf	4
  3129  0707  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0708  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0709  085E               	movf	??_sprintf,w
  3132  070A  1383               	bcf	3,7	;select IRP bank0
  3133  070B  0080               	movwf	0
  3134  070C  3001               	movlw	1
  3135  070D  00DE               	movwf	??_sprintf
  3136  070E  085E               	movf	??_sprintf,w
  3137  070F  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0710  1303               	bcf	3,6	;RP1=0, select bank1
  3139  0711  07B2               	addwf	sprintf@sp^(0+128),f
  3140                           
  3141                           ;doprnt.c: 1232: val %= dpowers[c];
  3142  0712  0836               	movf	sprintf@c^(0+128),w
  3143  0713  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0714  1303               	bcf	3,6	;RP1=0, select bank0
  3145  0715  00DE               	movwf	??_sprintf
  3146  0716  3001               	movlw	1
  3147  0717                     u3685:	
  3148  0717  1003               	clrc
  3149  0718  0DDE               	rlf	??_sprintf,f
  3150  0719  3EFF               	addlw	-1
  3151  071A  1D03               	skipz
  3152  071B  2F17               	goto	u3685
  3153  071C  1003               	clrc
  3154  071D  0D5E               	rlf	??_sprintf,w
  3155  071E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3156  071F  0084               	movwf	4
  3157  0720  160A  118A  2000  120A  118A  	fcall	stringdir
  3158  0725  00F0               	movwf	___llmod@divisor
  3159  0726  160A  118A  2000  120A  118A  	fcall	stringdir
  3160  072B  00F1               	movwf	___llmod@divisor+1
  3161  072C  160A  118A  2000  120A  118A  	fcall	stringdir
  3162  0731  00F2               	movwf	___llmod@divisor+2
  3163  0732  160A  118A  2000  120A  118A  	fcall	stringdir
  3164  0737  00F3               	movwf	___llmod@divisor+3
  3165  0738  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0739  1303               	bcf	3,6	;RP1=0, select bank1
  3167  073A  0829               	movf	(sprintf@val+3)^(0+128),w
  3168  073B  00F7               	movwf	___llmod@dividend+3
  3169  073C  0828               	movf	(sprintf@val+2)^(0+128),w
  3170  073D  00F6               	movwf	___llmod@dividend+2
  3171  073E  0827               	movf	(sprintf@val+1)^(0+128),w
  3172  073F  00F5               	movwf	___llmod@dividend+1
  3173  0740  0826               	movf	sprintf@val^(0+128),w
  3174  0741  00F4               	movwf	___llmod@dividend
  3175  0742  160A  118A  23CE  120A  118A  	fcall	___llmod
  3176  0747  0873               	movf	?___llmod+3,w
  3177  0748  1683               	bsf	3,5	;RP0=1, select bank1
  3178  0749  1303               	bcf	3,6	;RP1=0, select bank1
  3179  074A  00A9               	movwf	(sprintf@val+3)^(0+128)
  3180  074B  0872               	movf	?___llmod+2,w
  3181  074C  00A8               	movwf	(sprintf@val+2)^(0+128)
  3182  074D  0871               	movf	?___llmod+1,w
  3183  074E  00A7               	movwf	(sprintf@val+1)^(0+128)
  3184  074F  0870               	movf	?___llmod,w
  3185  0750  2E94               	goto	L5
  3186  0751                     l3335:	
  3187                           ;doprnt.c: 1233: }
  3188                           ;doprnt.c: 1235: while(prec) {
  3189                           
  3190                           
  3191                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3192  0751  3030               	movlw	48
  3193  0752  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0753  1303               	bcf	3,6	;RP1=0, select bank0
  3195  0754  00DE               	movwf	??_sprintf
  3196  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3197  0756  1303               	bcf	3,6	;RP1=0, select bank1
  3198  0757  0832               	movf	sprintf@sp^(0+128),w
  3199  0758  0084               	movwf	4
  3200  0759  1283               	bcf	3,5	;RP0=0, select bank0
  3201  075A  1303               	bcf	3,6	;RP1=0, select bank0
  3202  075B  085E               	movf	??_sprintf,w
  3203  075C  1383               	bcf	3,7	;select IRP bank0
  3204  075D  0080               	movwf	0
  3205  075E  3001               	movlw	1
  3206  075F  00DE               	movwf	??_sprintf
  3207  0760  085E               	movf	??_sprintf,w
  3208  0761  1683               	bsf	3,5	;RP0=1, select bank1
  3209  0762  1303               	bcf	3,6	;RP1=0, select bank1
  3210  0763  07B2               	addwf	sprintf@sp^(0+128),f
  3211                           
  3212                           ;doprnt.c: 1237: prec--;
  3213  0764  30FF               	movlw	255
  3214  0765  07B0               	addwf	sprintf@prec^(0+128),f
  3215  0766  1803               	skipnc
  3216  0767  0AB1               	incf	(sprintf@prec+1)^(0+128),f
  3217  0768  30FF               	movlw	255
  3218  0769  07B1               	addwf	(sprintf@prec+1)^(0+128),f
  3219  076A                     l3341:	
  3220  076A  0830               	movf	sprintf@prec^(0+128),w
  3221  076B  0431               	iorwf	(sprintf@prec+1)^(0+128),w
  3222  076C  1903               	btfsc	3,2
  3223  076D  29B9               	goto	l3359
  3224  076E  2F51               	goto	l3335
  3225  076F                     l3343:	
  3226                           ;doprnt.c: 1238: }
  3227                           ;doprnt.c: 1245: continue;
  3228                           
  3229                           
  3230                           ;doprnt.c: 1246: }
  3231                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3232  076F  1683               	bsf	3,5	;RP0=1, select bank1
  3233  0770  1303               	bcf	3,6	;RP1=0, select bank1
  3234  0771  0830               	movf	sprintf@prec^(0+128),w
  3235  0772  0431               	iorwf	(sprintf@prec+1)^(0+128),w
  3236  0773  1D03               	btfss	3,2
  3237  0774  2F81               	goto	l1016
  3238  0775  0829               	movf	(sprintf@val+3)^(0+128),w
  3239  0776  0428               	iorwf	(sprintf@val+2)^(0+128),w
  3240  0777  0427               	iorwf	(sprintf@val+1)^(0+128),w
  3241  0778  0426               	iorwf	sprintf@val^(0+128),w
  3242  0779  1D03               	skipz
  3243  077A  2F81               	goto	l1016
  3244                           
  3245                           ;doprnt.c: 1291: prec++;
  3246  077B  3001               	movlw	1
  3247  077C  07B0               	addwf	sprintf@prec^(0+128),f
  3248  077D  1803               	skipnc
  3249  077E  0AB1               	incf	(sprintf@prec+1)^(0+128),f
  3250  077F  3000               	movlw	0
  3251  0780  07B1               	addwf	(sprintf@prec+1)^(0+128),f
  3252  0781                     l1016:	
  3253                           
  3254                           ;doprnt.c: 1339: if(c < prec)
  3255  0781  0836               	movf	sprintf@c^(0+128),w
  3256  0782  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0783  1303               	bcf	3,6	;RP1=0, select bank0
  3258  0784  00DE               	movwf	??_sprintf
  3259  0785  01DF               	clrf	??_sprintf+1
  3260  0786  1BDE               	btfsc	??_sprintf,7
  3261  0787  03DF               	decf	??_sprintf+1,f
  3262  0788  085F               	movf	??_sprintf+1,w
  3263  0789  3A80               	xorlw	128
  3264  078A  00E0               	movwf	??_sprintf+2
  3265  078B  1683               	bsf	3,5	;RP0=1, select bank1
  3266  078C  1303               	bcf	3,6	;RP1=0, select bank1
  3267  078D  0831               	movf	(sprintf@prec+1)^(0+128),w
  3268  078E  3A80               	xorlw	128
  3269  078F  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0790  1303               	bcf	3,6	;RP1=0, select bank0
  3271  0791  0260               	subwf	??_sprintf+2,w
  3272  0792  1D03               	skipz
  3273  0793  2F9A               	goto	u3735
  3274  0794  1683               	bsf	3,5	;RP0=1, select bank1
  3275  0795  1303               	bcf	3,6	;RP1=0, select bank1
  3276  0796  0830               	movf	sprintf@prec^(0+128),w
  3277  0797  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0798  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0799  025E               	subwf	??_sprintf,w
  3280  079A                     u3735:	
  3281  079A  1803               	skipnc
  3282  079B  2FA7               	goto	l3351
  3283                           
  3284                           ;doprnt.c: 1340: c = prec;
  3285  079C  1683               	bsf	3,5	;RP0=1, select bank1
  3286  079D  1303               	bcf	3,6	;RP1=0, select bank1
  3287  079E  0830               	movf	sprintf@prec^(0+128),w
  3288  079F  1283               	bcf	3,5	;RP0=0, select bank0
  3289  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  3290  07A1  00DE               	movwf	??_sprintf
  3291  07A2  085E               	movf	??_sprintf,w
  3292  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  3293  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  3294  07A5  00B6               	movwf	sprintf@c^(0+128)
  3295  07A6  2FC9               	goto	l1018
  3296  07A7                     l3351:	
  3297                           
  3298                           ;doprnt.c: 1341: else if(prec < c)
  3299  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  3300  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  3301  07A9  0836               	movf	sprintf@c^(0+128),w
  3302  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3303  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3304  07AC  00DE               	movwf	??_sprintf
  3305  07AD  01DF               	clrf	??_sprintf+1
  3306  07AE  1BDE               	btfsc	??_sprintf,7
  3307  07AF  03DF               	decf	??_sprintf+1,f
  3308  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  3309  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  3310  07B2  0831               	movf	(sprintf@prec+1)^(0+128),w
  3311  07B3  3A80               	xorlw	128
  3312  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  3313  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  3314  07B6  00E0               	movwf	??_sprintf+2
  3315  07B7  085F               	movf	??_sprintf+1,w
  3316  07B8  3A80               	xorlw	128
  3317  07B9  0260               	subwf	??_sprintf+2,w
  3318  07BA  1D03               	skipz
  3319  07BB  2FC0               	goto	u3745
  3320  07BC  085E               	movf	??_sprintf,w
  3321  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  3322  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  3323  07BF  0230               	subwf	sprintf@prec^(0+128),w
  3324  07C0                     u3745:	
  3325  07C0  1803               	skipnc
  3326  07C1  2FC9               	goto	l1018
  3327                           
  3328                           ;doprnt.c: 1342: prec = c;
  3329  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  3330  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  3331  07C4  0836               	movf	sprintf@c^(0+128),w
  3332  07C5  00B0               	movwf	sprintf@prec^(0+128)
  3333  07C6  01B1               	clrf	(sprintf@prec+1)^(0+128)
  3334  07C7  1BB0               	btfsc	sprintf@prec^(0+128),7
  3335  07C8  03B1               	decf	(sprintf@prec+1)^(0+128),f
  3336  07C9                     l1018:	
  3337                           
  3338                           ;doprnt.c: 1422: {
  3339                           ;doprnt.c: 1438: if(flag & 0x03)
  3340  07C9  3003               	movlw	3
  3341  07CA  1683               	bsf	3,5	;RP0=1, select bank1
  3342  07CB  1303               	bcf	3,6	;RP1=0, select bank1
  3343  07CC  0524               	andwf	sprintf@flag^(0+128),w
  3344  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  3345  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  3346  07CF  00DE               	movwf	??_sprintf
  3347  07D0  3000               	movlw	0
  3348  07D1  1683               	bsf	3,5	;RP0=1, select bank1
  3349  07D2  1303               	bcf	3,6	;RP1=0, select bank1
  3350  07D3  0525               	andwf	(sprintf@flag+1)^(0+128),w
  3351  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  3352  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  3353  07D6  00DF               	movwf	??_sprintf+1
  3354  07D7  085E               	movf	??_sprintf,w
  3355  07D8  045F               	iorwf	??_sprintf+1,w
  3356  07D9  1903               	btfsc	3,2
  3357  07DA  29B9               	goto	l3359
  3358                           
  3359                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3360  07DB  302D               	movlw	45
  3361  07DC                     L6:	
  3362  07DC  00DE               	movwf	??_sprintf
  3363  07DD  1683               	bsf	3,5	;RP0=1, select bank1
  3364  07DE  1303               	bcf	3,6	;RP1=0, select bank1
  3365  07DF  0832               	movf	sprintf@sp^(0+128),w
  3366  07E0  0084               	movwf	4
  3367  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  3368  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  3369  07E3  085E               	movf	??_sprintf,w
  3370  07E4  1383               	bcf	3,7	;select IRP bank0
  3371  07E5  0080               	movwf	0
  3372  07E6  3001               	movlw	1
  3373  07E7  00DE               	movwf	??_sprintf
  3374  07E8  085E               	movf	??_sprintf,w
  3375  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  3376  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  3377  07EB  07B2               	addwf	sprintf@sp^(0+128),f
  3378  07EC  29B9               	goto	l3359
  3379  07ED                     l3361:	
  3380                           ;doprnt.c: 1469: }
  3381                           ;doprnt.c: 1533: }
  3382                           ;doprnt.c: 1535: alldone:
  3383                           
  3384                           
  3385                           ;doprnt.c: 1538: *sp = 0;
  3386  07ED  0832               	movf	sprintf@sp^(0+128),w
  3387  07EE  0084               	movwf	4
  3388  07EF  1383               	bcf	3,7	;select IRP bank0
  3389  07F0  0180               	clrf	0
  3390  07F1  0008               	return
  3391  07F2                     __end_of_sprintf:	
  3392                           ;doprnt.c: 1540: return 0;
  3393                           ;	Return value of _sprintf is never used
  3394                           
  3395                           
  3396                           	psect	text2
  3397  0D65                     __ptext2:	
  3398 ;; *************** function _scale *****************
  3399 ;; Defined at:
  3400 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  scl             1    wreg     char 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  scl             1   31[BANK0 ] char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  3   23[BANK0 ] char 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3414 ;;      Params:         0       3       0       0       0
  3415 ;;      Locals:         0       4       0       0       0
  3416 ;;      Temps:          0       2       0       0       0
  3417 ;;      Totals:         0       9       0       0       0
  3418 ;;Total ram usage:        9 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    2
  3421 ;; This function calls:
  3422 ;;		___awdiv
  3423 ;;		___awmod
  3424 ;;		___bmul
  3425 ;;		___ftmul
  3426 ;; This function is called by:
  3427 ;;		_sprintf
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           
  3432                           ;psect for function _scale
  3433  0D65                     _scale:	
  3434                           
  3435                           ;incstack = 0
  3436                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3437                           ;scale@scl stored from wreg
  3438  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0D67  00BF               	movwf	scale@scl
  3441                           
  3442                           ;doprnt.c: 428: if(scl < 0) {
  3443  0D68  1FBF               	btfss	scale@scl,7
  3444  0D69  2EB6               	goto	l2845
  3445                           
  3446                           ;doprnt.c: 429: scl = -scl;
  3447  0D6A  09BF               	comf	scale@scl,f
  3448  0D6B  0ABF               	incf	scale@scl,f
  3449                           
  3450                           ;doprnt.c: 430: if(scl>=110)
  3451  0D6C  083F               	movf	scale@scl,w
  3452  0D6D  3A80               	xorlw	128
  3453  0D6E  3E12               	addlw	-238
  3454  0D6F  1C03               	skipc
  3455  0D70  2E29               	goto	l2835
  3456                           
  3457                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3458  0D71  3003               	movlw	3
  3459  0D72  00BA               	movwf	??_scale
  3460  0D73  083A               	movf	??_scale,w
  3461  0D74  00A4               	movwf	___bmul@multiplicand
  3462  0D75  300A               	movlw	10
  3463  0D76  00F7               	movwf	___awdiv@divisor
  3464  0D77  3000               	movlw	0
  3465  0D78  00F8               	movwf	___awdiv@divisor+1
  3466  0D79  083F               	movf	scale@scl,w
  3467  0D7A  00F2               	movwf	___awmod@dividend
  3468  0D7B  01F3               	clrf	___awmod@dividend+1
  3469  0D7C  1BF2               	btfsc	___awmod@dividend,7
  3470  0D7D  03F3               	decf	___awmod@dividend+1,f
  3471  0D7E  3064               	movlw	100
  3472  0D7F  00F0               	movwf	___awmod@divisor
  3473  0D80  3000               	movlw	0
  3474  0D81  00F1               	movwf	___awmod@divisor+1
  3475  0D82  160A  118A  2383  120A  158A  	fcall	___awmod
  3476  0D87  0871               	movf	?___awmod+1,w
  3477  0D88  00FA               	movwf	___awdiv@dividend+1
  3478  0D89  0870               	movf	?___awmod,w
  3479  0D8A  00F9               	movwf	___awdiv@dividend
  3480  0D8B  160A  118A  2475  120A  158A  	fcall	___awdiv
  3481  0D90  0877               	movf	?___awdiv,w
  3482  0D91  3E09               	addlw	9
  3483  0D92  160A  118A  22B6  120A  158A  	fcall	___bmul
  3484  0D97  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3485  0D98  0084               	movwf	4
  3486  0D99  160A  118A  2000  120A  158A  	fcall	stringdir
  3487  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0DA0  00A7               	movwf	___ftmul@f1
  3490  0DA1  160A  118A  2000  120A  158A  	fcall	stringdir
  3491  0DA6  00A8               	movwf	___ftmul@f1+1
  3492  0DA7  160A  118A  2000  120A  158A  	fcall	stringdir
  3493  0DAC  00A9               	movwf	___ftmul@f1+2
  3494  0DAD  3003               	movlw	3
  3495  0DAE  00BB               	movwf	??_scale+1
  3496  0DAF  083B               	movf	??_scale+1,w
  3497  0DB0  00A4               	movwf	___bmul@multiplicand
  3498  0DB1  3064               	movlw	100
  3499  0DB2  00F7               	movwf	___awdiv@divisor
  3500  0DB3  3000               	movlw	0
  3501  0DB4  00F8               	movwf	___awdiv@divisor+1
  3502  0DB5  083F               	movf	scale@scl,w
  3503  0DB6  00F9               	movwf	___awdiv@dividend
  3504  0DB7  01FA               	clrf	___awdiv@dividend+1
  3505  0DB8  1BF9               	btfsc	___awdiv@dividend,7
  3506  0DB9  03FA               	decf	___awdiv@dividend+1,f
  3507  0DBA  160A  118A  2475  120A  158A  	fcall	___awdiv
  3508  0DBF  0877               	movf	?___awdiv,w
  3509  0DC0  3E12               	addlw	18
  3510  0DC1  160A  118A  22B6  120A  158A  	fcall	___bmul
  3511  0DC6  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3512  0DC7  0084               	movwf	4
  3513  0DC8  160A  118A  2000  120A  158A  	fcall	stringdir
  3514  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  3515  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  3516  0DCF  00AA               	movwf	___ftmul@f2
  3517  0DD0  160A  118A  2000  120A  158A  	fcall	stringdir
  3518  0DD5  00AB               	movwf	___ftmul@f2+1
  3519  0DD6  160A  118A  2000  120A  158A  	fcall	stringdir
  3520  0DDB  00AC               	movwf	___ftmul@f2+2
  3521  0DDC  120A  158A  202A  120A  158A  	fcall	___ftmul
  3522  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0DE3  0827               	movf	?___ftmul,w
  3525  0DE4  00BC               	movwf	_scale$968
  3526  0DE5  0828               	movf	?___ftmul+1,w
  3527  0DE6  00BD               	movwf	_scale$968+1
  3528  0DE7  0829               	movf	?___ftmul+2,w
  3529  0DE8  00BE               	movwf	_scale$968+2
  3530                           
  3531                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3532  0DE9  3003               	movlw	3
  3533  0DEA  00BA               	movwf	??_scale
  3534  0DEB  083A               	movf	??_scale,w
  3535  0DEC  00A4               	movwf	___bmul@multiplicand
  3536  0DED  083F               	movf	scale@scl,w
  3537  0DEE  00F2               	movwf	___awmod@dividend
  3538  0DEF  01F3               	clrf	___awmod@dividend+1
  3539  0DF0  1BF2               	btfsc	___awmod@dividend,7
  3540  0DF1  03F3               	decf	___awmod@dividend+1,f
  3541  0DF2  300A               	movlw	10
  3542  0DF3  00F0               	movwf	___awmod@divisor
  3543  0DF4  3000               	movlw	0
  3544  0DF5  00F1               	movwf	___awmod@divisor+1
  3545  0DF6  160A  118A  2383  120A  158A  	fcall	___awmod
  3546  0DFB  0870               	movf	?___awmod,w
  3547  0DFC  160A  118A  22B6  120A  158A  	fcall	___bmul
  3548  0E01  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3549  0E02  0084               	movwf	4
  3550  0E03  160A  118A  2000  120A  158A  	fcall	stringdir
  3551  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  3553  0E0A  00A7               	movwf	___ftmul@f1
  3554  0E0B  160A  118A  2000  120A  158A  	fcall	stringdir
  3555  0E10  00A8               	movwf	___ftmul@f1+1
  3556  0E11  160A  118A  2000  120A  158A  	fcall	stringdir
  3557  0E16  00A9               	movwf	___ftmul@f1+2
  3558  0E17  083C               	movf	_scale$968,w
  3559  0E18  00AA               	movwf	___ftmul@f2
  3560  0E19  083D               	movf	_scale$968+1,w
  3561  0E1A  00AB               	movwf	___ftmul@f2+1
  3562  0E1B  083E               	movf	_scale$968+2,w
  3563  0E1C  00AC               	movwf	___ftmul@f2+2
  3564  0E1D  120A  158A  202A   	fcall	___ftmul
  3565  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0E22  0827               	movf	?___ftmul,w
  3568  0E23  00B7               	movwf	?_scale
  3569  0E24  0828               	movf	?___ftmul+1,w
  3570  0E25  00B8               	movwf	?_scale+1
  3571  0E26  0829               	movf	?___ftmul+2,w
  3572  0E27  00B9               	movwf	?_scale+2
  3573  0E28  0008               	return
  3574  0E29                     l2835:	
  3575                           
  3576                           ;doprnt.c: 432: else if(scl > 10)
  3577  0E29  083F               	movf	scale@scl,w
  3578  0E2A  3A80               	xorlw	128
  3579  0E2B  3E75               	addlw	-139
  3580  0E2C  1C03               	skipc
  3581  0E2D  2E97               	goto	l2841
  3582                           
  3583                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3584  0E2E  3003               	movlw	3
  3585  0E2F  00BA               	movwf	??_scale
  3586  0E30  083A               	movf	??_scale,w
  3587  0E31  00A4               	movwf	___bmul@multiplicand
  3588  0E32  083F               	movf	scale@scl,w
  3589  0E33  00F2               	movwf	___awmod@dividend
  3590  0E34  01F3               	clrf	___awmod@dividend+1
  3591  0E35  1BF2               	btfsc	___awmod@dividend,7
  3592  0E36  03F3               	decf	___awmod@dividend+1,f
  3593  0E37  300A               	movlw	10
  3594  0E38  00F0               	movwf	___awmod@divisor
  3595  0E39  3000               	movlw	0
  3596  0E3A  00F1               	movwf	___awmod@divisor+1
  3597  0E3B  160A  118A  2383  120A  158A  	fcall	___awmod
  3598  0E40  0870               	movf	?___awmod,w
  3599  0E41  160A  118A  22B6  120A  158A  	fcall	___bmul
  3600  0E46  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3601  0E47  0084               	movwf	4
  3602  0E48  160A  118A  2000  120A  158A  	fcall	stringdir
  3603  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3605  0E4F  00A7               	movwf	___ftmul@f1
  3606  0E50  160A  118A  2000  120A  158A  	fcall	stringdir
  3607  0E55  00A8               	movwf	___ftmul@f1+1
  3608  0E56  160A  118A  2000  120A  158A  	fcall	stringdir
  3609  0E5B  00A9               	movwf	___ftmul@f1+2
  3610  0E5C  3003               	movlw	3
  3611  0E5D  00BB               	movwf	??_scale+1
  3612  0E5E  083B               	movf	??_scale+1,w
  3613  0E5F  00A4               	movwf	___bmul@multiplicand
  3614  0E60  300A               	movlw	10
  3615  0E61  00F7               	movwf	___awdiv@divisor
  3616  0E62  3000               	movlw	0
  3617  0E63  00F8               	movwf	___awdiv@divisor+1
  3618  0E64  083F               	movf	scale@scl,w
  3619  0E65  00F9               	movwf	___awdiv@dividend
  3620  0E66  01FA               	clrf	___awdiv@dividend+1
  3621  0E67  1BF9               	btfsc	___awdiv@dividend,7
  3622  0E68  03FA               	decf	___awdiv@dividend+1,f
  3623  0E69  160A  118A  2475  120A  158A  	fcall	___awdiv
  3624  0E6E  0877               	movf	?___awdiv,w
  3625  0E6F  3E09               	addlw	9
  3626  0E70  160A  118A  22B6  120A  158A  	fcall	___bmul
  3627  0E75  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3628  0E76  0084               	movwf	4
  3629  0E77  160A  118A  2000  120A  158A  	fcall	stringdir
  3630  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3632  0E7E  00AA               	movwf	___ftmul@f2
  3633  0E7F  160A  118A  2000  120A  158A  	fcall	stringdir
  3634  0E84  00AB               	movwf	___ftmul@f2+1
  3635  0E85  160A  118A  2000  120A  158A  	fcall	stringdir
  3636  0E8A  00AC               	movwf	___ftmul@f2+2
  3637  0E8B  120A  158A  202A   	fcall	___ftmul
  3638  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  3639  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  3640  0E90  0827               	movf	?___ftmul,w
  3641  0E91  00B7               	movwf	?_scale
  3642  0E92  0828               	movf	?___ftmul+1,w
  3643  0E93  00B8               	movwf	?_scale+1
  3644  0E94  0829               	movf	?___ftmul+2,w
  3645  0E95  00B9               	movwf	?_scale+2
  3646  0E96  0008               	return
  3647  0E97                     l2841:	
  3648                           
  3649                           ;doprnt.c: 434: return _npowers_[scl];
  3650  0E97  3003               	movlw	3
  3651  0E98  00BA               	movwf	??_scale
  3652  0E99  083A               	movf	??_scale,w
  3653  0E9A  00A4               	movwf	___bmul@multiplicand
  3654  0E9B  083F               	movf	scale@scl,w
  3655  0E9C  160A  118A  22B6  120A  158A  	fcall	___bmul
  3656  0EA1  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3657  0EA2  0084               	movwf	4
  3658  0EA3  160A  118A  2000  120A  158A  	fcall	stringdir
  3659  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  3660  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  3661  0EAA  00B7               	movwf	?_scale
  3662  0EAB  160A  118A  2000  120A  158A  	fcall	stringdir
  3663  0EB0  00B8               	movwf	?_scale+1
  3664  0EB1  160A  118A  2000   	fcall	stringdir
  3665  0EB4  00B9               	movwf	?_scale+2
  3666  0EB5  0008               	return
  3667  0EB6                     l2845:	
  3668                           
  3669                           ;doprnt.c: 435: }
  3670                           ;doprnt.c: 436: if(scl>=110)
  3671  0EB6  083F               	movf	scale@scl,w
  3672  0EB7  3A80               	xorlw	128
  3673  0EB8  3E12               	addlw	-238
  3674  0EB9  1C03               	skipc
  3675  0EBA  2F73               	goto	l2853
  3676                           
  3677                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3678  0EBB  3003               	movlw	3
  3679  0EBC  00BA               	movwf	??_scale
  3680  0EBD  083A               	movf	??_scale,w
  3681  0EBE  00A4               	movwf	___bmul@multiplicand
  3682  0EBF  300A               	movlw	10
  3683  0EC0  00F7               	movwf	___awdiv@divisor
  3684  0EC1  3000               	movlw	0
  3685  0EC2  00F8               	movwf	___awdiv@divisor+1
  3686  0EC3  083F               	movf	scale@scl,w
  3687  0EC4  00F2               	movwf	___awmod@dividend
  3688  0EC5  01F3               	clrf	___awmod@dividend+1
  3689  0EC6  1BF2               	btfsc	___awmod@dividend,7
  3690  0EC7  03F3               	decf	___awmod@dividend+1,f
  3691  0EC8  3064               	movlw	100
  3692  0EC9  00F0               	movwf	___awmod@divisor
  3693  0ECA  3000               	movlw	0
  3694  0ECB  00F1               	movwf	___awmod@divisor+1
  3695  0ECC  160A  118A  2383  120A  158A  	fcall	___awmod
  3696  0ED1  0871               	movf	?___awmod+1,w
  3697  0ED2  00FA               	movwf	___awdiv@dividend+1
  3698  0ED3  0870               	movf	?___awmod,w
  3699  0ED4  00F9               	movwf	___awdiv@dividend
  3700  0ED5  160A  118A  2475  120A  158A  	fcall	___awdiv
  3701  0EDA  0877               	movf	?___awdiv,w
  3702  0EDB  3E09               	addlw	9
  3703  0EDC  160A  118A  22B6  120A  158A  	fcall	___bmul
  3704  0EE1  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3705  0EE2  0084               	movwf	4
  3706  0EE3  160A  118A  2000  120A  158A  	fcall	stringdir
  3707  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  3709  0EEA  00A7               	movwf	___ftmul@f1
  3710  0EEB  160A  118A  2000  120A  158A  	fcall	stringdir
  3711  0EF0  00A8               	movwf	___ftmul@f1+1
  3712  0EF1  160A  118A  2000  120A  158A  	fcall	stringdir
  3713  0EF6  00A9               	movwf	___ftmul@f1+2
  3714  0EF7  3003               	movlw	3
  3715  0EF8  00BB               	movwf	??_scale+1
  3716  0EF9  083B               	movf	??_scale+1,w
  3717  0EFA  00A4               	movwf	___bmul@multiplicand
  3718  0EFB  3064               	movlw	100
  3719  0EFC  00F7               	movwf	___awdiv@divisor
  3720  0EFD  3000               	movlw	0
  3721  0EFE  00F8               	movwf	___awdiv@divisor+1
  3722  0EFF  083F               	movf	scale@scl,w
  3723  0F00  00F9               	movwf	___awdiv@dividend
  3724  0F01  01FA               	clrf	___awdiv@dividend+1
  3725  0F02  1BF9               	btfsc	___awdiv@dividend,7
  3726  0F03  03FA               	decf	___awdiv@dividend+1,f
  3727  0F04  160A  118A  2475  120A  158A  	fcall	___awdiv
  3728  0F09  0877               	movf	?___awdiv,w
  3729  0F0A  3E12               	addlw	18
  3730  0F0B  160A  118A  22B6  120A  158A  	fcall	___bmul
  3731  0F10  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3732  0F11  0084               	movwf	4
  3733  0F12  160A  118A  2000  120A  158A  	fcall	stringdir
  3734  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0F19  00AA               	movwf	___ftmul@f2
  3737  0F1A  160A  118A  2000  120A  158A  	fcall	stringdir
  3738  0F1F  00AB               	movwf	___ftmul@f2+1
  3739  0F20  160A  118A  2000  120A  158A  	fcall	stringdir
  3740  0F25  00AC               	movwf	___ftmul@f2+2
  3741  0F26  120A  158A  202A  120A  158A  	fcall	___ftmul
  3742  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0F2D  0827               	movf	?___ftmul,w
  3745  0F2E  00BC               	movwf	_scale$968
  3746  0F2F  0828               	movf	?___ftmul+1,w
  3747  0F30  00BD               	movwf	_scale$968+1
  3748  0F31  0829               	movf	?___ftmul+2,w
  3749  0F32  00BE               	movwf	_scale$968+2
  3750                           
  3751                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3752  0F33  3003               	movlw	3
  3753  0F34  00BA               	movwf	??_scale
  3754  0F35  083A               	movf	??_scale,w
  3755  0F36  00A4               	movwf	___bmul@multiplicand
  3756  0F37  083F               	movf	scale@scl,w
  3757  0F38  00F2               	movwf	___awmod@dividend
  3758  0F39  01F3               	clrf	___awmod@dividend+1
  3759  0F3A  1BF2               	btfsc	___awmod@dividend,7
  3760  0F3B  03F3               	decf	___awmod@dividend+1,f
  3761  0F3C  300A               	movlw	10
  3762  0F3D  00F0               	movwf	___awmod@divisor
  3763  0F3E  3000               	movlw	0
  3764  0F3F  00F1               	movwf	___awmod@divisor+1
  3765  0F40  160A  118A  2383  120A  158A  	fcall	___awmod
  3766  0F45  0870               	movf	?___awmod,w
  3767  0F46  160A  118A  22B6  120A  158A  	fcall	___bmul
  3768  0F4B  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3769  0F4C  0084               	movwf	4
  3770  0F4D  160A  118A  2000  120A  158A  	fcall	stringdir
  3771  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3772  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  3773  0F54  00A7               	movwf	___ftmul@f1
  3774  0F55  160A  118A  2000  120A  158A  	fcall	stringdir
  3775  0F5A  00A8               	movwf	___ftmul@f1+1
  3776  0F5B  160A  118A  2000  120A  158A  	fcall	stringdir
  3777  0F60  00A9               	movwf	___ftmul@f1+2
  3778  0F61  083C               	movf	_scale$968,w
  3779  0F62  00AA               	movwf	___ftmul@f2
  3780  0F63  083D               	movf	_scale$968+1,w
  3781  0F64  00AB               	movwf	___ftmul@f2+1
  3782  0F65  083E               	movf	_scale$968+2,w
  3783  0F66  00AC               	movwf	___ftmul@f2+2
  3784  0F67  120A  158A  202A   	fcall	___ftmul
  3785  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  3787  0F6C  0827               	movf	?___ftmul,w
  3788  0F6D  00B7               	movwf	?_scale
  3789  0F6E  0828               	movf	?___ftmul+1,w
  3790  0F6F  00B8               	movwf	?_scale+1
  3791  0F70  0829               	movf	?___ftmul+2,w
  3792  0F71  00B9               	movwf	?_scale+2
  3793  0F72  0008               	return
  3794  0F73                     l2853:	
  3795                           
  3796                           ;doprnt.c: 438: else if(scl > 10)
  3797  0F73  083F               	movf	scale@scl,w
  3798  0F74  3A80               	xorlw	128
  3799  0F75  3E75               	addlw	-139
  3800  0F76  1C03               	skipc
  3801  0F77  2FE1               	goto	l2859
  3802                           
  3803                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3804  0F78  3003               	movlw	3
  3805  0F79  00BA               	movwf	??_scale
  3806  0F7A  083A               	movf	??_scale,w
  3807  0F7B  00A4               	movwf	___bmul@multiplicand
  3808  0F7C  083F               	movf	scale@scl,w
  3809  0F7D  00F2               	movwf	___awmod@dividend
  3810  0F7E  01F3               	clrf	___awmod@dividend+1
  3811  0F7F  1BF2               	btfsc	___awmod@dividend,7
  3812  0F80  03F3               	decf	___awmod@dividend+1,f
  3813  0F81  300A               	movlw	10
  3814  0F82  00F0               	movwf	___awmod@divisor
  3815  0F83  3000               	movlw	0
  3816  0F84  00F1               	movwf	___awmod@divisor+1
  3817  0F85  160A  118A  2383  120A  158A  	fcall	___awmod
  3818  0F8A  0870               	movf	?___awmod,w
  3819  0F8B  160A  118A  22B6  120A  158A  	fcall	___bmul
  3820  0F90  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3821  0F91  0084               	movwf	4
  3822  0F92  160A  118A  2000  120A  158A  	fcall	stringdir
  3823  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  3825  0F99  00A7               	movwf	___ftmul@f1
  3826  0F9A  160A  118A  2000  120A  158A  	fcall	stringdir
  3827  0F9F  00A8               	movwf	___ftmul@f1+1
  3828  0FA0  160A  118A  2000  120A  158A  	fcall	stringdir
  3829  0FA5  00A9               	movwf	___ftmul@f1+2
  3830  0FA6  3003               	movlw	3
  3831  0FA7  00BB               	movwf	??_scale+1
  3832  0FA8  083B               	movf	??_scale+1,w
  3833  0FA9  00A4               	movwf	___bmul@multiplicand
  3834  0FAA  300A               	movlw	10
  3835  0FAB  00F7               	movwf	___awdiv@divisor
  3836  0FAC  3000               	movlw	0
  3837  0FAD  00F8               	movwf	___awdiv@divisor+1
  3838  0FAE  083F               	movf	scale@scl,w
  3839  0FAF  00F9               	movwf	___awdiv@dividend
  3840  0FB0  01FA               	clrf	___awdiv@dividend+1
  3841  0FB1  1BF9               	btfsc	___awdiv@dividend,7
  3842  0FB2  03FA               	decf	___awdiv@dividend+1,f
  3843  0FB3  160A  118A  2475  120A  158A  	fcall	___awdiv
  3844  0FB8  0877               	movf	?___awdiv,w
  3845  0FB9  3E09               	addlw	9
  3846  0FBA  160A  118A  22B6  120A  158A  	fcall	___bmul
  3847  0FBF  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3848  0FC0  0084               	movwf	4
  3849  0FC1  160A  118A  2000  120A  158A  	fcall	stringdir
  3850  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  3851  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  3852  0FC8  00AA               	movwf	___ftmul@f2
  3853  0FC9  160A  118A  2000  120A  158A  	fcall	stringdir
  3854  0FCE  00AB               	movwf	___ftmul@f2+1
  3855  0FCF  160A  118A  2000  120A  158A  	fcall	stringdir
  3856  0FD4  00AC               	movwf	___ftmul@f2+2
  3857  0FD5  120A  158A  202A   	fcall	___ftmul
  3858  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  3859  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  3860  0FDA  0827               	movf	?___ftmul,w
  3861  0FDB  00B7               	movwf	?_scale
  3862  0FDC  0828               	movf	?___ftmul+1,w
  3863  0FDD  00B8               	movwf	?_scale+1
  3864  0FDE  0829               	movf	?___ftmul+2,w
  3865  0FDF  00B9               	movwf	?_scale+2
  3866  0FE0  0008               	return
  3867  0FE1                     l2859:	
  3868                           
  3869                           ;doprnt.c: 440: return _powers_[scl];
  3870  0FE1  3003               	movlw	3
  3871  0FE2  00BA               	movwf	??_scale
  3872  0FE3  083A               	movf	??_scale,w
  3873  0FE4  00A4               	movwf	___bmul@multiplicand
  3874  0FE5  083F               	movf	scale@scl,w
  3875  0FE6  160A  118A  22B6  120A  158A  	fcall	___bmul
  3876  0FEB  3E50               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3877  0FEC  0084               	movwf	4
  3878  0FED  160A  118A  2000  120A  158A  	fcall	stringdir
  3879  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  3880  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  3881  0FF4  00B7               	movwf	?_scale
  3882  0FF5  160A  118A  2000  120A  158A  	fcall	stringdir
  3883  0FFA  00B8               	movwf	?_scale+1
  3884  0FFB  160A  118A  2000   	fcall	stringdir
  3885  0FFE  00B9               	movwf	?_scale+2
  3886  0FFF  0008               	return
  3887  1000                     __end_of_scale:	
  3888                           
  3889                           	psect	text3
  3890  12A8                     __ptext3:	
  3891 ;; *************** function _isdigit *****************
  3892 ;; Defined at:
  3893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  c               1    wreg     unsigned char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  c               1    1[COMMON] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;		None               void
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3907 ;;      Params:         0       0       0       0       0
  3908 ;;      Locals:         2       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0
  3910 ;;      Totals:         2       0       0       0       0
  3911 ;;Total ram usage:        2 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_sprintf
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           
  3921                           ;psect for function _isdigit
  3922  12A8                     _isdigit:	
  3923                           
  3924                           ;incstack = 0
  3925                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3926                           ;isdigit@c stored from wreg
  3927  12A8  00F1               	movwf	isdigit@c
  3928  12A9  01F0               	clrf	_isdigit$755
  3929  12AA  303A               	movlw	58
  3930  12AB  0271               	subwf	isdigit@c,w
  3931  12AC  1803               	skipnc
  3932  12AD  2AB4               	goto	l2871
  3933  12AE  3030               	movlw	48
  3934  12AF  0271               	subwf	isdigit@c,w
  3935  12B0  1C03               	skipc
  3936  12B1  2AB4               	goto	l2871
  3937  12B2  01F0               	clrf	_isdigit$755
  3938  12B3  0AF0               	incf	_isdigit$755,f
  3939  12B4                     l2871:	
  3940  12B4  0C70               	rrf	_isdigit$755,w
  3941  12B5  0008               	return
  3942  12B6                     __end_of_isdigit:	
  3943                           
  3944                           	psect	text4
  3945  0014                     __ptext4:	
  3946 ;; *************** function _fround *****************
  3947 ;; Defined at:
  3948 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  prec            1    wreg     unsigned char 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  prec            1   38[BANK0 ] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  3   23[BANK0 ] unsigned char 
  3955 ;; Registers used:
  3956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3962 ;;      Params:         0       3       0       0       0
  3963 ;;      Locals:         0       7       0       0       0
  3964 ;;      Temps:          0       6       0       0       0
  3965 ;;      Totals:         0      16       0       0       0
  3966 ;;Total ram usage:       16 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    2
  3969 ;; This function calls:
  3970 ;;		___awdiv
  3971 ;;		___awmod
  3972 ;;		___bmul
  3973 ;;		___ftmul
  3974 ;; This function is called by:
  3975 ;;		_sprintf
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           
  3980                           ;psect for function _fround
  3981  0014                     _fround:	
  3982                           
  3983                           ;incstack = 0
  3984                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3985                           ;fround@prec stored from wreg
  3986  0014  1283               	bcf	3,5	;RP0=0, select bank0
  3987  0015  1303               	bcf	3,6	;RP1=0, select bank0
  3988  0016  00C6               	movwf	fround@prec
  3989                           
  3990                           ;doprnt.c: 413: if(prec>=110)
  3991  0017  306E               	movlw	110
  3992  0018  0246               	subwf	fround@prec,w
  3993  0019  1C03               	skipc
  3994  001A  28F2               	goto	l2811
  3995                           
  3996                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3997  001B  3003               	movlw	3
  3998  001C  00BA               	movwf	??_fround
  3999  001D  083A               	movf	??_fround,w
  4000  001E  00A4               	movwf	___bmul@multiplicand
  4001  001F  300A               	movlw	10
  4002  0020  00F7               	movwf	___awdiv@divisor
  4003  0021  3000               	movlw	0
  4004  0022  00F8               	movwf	___awdiv@divisor+1
  4005  0023  0846               	movf	fround@prec,w
  4006  0024  00BB               	movwf	??_fround+1
  4007  0025  01BC               	clrf	??_fround+2
  4008  0026  083B               	movf	??_fround+1,w
  4009  0027  00F2               	movwf	___awmod@dividend
  4010  0028  083C               	movf	??_fround+2,w
  4011  0029  00F3               	movwf	___awmod@dividend+1
  4012  002A  3064               	movlw	100
  4013  002B  00F0               	movwf	___awmod@divisor
  4014  002C  3000               	movlw	0
  4015  002D  00F1               	movwf	___awmod@divisor+1
  4016  002E  160A  118A  2383  120A  118A  	fcall	___awmod
  4017  0033  0871               	movf	?___awmod+1,w
  4018  0034  00FA               	movwf	___awdiv@dividend+1
  4019  0035  0870               	movf	?___awmod,w
  4020  0036  00F9               	movwf	___awdiv@dividend
  4021  0037  160A  118A  2475  120A  118A  	fcall	___awdiv
  4022  003C  0877               	movf	?___awdiv,w
  4023  003D  3E09               	addlw	9
  4024  003E  160A  118A  22B6  120A  118A  	fcall	___bmul
  4025  0043  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4026  0044  0084               	movwf	4
  4027  0045  160A  118A  2000  120A  118A  	fcall	stringdir
  4028  004A  1283               	bcf	3,5	;RP0=0, select bank0
  4029  004B  1303               	bcf	3,6	;RP1=0, select bank0
  4030  004C  00A7               	movwf	___ftmul@f1
  4031  004D  160A  118A  2000  120A  118A  	fcall	stringdir
  4032  0052  00A8               	movwf	___ftmul@f1+1
  4033  0053  160A  118A  2000  120A  118A  	fcall	stringdir
  4034  0058  00A9               	movwf	___ftmul@f1+2
  4035  0059  3003               	movlw	3
  4036  005A  00BD               	movwf	??_fround+3
  4037  005B  083D               	movf	??_fround+3,w
  4038  005C  00A4               	movwf	___bmul@multiplicand
  4039  005D  3064               	movlw	100
  4040  005E  00F7               	movwf	___awdiv@divisor
  4041  005F  3000               	movlw	0
  4042  0060  00F8               	movwf	___awdiv@divisor+1
  4043  0061  0846               	movf	fround@prec,w
  4044  0062  00BE               	movwf	??_fround+4
  4045  0063  01BF               	clrf	??_fround+5
  4046  0064  083E               	movf	??_fround+4,w
  4047  0065  00F9               	movwf	___awdiv@dividend
  4048  0066  083F               	movf	??_fround+5,w
  4049  0067  00FA               	movwf	___awdiv@dividend+1
  4050  0068  160A  118A  2475  120A  118A  	fcall	___awdiv
  4051  006D  0877               	movf	?___awdiv,w
  4052  006E  3E12               	addlw	18
  4053  006F  160A  118A  22B6  120A  118A  	fcall	___bmul
  4054  0074  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4055  0075  0084               	movwf	4
  4056  0076  160A  118A  2000  120A  118A  	fcall	stringdir
  4057  007B  1283               	bcf	3,5	;RP0=0, select bank0
  4058  007C  1303               	bcf	3,6	;RP1=0, select bank0
  4059  007D  00AA               	movwf	___ftmul@f2
  4060  007E  160A  118A  2000  120A  118A  	fcall	stringdir
  4061  0083  00AB               	movwf	___ftmul@f2+1
  4062  0084  160A  118A  2000  120A  118A  	fcall	stringdir
  4063  0089  00AC               	movwf	___ftmul@f2+2
  4064  008A  120A  158A  202A  120A  118A  	fcall	___ftmul
  4065  008F  1283               	bcf	3,5	;RP0=0, select bank0
  4066  0090  1303               	bcf	3,6	;RP1=0, select bank0
  4067  0091  0827               	movf	?___ftmul,w
  4068  0092  00C3               	movwf	_fround$966
  4069  0093  0828               	movf	?___ftmul+1,w
  4070  0094  00C4               	movwf	_fround$966+1
  4071  0095  0829               	movf	?___ftmul+2,w
  4072  0096  00C5               	movwf	_fround$966+2
  4073                           
  4074                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4075  0097  3003               	movlw	3
  4076  0098  00BA               	movwf	??_fround
  4077  0099  083A               	movf	??_fround,w
  4078  009A  00A4               	movwf	___bmul@multiplicand
  4079  009B  0846               	movf	fround@prec,w
  4080  009C  00BB               	movwf	??_fround+1
  4081  009D  01BC               	clrf	??_fround+2
  4082  009E  083B               	movf	??_fround+1,w
  4083  009F  00F2               	movwf	___awmod@dividend
  4084  00A0  083C               	movf	??_fround+2,w
  4085  00A1  00F3               	movwf	___awmod@dividend+1
  4086  00A2  300A               	movlw	10
  4087  00A3  00F0               	movwf	___awmod@divisor
  4088  00A4  3000               	movlw	0
  4089  00A5  00F1               	movwf	___awmod@divisor+1
  4090  00A6  160A  118A  2383  120A  118A  	fcall	___awmod
  4091  00AB  0870               	movf	?___awmod,w
  4092  00AC  160A  118A  22B6  120A  118A  	fcall	___bmul
  4093  00B1  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4094  00B2  0084               	movwf	4
  4095  00B3  160A  118A  2000  120A  118A  	fcall	stringdir
  4096  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  4097  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  4098  00BA  00A7               	movwf	___ftmul@f1
  4099  00BB  160A  118A  2000  120A  118A  	fcall	stringdir
  4100  00C0  00A8               	movwf	___ftmul@f1+1
  4101  00C1  160A  118A  2000  120A  118A  	fcall	stringdir
  4102  00C6  00A9               	movwf	___ftmul@f1+2
  4103  00C7  0843               	movf	_fround$966,w
  4104  00C8  00AA               	movwf	___ftmul@f2
  4105  00C9  0844               	movf	_fround$966+1,w
  4106  00CA  00AB               	movwf	___ftmul@f2+1
  4107  00CB  0845               	movf	_fround$966+2,w
  4108  00CC  00AC               	movwf	___ftmul@f2+2
  4109  00CD  120A  158A  202A  120A  118A  	fcall	___ftmul
  4110  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  4111  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  4112  00D4  0827               	movf	?___ftmul,w
  4113  00D5  00C0               	movwf	_fround$967
  4114  00D6  0828               	movf	?___ftmul+1,w
  4115  00D7  00C1               	movwf	_fround$967+1
  4116  00D8  0829               	movf	?___ftmul+2,w
  4117  00D9  00C2               	movwf	_fround$967+2
  4118                           
  4119                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4120  00DA  3000               	movlw	0
  4121  00DB  00A7               	movwf	___ftmul@f1
  4122  00DC  3000               	movlw	0
  4123  00DD  00A8               	movwf	___ftmul@f1+1
  4124  00DE  303F               	movlw	63
  4125  00DF  00A9               	movwf	___ftmul@f1+2
  4126  00E0  0840               	movf	_fround$967,w
  4127  00E1  00AA               	movwf	___ftmul@f2
  4128  00E2  0841               	movf	_fround$967+1,w
  4129  00E3  00AB               	movwf	___ftmul@f2+1
  4130  00E4  0842               	movf	_fround$967+2,w
  4131  00E5  00AC               	movwf	___ftmul@f2+2
  4132  00E6  120A  158A  202A   	fcall	___ftmul
  4133  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  4134  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  4135  00EB  0827               	movf	?___ftmul,w
  4136  00EC  00B7               	movwf	?_fround
  4137  00ED  0828               	movf	?___ftmul+1,w
  4138  00EE  00B8               	movwf	?_fround+1
  4139  00EF  0829               	movf	?___ftmul+2,w
  4140  00F0  00B9               	movwf	?_fround+2
  4141  00F1  0008               	return
  4142  00F2                     l2811:	
  4143                           
  4144                           ;doprnt.c: 415: else if(prec > 10)
  4145  00F2  300B               	movlw	11
  4146  00F3  0246               	subwf	fround@prec,w
  4147  00F4  1C03               	skipc
  4148  00F5  297C               	goto	l2819
  4149                           
  4150                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4151  00F6  3003               	movlw	3
  4152  00F7  00BA               	movwf	??_fround
  4153  00F8  083A               	movf	??_fround,w
  4154  00F9  00A4               	movwf	___bmul@multiplicand
  4155  00FA  0846               	movf	fround@prec,w
  4156  00FB  00BB               	movwf	??_fround+1
  4157  00FC  01BC               	clrf	??_fround+2
  4158  00FD  083B               	movf	??_fround+1,w
  4159  00FE  00F2               	movwf	___awmod@dividend
  4160  00FF  083C               	movf	??_fround+2,w
  4161  0100  00F3               	movwf	___awmod@dividend+1
  4162  0101  300A               	movlw	10
  4163  0102  00F0               	movwf	___awmod@divisor
  4164  0103  3000               	movlw	0
  4165  0104  00F1               	movwf	___awmod@divisor+1
  4166  0105  160A  118A  2383  120A  118A  	fcall	___awmod
  4167  010A  0870               	movf	?___awmod,w
  4168  010B  160A  118A  22B6  120A  118A  	fcall	___bmul
  4169  0110  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4170  0111  0084               	movwf	4
  4171  0112  160A  118A  2000  120A  118A  	fcall	stringdir
  4172  0117  1283               	bcf	3,5	;RP0=0, select bank0
  4173  0118  1303               	bcf	3,6	;RP1=0, select bank0
  4174  0119  00A7               	movwf	___ftmul@f1
  4175  011A  160A  118A  2000  120A  118A  	fcall	stringdir
  4176  011F  00A8               	movwf	___ftmul@f1+1
  4177  0120  160A  118A  2000  120A  118A  	fcall	stringdir
  4178  0125  00A9               	movwf	___ftmul@f1+2
  4179  0126  3003               	movlw	3
  4180  0127  00BD               	movwf	??_fround+3
  4181  0128  083D               	movf	??_fround+3,w
  4182  0129  00A4               	movwf	___bmul@multiplicand
  4183  012A  300A               	movlw	10
  4184  012B  00F7               	movwf	___awdiv@divisor
  4185  012C  3000               	movlw	0
  4186  012D  00F8               	movwf	___awdiv@divisor+1
  4187  012E  0846               	movf	fround@prec,w
  4188  012F  00BE               	movwf	??_fround+4
  4189  0130  01BF               	clrf	??_fround+5
  4190  0131  083E               	movf	??_fround+4,w
  4191  0132  00F9               	movwf	___awdiv@dividend
  4192  0133  083F               	movf	??_fround+5,w
  4193  0134  00FA               	movwf	___awdiv@dividend+1
  4194  0135  160A  118A  2475  120A  118A  	fcall	___awdiv
  4195  013A  0877               	movf	?___awdiv,w
  4196  013B  3E09               	addlw	9
  4197  013C  160A  118A  22B6  120A  118A  	fcall	___bmul
  4198  0141  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4199  0142  0084               	movwf	4
  4200  0143  160A  118A  2000  120A  118A  	fcall	stringdir
  4201  0148  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0149  1303               	bcf	3,6	;RP1=0, select bank0
  4203  014A  00AA               	movwf	___ftmul@f2
  4204  014B  160A  118A  2000  120A  118A  	fcall	stringdir
  4205  0150  00AB               	movwf	___ftmul@f2+1
  4206  0151  160A  118A  2000  120A  118A  	fcall	stringdir
  4207  0156  00AC               	movwf	___ftmul@f2+2
  4208  0157  120A  158A  202A  120A  118A  	fcall	___ftmul
  4209  015C  1283               	bcf	3,5	;RP0=0, select bank0
  4210  015D  1303               	bcf	3,6	;RP1=0, select bank0
  4211  015E  0827               	movf	?___ftmul,w
  4212  015F  00C3               	movwf	_fround$966
  4213  0160  0828               	movf	?___ftmul+1,w
  4214  0161  00C4               	movwf	_fround$966+1
  4215  0162  0829               	movf	?___ftmul+2,w
  4216  0163  00C5               	movwf	_fround$966+2
  4217                           
  4218                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4219  0164  3000               	movlw	0
  4220  0165  00A7               	movwf	___ftmul@f1
  4221  0166  3000               	movlw	0
  4222  0167  00A8               	movwf	___ftmul@f1+1
  4223  0168  303F               	movlw	63
  4224  0169  00A9               	movwf	___ftmul@f1+2
  4225  016A  0843               	movf	_fround$966,w
  4226  016B  00AA               	movwf	___ftmul@f2
  4227  016C  0844               	movf	_fround$966+1,w
  4228  016D  00AB               	movwf	___ftmul@f2+1
  4229  016E  0845               	movf	_fround$966+2,w
  4230  016F  00AC               	movwf	___ftmul@f2+2
  4231  0170  120A  158A  202A   	fcall	___ftmul
  4232  0173  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0174  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0175  0827               	movf	?___ftmul,w
  4235  0176  00B7               	movwf	?_fround
  4236  0177  0828               	movf	?___ftmul+1,w
  4237  0178  00B8               	movwf	?_fround+1
  4238  0179  0829               	movf	?___ftmul+2,w
  4239  017A  00B9               	movwf	?_fround+2
  4240  017B  0008               	return
  4241  017C                     l2819:	
  4242                           
  4243                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4244  017C  3000               	movlw	0
  4245  017D  00A7               	movwf	___ftmul@f1
  4246  017E  3000               	movlw	0
  4247  017F  00A8               	movwf	___ftmul@f1+1
  4248  0180  303F               	movlw	63
  4249  0181  00A9               	movwf	___ftmul@f1+2
  4250  0182  3003               	movlw	3
  4251  0183  00BA               	movwf	??_fround
  4252  0184  083A               	movf	??_fround,w
  4253  0185  00A4               	movwf	___bmul@multiplicand
  4254  0186  0846               	movf	fround@prec,w
  4255  0187  160A  118A  22B6  120A  118A  	fcall	___bmul
  4256  018C  3E29               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4257  018D  0084               	movwf	4
  4258  018E  160A  118A  2000  120A  118A  	fcall	stringdir
  4259  0193  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0194  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0195  00AA               	movwf	___ftmul@f2
  4262  0196  160A  118A  2000  120A  118A  	fcall	stringdir
  4263  019B  00AB               	movwf	___ftmul@f2+1
  4264  019C  160A  118A  2000  120A  118A  	fcall	stringdir
  4265  01A1  00AC               	movwf	___ftmul@f2+2
  4266  01A2  120A  158A  202A   	fcall	___ftmul
  4267  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  4268  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  4269  01A7  0827               	movf	?___ftmul,w
  4270  01A8  00B7               	movwf	?_fround
  4271  01A9  0828               	movf	?___ftmul+1,w
  4272  01AA  00B8               	movwf	?_fround+1
  4273  01AB  0829               	movf	?___ftmul+2,w
  4274  01AC  00B9               	movwf	?_fround+2
  4275  01AD  0008               	return
  4276  01AE                     __end_of_fround:	
  4277                           
  4278                           	psect	text5
  4279  082A                     __ptext5:	
  4280 ;; *************** function ___ftmul *****************
  4281 ;; Defined at:
  4282 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  f1              3    7[BANK0 ] float 
  4285 ;;  f2              3   10[BANK0 ] float 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  4288 ;;  sign            1   22[BANK0 ] unsigned char 
  4289 ;;  cntr            1   21[BANK0 ] unsigned char 
  4290 ;;  exp             1   17[BANK0 ] unsigned char 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  3    7[BANK0 ] float 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0, pclath, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4300 ;;      Params:         0       6       0       0       0
  4301 ;;      Locals:         0       6       0       0       0
  4302 ;;      Temps:          0       4       0       0       0
  4303 ;;      Totals:         0      16       0       0       0
  4304 ;;Total ram usage:       16 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    1
  4307 ;; This function calls:
  4308 ;;		___ftpack
  4309 ;; This function is called by:
  4310 ;;		_main
  4311 ;;		_fround
  4312 ;;		_scale
  4313 ;;		_sprintf
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           
  4318                           ;psect for function ___ftmul
  4319  082A                     ___ftmul:	
  4320                           
  4321                           ;incstack = 0
  4322                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4323  082A  1283               	bcf	3,5	;RP0=0, select bank0
  4324  082B  1303               	bcf	3,6	;RP1=0, select bank0
  4325  082C  0827               	movf	___ftmul@f1,w
  4326  082D  00AD               	movwf	??___ftmul
  4327  082E  0828               	movf	___ftmul@f1+1,w
  4328  082F  00AE               	movwf	??___ftmul+1
  4329  0830  0829               	movf	___ftmul@f1+2,w
  4330  0831  00AF               	movwf	??___ftmul+2
  4331  0832  1003               	clrc
  4332  0833  0D2E               	rlf	??___ftmul+1,w
  4333  0834  0D2F               	rlf	??___ftmul+2,w
  4334  0835  00B0               	movwf	??___ftmul+3
  4335  0836  0830               	movf	??___ftmul+3,w
  4336  0837  00B1               	movwf	___ftmul@exp
  4337  0838  0831               	movf	___ftmul@exp,w
  4338  0839  1D03               	btfss	3,2
  4339  083A  2842               	goto	l2753
  4340  083B  3000               	movlw	0
  4341  083C  00A7               	movwf	?___ftmul
  4342  083D  3000               	movlw	0
  4343  083E  00A8               	movwf	?___ftmul+1
  4344  083F  3000               	movlw	0
  4345  0840  00A9               	movwf	?___ftmul+2
  4346  0841  0008               	return
  4347  0842                     l2753:	
  4348  0842  082A               	movf	___ftmul@f2,w
  4349  0843  00AD               	movwf	??___ftmul
  4350  0844  082B               	movf	___ftmul@f2+1,w
  4351  0845  00AE               	movwf	??___ftmul+1
  4352  0846  082C               	movf	___ftmul@f2+2,w
  4353  0847  00AF               	movwf	??___ftmul+2
  4354  0848  1003               	clrc
  4355  0849  0D2E               	rlf	??___ftmul+1,w
  4356  084A  0D2F               	rlf	??___ftmul+2,w
  4357  084B  00B0               	movwf	??___ftmul+3
  4358  084C  0830               	movf	??___ftmul+3,w
  4359  084D  00B6               	movwf	___ftmul@sign
  4360  084E  0836               	movf	___ftmul@sign,w
  4361  084F  1D03               	btfss	3,2
  4362  0850  2858               	goto	l2759
  4363  0851  3000               	movlw	0
  4364  0852  00A7               	movwf	?___ftmul
  4365  0853  3000               	movlw	0
  4366  0854  00A8               	movwf	?___ftmul+1
  4367  0855  3000               	movlw	0
  4368  0856  00A9               	movwf	?___ftmul+2
  4369  0857  0008               	return
  4370  0858                     l2759:	
  4371  0858  0836               	movf	___ftmul@sign,w
  4372  0859  3E7B               	addlw	123
  4373  085A  00AD               	movwf	??___ftmul
  4374  085B  082D               	movf	??___ftmul,w
  4375  085C  07B1               	addwf	___ftmul@exp,f
  4376  085D  0827               	movf	___ftmul@f1,w
  4377  085E  00AD               	movwf	??___ftmul
  4378  085F  0828               	movf	___ftmul@f1+1,w
  4379  0860  00AE               	movwf	??___ftmul+1
  4380  0861  0829               	movf	___ftmul@f1+2,w
  4381  0862  00AF               	movwf	??___ftmul+2
  4382  0863  3010               	movlw	16
  4383  0864                     u2585:	
  4384  0864  1003               	clrc
  4385  0865  0CAF               	rrf	??___ftmul+2,f
  4386  0866  0CAE               	rrf	??___ftmul+1,f
  4387  0867  0CAD               	rrf	??___ftmul,f
  4388  0868  3EFF               	addlw	-1
  4389  0869  1D03               	skipz
  4390  086A  2864               	goto	u2585
  4391  086B  082D               	movf	??___ftmul,w
  4392  086C  00B0               	movwf	??___ftmul+3
  4393  086D  0830               	movf	??___ftmul+3,w
  4394  086E  00B6               	movwf	___ftmul@sign
  4395  086F  082A               	movf	___ftmul@f2,w
  4396  0870  00AD               	movwf	??___ftmul
  4397  0871  082B               	movf	___ftmul@f2+1,w
  4398  0872  00AE               	movwf	??___ftmul+1
  4399  0873  082C               	movf	___ftmul@f2+2,w
  4400  0874  00AF               	movwf	??___ftmul+2
  4401  0875  3010               	movlw	16
  4402  0876                     u2595:	
  4403  0876  1003               	clrc
  4404  0877  0CAF               	rrf	??___ftmul+2,f
  4405  0878  0CAE               	rrf	??___ftmul+1,f
  4406  0879  0CAD               	rrf	??___ftmul,f
  4407  087A  3EFF               	addlw	-1
  4408  087B  1D03               	skipz
  4409  087C  2876               	goto	u2595
  4410  087D  082D               	movf	??___ftmul,w
  4411  087E  00B0               	movwf	??___ftmul+3
  4412  087F  0830               	movf	??___ftmul+3,w
  4413  0880  06B6               	xorwf	___ftmul@sign,f
  4414  0881  3080               	movlw	128
  4415  0882  00AD               	movwf	??___ftmul
  4416  0883  082D               	movf	??___ftmul,w
  4417  0884  05B6               	andwf	___ftmul@sign,f
  4418  0885  17A8               	bsf	___ftmul@f1+1,7
  4419  0886  17AB               	bsf	___ftmul@f2+1,7
  4420  0887  30FF               	movlw	255
  4421  0888  05AA               	andwf	___ftmul@f2,f
  4422  0889  30FF               	movlw	255
  4423  088A  05AB               	andwf	___ftmul@f2+1,f
  4424  088B  3000               	movlw	0
  4425  088C  05AC               	andwf	___ftmul@f2+2,f
  4426  088D  3000               	movlw	0
  4427  088E  00B2               	movwf	___ftmul@f3_as_product
  4428  088F  3000               	movlw	0
  4429  0890  00B3               	movwf	___ftmul@f3_as_product+1
  4430  0891  3000               	movlw	0
  4431  0892  00B4               	movwf	___ftmul@f3_as_product+2
  4432  0893  3007               	movlw	7
  4433  0894  00AD               	movwf	??___ftmul
  4434  0895  082D               	movf	??___ftmul,w
  4435  0896  00B5               	movwf	___ftmul@cntr
  4436  0897                     l2771:	
  4437  0897  1C27               	btfss	___ftmul@f1,0
  4438  0898  28A7               	goto	l2775
  4439  0899  082A               	movf	___ftmul@f2,w
  4440  089A  07B2               	addwf	___ftmul@f3_as_product,f
  4441  089B  082B               	movf	___ftmul@f2+1,w
  4442  089C  1103               	clrz
  4443  089D  1803               	skipnc
  4444  089E  0A2B               	incf	___ftmul@f2+1,w
  4445  089F  1D03               	btfss	3,2
  4446  08A0  07B3               	addwf	___ftmul@f3_as_product+1,f
  4447  08A1  082C               	movf	___ftmul@f2+2,w
  4448  08A2  1103               	clrz
  4449  08A3  1803               	skipnc
  4450  08A4  0A2C               	incf	___ftmul@f2+2,w
  4451  08A5  1D03               	btfss	3,2
  4452  08A6  07B4               	addwf	___ftmul@f3_as_product+2,f
  4453  08A7                     l2775:	
  4454  08A7  3001               	movlw	1
  4455  08A8                     u2625:	
  4456  08A8  1003               	clrc
  4457  08A9  0CA9               	rrf	___ftmul@f1+2,f
  4458  08AA  0CA8               	rrf	___ftmul@f1+1,f
  4459  08AB  0CA7               	rrf	___ftmul@f1,f
  4460  08AC  3EFF               	addlw	-1
  4461  08AD  1D03               	skipz
  4462  08AE  28A8               	goto	u2625
  4463  08AF  3001               	movlw	1
  4464  08B0                     u2635:	
  4465  08B0  1003               	clrc
  4466  08B1  0DAA               	rlf	___ftmul@f2,f
  4467  08B2  0DAB               	rlf	___ftmul@f2+1,f
  4468  08B3  0DAC               	rlf	___ftmul@f2+2,f
  4469  08B4  3EFF               	addlw	-1
  4470  08B5  1D03               	skipz
  4471  08B6  28B0               	goto	u2635
  4472  08B7  3001               	movlw	1
  4473  08B8  02B5               	subwf	___ftmul@cntr,f
  4474  08B9  1D03               	btfss	3,2
  4475  08BA  2897               	goto	l2771
  4476  08BB  3009               	movlw	9
  4477  08BC  00AD               	movwf	??___ftmul
  4478  08BD  082D               	movf	??___ftmul,w
  4479  08BE  00B5               	movwf	___ftmul@cntr
  4480  08BF                     l2783:	
  4481  08BF  1C27               	btfss	___ftmul@f1,0
  4482  08C0  28CF               	goto	l2787
  4483  08C1  082A               	movf	___ftmul@f2,w
  4484  08C2  07B2               	addwf	___ftmul@f3_as_product,f
  4485  08C3  082B               	movf	___ftmul@f2+1,w
  4486  08C4  1103               	clrz
  4487  08C5  1803               	skipnc
  4488  08C6  0A2B               	incf	___ftmul@f2+1,w
  4489  08C7  1D03               	btfss	3,2
  4490  08C8  07B3               	addwf	___ftmul@f3_as_product+1,f
  4491  08C9  082C               	movf	___ftmul@f2+2,w
  4492  08CA  1103               	clrz
  4493  08CB  1803               	skipnc
  4494  08CC  0A2C               	incf	___ftmul@f2+2,w
  4495  08CD  1D03               	btfss	3,2
  4496  08CE  07B4               	addwf	___ftmul@f3_as_product+2,f
  4497  08CF                     l2787:	
  4498  08CF  3001               	movlw	1
  4499  08D0                     u2675:	
  4500  08D0  1003               	clrc
  4501  08D1  0CA9               	rrf	___ftmul@f1+2,f
  4502  08D2  0CA8               	rrf	___ftmul@f1+1,f
  4503  08D3  0CA7               	rrf	___ftmul@f1,f
  4504  08D4  3EFF               	addlw	-1
  4505  08D5  1D03               	skipz
  4506  08D6  28D0               	goto	u2675
  4507  08D7  3001               	movlw	1
  4508  08D8                     u2685:	
  4509  08D8  1003               	clrc
  4510  08D9  0CB4               	rrf	___ftmul@f3_as_product+2,f
  4511  08DA  0CB3               	rrf	___ftmul@f3_as_product+1,f
  4512  08DB  0CB2               	rrf	___ftmul@f3_as_product,f
  4513  08DC  3EFF               	addlw	-1
  4514  08DD  1D03               	skipz
  4515  08DE  28D8               	goto	u2685
  4516  08DF  3001               	movlw	1
  4517  08E0  02B5               	subwf	___ftmul@cntr,f
  4518  08E1  1D03               	btfss	3,2
  4519  08E2  28BF               	goto	l2783
  4520  08E3  0832               	movf	___ftmul@f3_as_product,w
  4521  08E4  00F0               	movwf	___ftpack@arg
  4522  08E5  0833               	movf	___ftmul@f3_as_product+1,w
  4523  08E6  00F1               	movwf	___ftpack@arg+1
  4524  08E7  0834               	movf	___ftmul@f3_as_product+2,w
  4525  08E8  00F2               	movwf	___ftpack@arg+2
  4526  08E9  0831               	movf	___ftmul@exp,w
  4527  08EA  00AD               	movwf	??___ftmul
  4528  08EB  082D               	movf	??___ftmul,w
  4529  08EC  00F3               	movwf	___ftpack@exp
  4530  08ED  0836               	movf	___ftmul@sign,w
  4531  08EE  00AE               	movwf	??___ftmul+1
  4532  08EF  082E               	movf	??___ftmul+1,w
  4533  08F0  00F4               	movwf	___ftpack@sign
  4534  08F1  160A  118A  258B   	fcall	___ftpack
  4535  08F4  0870               	movf	?___ftpack,w
  4536  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  4537  08F6  1303               	bcf	3,6	;RP1=0, select bank0
  4538  08F7  00A7               	movwf	?___ftmul
  4539  08F8  0871               	movf	?___ftpack+1,w
  4540  08F9  00A8               	movwf	?___ftmul+1
  4541  08FA  0872               	movf	?___ftpack+2,w
  4542  08FB  00A9               	movwf	?___ftmul+2
  4543  08FC  0008               	return
  4544  08FD                     __end_of___ftmul:	
  4545                           
  4546                           	psect	text6
  4547  12B6                     __ptext6:	
  4548 ;; *************** function ___bmul *****************
  4549 ;; Defined at:
  4550 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  multiplier      1    wreg     unsigned char 
  4553 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  multiplier      1    6[BANK0 ] unsigned char 
  4556 ;;  product         1    5[BANK0 ] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      unsigned char 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4566 ;;      Params:         0       1       0       0       0
  4567 ;;      Locals:         0       2       0       0       0
  4568 ;;      Temps:          1       0       0       0       0
  4569 ;;      Totals:         1       3       0       0       0
  4570 ;;Total ram usage:        4 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_fround
  4576 ;;		_scale
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function ___bmul
  4582  12B6                     ___bmul:	
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4586                           ;___bmul@multiplier stored from wreg
  4587  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  4588  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  4589  12B8  00A6               	movwf	___bmul@multiplier
  4590  12B9  01A5               	clrf	___bmul@product
  4591  12BA                     l2583:	
  4592  12BA  1C26               	btfss	___bmul@multiplier,0
  4593  12BB  2AC0               	goto	l2587
  4594  12BC  0824               	movf	___bmul@multiplicand,w
  4595  12BD  00FC               	movwf	??___bmul
  4596  12BE  087C               	movf	??___bmul,w
  4597  12BF  07A5               	addwf	___bmul@product,f
  4598  12C0                     l2587:	
  4599  12C0  1003               	clrc
  4600  12C1  0DA4               	rlf	___bmul@multiplicand,f
  4601  12C2  1003               	clrc
  4602  12C3  0CA6               	rrf	___bmul@multiplier,f
  4603  12C4  0826               	movf	___bmul@multiplier,w
  4604  12C5  1D03               	btfss	3,2
  4605  12C6  2ABA               	goto	l2583
  4606  12C7  0825               	movf	___bmul@product,w
  4607  12C8  0008               	return
  4608  12C9                     __end_of___bmul:	
  4609                           
  4610                           	psect	text7
  4611  1383                     __ptext7:	
  4612 ;; *************** function ___awmod *****************
  4613 ;; Defined at:
  4614 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  divisor         2    0[COMMON] int 
  4617 ;;  dividend        2    2[COMMON] int 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  sign            1    6[COMMON] unsigned char 
  4620 ;;  counter         1    5[COMMON] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  2    0[COMMON] int 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4630 ;;      Params:         4       0       0       0       0
  4631 ;;      Locals:         2       0       0       0       0
  4632 ;;      Temps:          1       0       0       0       0
  4633 ;;      Totals:         7       0       0       0       0
  4634 ;;Total ram usage:        7 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_fround
  4640 ;;		_scale
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           
  4645                           ;psect for function ___awmod
  4646  1383                     ___awmod:	
  4647                           
  4648                           ;incstack = 0
  4649                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4650  1383  01F6               	clrf	___awmod@sign
  4651  1384  1FF3               	btfss	___awmod@dividend+1,7
  4652  1385  2B8D               	goto	l2647
  4653  1386  09F2               	comf	___awmod@dividend,f
  4654  1387  09F3               	comf	___awmod@dividend+1,f
  4655  1388  0AF2               	incf	___awmod@dividend,f
  4656  1389  1903               	skipnz
  4657  138A  0AF3               	incf	___awmod@dividend+1,f
  4658  138B  01F6               	clrf	___awmod@sign
  4659  138C  0AF6               	incf	___awmod@sign,f
  4660  138D                     l2647:	
  4661  138D  1FF1               	btfss	___awmod@divisor+1,7
  4662  138E  2B94               	goto	l2651
  4663  138F  09F0               	comf	___awmod@divisor,f
  4664  1390  09F1               	comf	___awmod@divisor+1,f
  4665  1391  0AF0               	incf	___awmod@divisor,f
  4666  1392  1903               	skipnz
  4667  1393  0AF1               	incf	___awmod@divisor+1,f
  4668  1394                     l2651:	
  4669  1394  0870               	movf	___awmod@divisor,w
  4670  1395  0471               	iorwf	___awmod@divisor+1,w
  4671  1396  1903               	btfsc	3,2
  4672  1397  2BC1               	goto	l2669
  4673  1398  01F5               	clrf	___awmod@counter
  4674  1399  0AF5               	incf	___awmod@counter,f
  4675  139A                     l2659:	
  4676  139A  1BF1               	btfsc	___awmod@divisor+1,7
  4677  139B  2BA8               	goto	l2661
  4678  139C  3001               	movlw	1
  4679  139D                     u2265:	
  4680  139D  1003               	clrc
  4681  139E  0DF0               	rlf	___awmod@divisor,f
  4682  139F  0DF1               	rlf	___awmod@divisor+1,f
  4683  13A0  3EFF               	addlw	-1
  4684  13A1  1D03               	skipz
  4685  13A2  2B9D               	goto	u2265
  4686  13A3  3001               	movlw	1
  4687  13A4  00F4               	movwf	??___awmod
  4688  13A5  0874               	movf	??___awmod,w
  4689  13A6  07F5               	addwf	___awmod@counter,f
  4690  13A7  2B9A               	goto	l2659
  4691  13A8                     l2661:	
  4692  13A8  0871               	movf	___awmod@divisor+1,w
  4693  13A9  0273               	subwf	___awmod@dividend+1,w
  4694  13AA  1D03               	skipz
  4695  13AB  2BAE               	goto	u2285
  4696  13AC  0870               	movf	___awmod@divisor,w
  4697  13AD  0272               	subwf	___awmod@dividend,w
  4698  13AE                     u2285:	
  4699  13AE  1C03               	skipc
  4700  13AF  2BB6               	goto	l2665
  4701  13B0  0870               	movf	___awmod@divisor,w
  4702  13B1  02F2               	subwf	___awmod@dividend,f
  4703  13B2  0871               	movf	___awmod@divisor+1,w
  4704  13B3  1C03               	skipc
  4705  13B4  03F3               	decf	___awmod@dividend+1,f
  4706  13B5  02F3               	subwf	___awmod@dividend+1,f
  4707  13B6                     l2665:	
  4708  13B6  3001               	movlw	1
  4709  13B7                     u2295:	
  4710  13B7  1003               	clrc
  4711  13B8  0CF1               	rrf	___awmod@divisor+1,f
  4712  13B9  0CF0               	rrf	___awmod@divisor,f
  4713  13BA  3EFF               	addlw	-1
  4714  13BB  1D03               	skipz
  4715  13BC  2BB7               	goto	u2295
  4716  13BD  3001               	movlw	1
  4717  13BE  02F5               	subwf	___awmod@counter,f
  4718  13BF  1D03               	btfss	3,2
  4719  13C0  2BA8               	goto	l2661
  4720  13C1                     l2669:	
  4721  13C1  0876               	movf	___awmod@sign,w
  4722  13C2  1903               	btfsc	3,2
  4723  13C3  2BC9               	goto	l2673
  4724  13C4  09F2               	comf	___awmod@dividend,f
  4725  13C5  09F3               	comf	___awmod@dividend+1,f
  4726  13C6  0AF2               	incf	___awmod@dividend,f
  4727  13C7  1903               	skipnz
  4728  13C8  0AF3               	incf	___awmod@dividend+1,f
  4729  13C9                     l2673:	
  4730  13C9  0873               	movf	___awmod@dividend+1,w
  4731  13CA  00F1               	movwf	?___awmod+1
  4732  13CB  0872               	movf	___awmod@dividend,w
  4733  13CC  00F0               	movwf	?___awmod
  4734  13CD  0008               	return
  4735  13CE                     __end_of___awmod:	
  4736                           
  4737                           	psect	text8
  4738  1475                     __ptext8:	
  4739 ;; *************** function ___awdiv *****************
  4740 ;; Defined at:
  4741 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  divisor         2    7[COMMON] int 
  4744 ;;  dividend        2    9[COMMON] int 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  quotient        2    2[BANK0 ] int 
  4747 ;;  sign            1    1[BANK0 ] unsigned char 
  4748 ;;  counter         1    0[BANK0 ] unsigned char 
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  2    7[COMMON] int 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4758 ;;      Params:         4       0       0       0       0
  4759 ;;      Locals:         0       4       0       0       0
  4760 ;;      Temps:          1       0       0       0       0
  4761 ;;      Totals:         5       4       0       0       0
  4762 ;;Total ram usage:        9 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_fround
  4768 ;;		_scale
  4769 ;;		_sprintf
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           
  4774                           ;psect for function ___awdiv
  4775  1475                     ___awdiv:	
  4776                           
  4777                           ;incstack = 0
  4778                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4779  1475  1283               	bcf	3,5	;RP0=0, select bank0
  4780  1476  1303               	bcf	3,6	;RP1=0, select bank0
  4781  1477  01A1               	clrf	___awdiv@sign
  4782  1478  1FF8               	btfss	___awdiv@divisor+1,7
  4783  1479  2C81               	goto	l2603
  4784  147A  09F7               	comf	___awdiv@divisor,f
  4785  147B  09F8               	comf	___awdiv@divisor+1,f
  4786  147C  0AF7               	incf	___awdiv@divisor,f
  4787  147D  1903               	skipnz
  4788  147E  0AF8               	incf	___awdiv@divisor+1,f
  4789  147F  01A1               	clrf	___awdiv@sign
  4790  1480  0AA1               	incf	___awdiv@sign,f
  4791  1481                     l2603:	
  4792  1481  1FFA               	btfss	___awdiv@dividend+1,7
  4793  1482  2C8C               	goto	l2609
  4794  1483  09F9               	comf	___awdiv@dividend,f
  4795  1484  09FA               	comf	___awdiv@dividend+1,f
  4796  1485  0AF9               	incf	___awdiv@dividend,f
  4797  1486  1903               	skipnz
  4798  1487  0AFA               	incf	___awdiv@dividend+1,f
  4799  1488  3001               	movlw	1
  4800  1489  00FB               	movwf	??___awdiv
  4801  148A  087B               	movf	??___awdiv,w
  4802  148B  06A1               	xorwf	___awdiv@sign,f
  4803  148C                     l2609:	
  4804  148C  01A2               	clrf	___awdiv@quotient
  4805  148D  01A3               	clrf	___awdiv@quotient+1
  4806  148E  0877               	movf	___awdiv@divisor,w
  4807  148F  0478               	iorwf	___awdiv@divisor+1,w
  4808  1490  1903               	btfsc	3,2
  4809  1491  2CC3               	goto	l2631
  4810  1492  01A0               	clrf	___awdiv@counter
  4811  1493  0AA0               	incf	___awdiv@counter,f
  4812  1494                     l2619:	
  4813  1494  1BF8               	btfsc	___awdiv@divisor+1,7
  4814  1495  2CA2               	goto	l2621
  4815  1496  3001               	movlw	1
  4816  1497                     u2165:	
  4817  1497  1003               	clrc
  4818  1498  0DF7               	rlf	___awdiv@divisor,f
  4819  1499  0DF8               	rlf	___awdiv@divisor+1,f
  4820  149A  3EFF               	addlw	-1
  4821  149B  1D03               	skipz
  4822  149C  2C97               	goto	u2165
  4823  149D  3001               	movlw	1
  4824  149E  00FB               	movwf	??___awdiv
  4825  149F  087B               	movf	??___awdiv,w
  4826  14A0  07A0               	addwf	___awdiv@counter,f
  4827  14A1  2C94               	goto	l2619
  4828  14A2                     l2621:	
  4829  14A2  3001               	movlw	1
  4830  14A3                     u2185:	
  4831  14A3  1003               	clrc
  4832  14A4  0DA2               	rlf	___awdiv@quotient,f
  4833  14A5  0DA3               	rlf	___awdiv@quotient+1,f
  4834  14A6  3EFF               	addlw	-1
  4835  14A7  1D03               	skipz
  4836  14A8  2CA3               	goto	u2185
  4837  14A9  0878               	movf	___awdiv@divisor+1,w
  4838  14AA  027A               	subwf	___awdiv@dividend+1,w
  4839  14AB  1D03               	skipz
  4840  14AC  2CAF               	goto	u2195
  4841  14AD  0877               	movf	___awdiv@divisor,w
  4842  14AE  0279               	subwf	___awdiv@dividend,w
  4843  14AF                     u2195:	
  4844  14AF  1C03               	skipc
  4845  14B0  2CB8               	goto	l2627
  4846  14B1  0877               	movf	___awdiv@divisor,w
  4847  14B2  02F9               	subwf	___awdiv@dividend,f
  4848  14B3  0878               	movf	___awdiv@divisor+1,w
  4849  14B4  1C03               	skipc
  4850  14B5  03FA               	decf	___awdiv@dividend+1,f
  4851  14B6  02FA               	subwf	___awdiv@dividend+1,f
  4852  14B7  1422               	bsf	___awdiv@quotient,0
  4853  14B8                     l2627:	
  4854  14B8  3001               	movlw	1
  4855  14B9                     u2205:	
  4856  14B9  1003               	clrc
  4857  14BA  0CF8               	rrf	___awdiv@divisor+1,f
  4858  14BB  0CF7               	rrf	___awdiv@divisor,f
  4859  14BC  3EFF               	addlw	-1
  4860  14BD  1D03               	skipz
  4861  14BE  2CB9               	goto	u2205
  4862  14BF  3001               	movlw	1
  4863  14C0  02A0               	subwf	___awdiv@counter,f
  4864  14C1  1D03               	btfss	3,2
  4865  14C2  2CA2               	goto	l2621
  4866  14C3                     l2631:	
  4867  14C3  0821               	movf	___awdiv@sign,w
  4868  14C4  1903               	btfsc	3,2
  4869  14C5  2CCB               	goto	l2635
  4870  14C6  09A2               	comf	___awdiv@quotient,f
  4871  14C7  09A3               	comf	___awdiv@quotient+1,f
  4872  14C8  0AA2               	incf	___awdiv@quotient,f
  4873  14C9  1903               	skipnz
  4874  14CA  0AA3               	incf	___awdiv@quotient+1,f
  4875  14CB                     l2635:	
  4876  14CB  0823               	movf	___awdiv@quotient+1,w
  4877  14CC  00F8               	movwf	?___awdiv+1
  4878  14CD  0822               	movf	___awdiv@quotient,w
  4879  14CE  00F7               	movwf	?___awdiv
  4880  14CF  0008               	return
  4881  14D0                     __end_of___awdiv:	
  4882                           
  4883                           	psect	text9
  4884  173D                     __ptext9:	
  4885 ;; *************** function __tdiv_to_l_ *****************
  4886 ;; Defined at:
  4887 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  f1              3    0[COMMON] float 
  4890 ;;  f2              3    3[COMMON] float 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  quot            4    0[BANK0 ] unsigned long 
  4893 ;;  exp1            1    5[BANK0 ] unsigned char 
  4894 ;;  cntr            1    4[BANK0 ] unsigned char 
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  4    0[COMMON] unsigned long 
  4897 ;; Registers used:
  4898 ;;		wreg, status,2, status,0
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4904 ;;      Params:         6       0       0       0       0
  4905 ;;      Locals:         0       6       0       0       0
  4906 ;;      Temps:          4       0       0       0       0
  4907 ;;      Totals:        10       6       0       0       0
  4908 ;;Total ram usage:       16 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; This function calls:
  4911 ;;		Nothing
  4912 ;; This function is called by:
  4913 ;;		_sprintf
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           
  4918                           ;psect for function __tdiv_to_l_
  4919  173D                     __tdiv_to_l_:	
  4920                           
  4921                           ;incstack = 0
  4922                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4923  173D  0870               	movf	__tdiv_to_l_@f1,w
  4924  173E  00F6               	movwf	??__tdiv_to_l_
  4925  173F  0871               	movf	__tdiv_to_l_@f1+1,w
  4926  1740  00F7               	movwf	??__tdiv_to_l_+1
  4927  1741  0872               	movf	__tdiv_to_l_@f1+2,w
  4928  1742  00F8               	movwf	??__tdiv_to_l_+2
  4929  1743  1003               	clrc
  4930  1744  0D77               	rlf	??__tdiv_to_l_+1,w
  4931  1745  0D78               	rlf	??__tdiv_to_l_+2,w
  4932  1746  00F9               	movwf	??__tdiv_to_l_+3
  4933  1747  0879               	movf	??__tdiv_to_l_+3,w
  4934  1748  1283               	bcf	3,5	;RP0=0, select bank0
  4935  1749  1303               	bcf	3,6	;RP1=0, select bank0
  4936  174A  00A5               	movwf	__tdiv_to_l_@exp1
  4937  174B  0825               	movf	__tdiv_to_l_@exp1,w
  4938  174C  1D03               	btfss	3,2
  4939  174D  2F57               	goto	l2881
  4940  174E  3000               	movlw	0
  4941  174F  00F3               	movwf	?__tdiv_to_l_+3
  4942  1750  3000               	movlw	0
  4943  1751  00F2               	movwf	?__tdiv_to_l_+2
  4944  1752  3000               	movlw	0
  4945  1753  00F1               	movwf	?__tdiv_to_l_+1
  4946  1754  3000               	movlw	0
  4947  1755  00F0               	movwf	?__tdiv_to_l_
  4948  1756  0008               	return
  4949  1757                     l2881:	
  4950  1757  0873               	movf	__tdiv_to_l_@f2,w
  4951  1758  00F6               	movwf	??__tdiv_to_l_
  4952  1759  0874               	movf	__tdiv_to_l_@f2+1,w
  4953  175A  00F7               	movwf	??__tdiv_to_l_+1
  4954  175B  0875               	movf	__tdiv_to_l_@f2+2,w
  4955  175C  00F8               	movwf	??__tdiv_to_l_+2
  4956  175D  1003               	clrc
  4957  175E  0D77               	rlf	??__tdiv_to_l_+1,w
  4958  175F  0D78               	rlf	??__tdiv_to_l_+2,w
  4959  1760  00F9               	movwf	??__tdiv_to_l_+3
  4960  1761  0879               	movf	??__tdiv_to_l_+3,w
  4961  1762  00A4               	movwf	__tdiv_to_l_@cntr
  4962  1763  0824               	movf	__tdiv_to_l_@cntr,w
  4963  1764  1D03               	btfss	3,2
  4964  1765  2F6F               	goto	l1341
  4965  1766  3000               	movlw	0
  4966  1767  00F3               	movwf	?__tdiv_to_l_+3
  4967  1768  3000               	movlw	0
  4968  1769  00F2               	movwf	?__tdiv_to_l_+2
  4969  176A  3000               	movlw	0
  4970  176B  00F1               	movwf	?__tdiv_to_l_+1
  4971  176C  3000               	movlw	0
  4972  176D  00F0               	movwf	?__tdiv_to_l_
  4973  176E  0008               	return
  4974  176F                     l1341:	
  4975  176F  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4976  1770  30FF               	movlw	255
  4977  1771  05F0               	andwf	__tdiv_to_l_@f1,f
  4978  1772  30FF               	movlw	255
  4979  1773  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4980  1774  3000               	movlw	0
  4981  1775  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4982  1776  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4983  1777  30FF               	movlw	255
  4984  1778  05F3               	andwf	__tdiv_to_l_@f2,f
  4985  1779  30FF               	movlw	255
  4986  177A  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4987  177B  3000               	movlw	0
  4988  177C  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4989  177D  3000               	movlw	0
  4990  177E  00A3               	movwf	__tdiv_to_l_@quot+3
  4991  177F  3000               	movlw	0
  4992  1780  00A2               	movwf	__tdiv_to_l_@quot+2
  4993  1781  3000               	movlw	0
  4994  1782  00A1               	movwf	__tdiv_to_l_@quot+1
  4995  1783  3000               	movlw	0
  4996  1784  00A0               	movwf	__tdiv_to_l_@quot
  4997  1785  307F               	movlw	127
  4998  1786  02A5               	subwf	__tdiv_to_l_@exp1,f
  4999  1787  3098               	movlw	152
  5000  1788  0724               	addwf	__tdiv_to_l_@cntr,w
  5001  1789  00F6               	movwf	??__tdiv_to_l_
  5002  178A  0876               	movf	??__tdiv_to_l_,w
  5003  178B  02A5               	subwf	__tdiv_to_l_@exp1,f
  5004  178C  3018               	movlw	24
  5005  178D  00F6               	movwf	??__tdiv_to_l_
  5006  178E  0876               	movf	??__tdiv_to_l_,w
  5007  178F  00A4               	movwf	__tdiv_to_l_@cntr
  5008  1790                     l2895:	
  5009  1790  3001               	movlw	1
  5010  1791  00F6               	movwf	??__tdiv_to_l_
  5011  1792                     u2815:	
  5012  1792  1003               	clrc
  5013  1793  0DA0               	rlf	__tdiv_to_l_@quot,f
  5014  1794  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5015  1795  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5016  1796  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5017  1797  0BF6               	decfsz	??__tdiv_to_l_,f
  5018  1798  2F92               	goto	u2815
  5019  1799  0875               	movf	__tdiv_to_l_@f2+2,w
  5020  179A  0272               	subwf	__tdiv_to_l_@f1+2,w
  5021  179B  1D03               	skipz
  5022  179C  2FA3               	goto	u2825
  5023  179D  0874               	movf	__tdiv_to_l_@f2+1,w
  5024  179E  0271               	subwf	__tdiv_to_l_@f1+1,w
  5025  179F  1D03               	skipz
  5026  17A0  2FA3               	goto	u2825
  5027  17A1  0873               	movf	__tdiv_to_l_@f2,w
  5028  17A2  0270               	subwf	__tdiv_to_l_@f1,w
  5029  17A3                     u2825:	
  5030  17A3  1C03               	skipc
  5031  17A4  2FB0               	goto	l2903
  5032  17A5  0873               	movf	__tdiv_to_l_@f2,w
  5033  17A6  02F0               	subwf	__tdiv_to_l_@f1,f
  5034  17A7  0874               	movf	__tdiv_to_l_@f2+1,w
  5035  17A8  1C03               	skipc
  5036  17A9  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  5037  17AA  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5038  17AB  0875               	movf	__tdiv_to_l_@f2+2,w
  5039  17AC  1C03               	skipc
  5040  17AD  0A75               	incf	__tdiv_to_l_@f2+2,w
  5041  17AE  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5042  17AF  1420               	bsf	__tdiv_to_l_@quot,0
  5043  17B0                     l2903:	
  5044  17B0  3001               	movlw	1
  5045  17B1                     u2835:	
  5046  17B1  1003               	clrc
  5047  17B2  0DF0               	rlf	__tdiv_to_l_@f1,f
  5048  17B3  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5049  17B4  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5050  17B5  3EFF               	addlw	-1
  5051  17B6  1D03               	skipz
  5052  17B7  2FB1               	goto	u2835
  5053  17B8  3001               	movlw	1
  5054  17B9  02A4               	subwf	__tdiv_to_l_@cntr,f
  5055  17BA  1D03               	btfss	3,2
  5056  17BB  2F90               	goto	l2895
  5057  17BC  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5058  17BD  2FDC               	goto	l2915
  5059  17BE  0825               	movf	__tdiv_to_l_@exp1,w
  5060  17BF  3A80               	xorlw	128
  5061  17C0  3E97               	addlw	151
  5062  17C1  1803               	skipnc
  5063  17C2  2FCC               	goto	l2913
  5064  17C3  3000               	movlw	0
  5065  17C4  00F3               	movwf	?__tdiv_to_l_+3
  5066  17C5  3000               	movlw	0
  5067  17C6  00F2               	movwf	?__tdiv_to_l_+2
  5068  17C7  3000               	movlw	0
  5069  17C8  00F1               	movwf	?__tdiv_to_l_+1
  5070  17C9  3000               	movlw	0
  5071  17CA  00F0               	movwf	?__tdiv_to_l_
  5072  17CB  0008               	return
  5073  17CC                     l2913:	
  5074  17CC  3001               	movlw	1
  5075  17CD                     u2875:	
  5076  17CD  1003               	clrc
  5077  17CE  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5078  17CF  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5079  17D0  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5080  17D1  0CA0               	rrf	__tdiv_to_l_@quot,f
  5081  17D2  3EFF               	addlw	-1
  5082  17D3  1D03               	skipz
  5083  17D4  2FCD               	goto	u2875
  5084  17D5  3001               	movlw	1
  5085  17D6  00F6               	movwf	??__tdiv_to_l_
  5086  17D7  0876               	movf	??__tdiv_to_l_,w
  5087  17D8  07A5               	addwf	__tdiv_to_l_@exp1,f
  5088  17D9  1903               	btfsc	3,2
  5089  17DA  2FF7               	goto	l2923
  5090  17DB  2FCC               	goto	l2913
  5091  17DC                     l2915:	
  5092  17DC  3018               	movlw	24
  5093  17DD  0225               	subwf	__tdiv_to_l_@exp1,w
  5094  17DE  1C03               	skipc
  5095  17DF  2FF4               	goto	l1351
  5096  17E0  3000               	movlw	0
  5097  17E1  00F3               	movwf	?__tdiv_to_l_+3
  5098  17E2  3000               	movlw	0
  5099  17E3  00F2               	movwf	?__tdiv_to_l_+2
  5100  17E4  3000               	movlw	0
  5101  17E5  00F1               	movwf	?__tdiv_to_l_+1
  5102  17E6  3000               	movlw	0
  5103  17E7  00F0               	movwf	?__tdiv_to_l_
  5104  17E8  0008               	return
  5105  17E9                     l2921:	
  5106  17E9  3001               	movlw	1
  5107  17EA  00F6               	movwf	??__tdiv_to_l_
  5108  17EB                     u2905:	
  5109  17EB  1003               	clrc
  5110  17EC  0DA0               	rlf	__tdiv_to_l_@quot,f
  5111  17ED  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5112  17EE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5113  17EF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5114  17F0  0BF6               	decfsz	??__tdiv_to_l_,f
  5115  17F1  2FEB               	goto	u2905
  5116  17F2  3001               	movlw	1
  5117  17F3  02A5               	subwf	__tdiv_to_l_@exp1,f
  5118  17F4                     l1351:	
  5119  17F4  0825               	movf	__tdiv_to_l_@exp1,w
  5120  17F5  1D03               	btfss	3,2
  5121  17F6  2FE9               	goto	l2921
  5122  17F7                     l2923:	
  5123  17F7  0823               	movf	__tdiv_to_l_@quot+3,w
  5124  17F8  00F3               	movwf	?__tdiv_to_l_+3
  5125  17F9  0822               	movf	__tdiv_to_l_@quot+2,w
  5126  17FA  00F2               	movwf	?__tdiv_to_l_+2
  5127  17FB  0821               	movf	__tdiv_to_l_@quot+1,w
  5128  17FC  00F1               	movwf	?__tdiv_to_l_+1
  5129  17FD  0820               	movf	__tdiv_to_l_@quot,w
  5130  17FE  00F0               	movwf	?__tdiv_to_l_
  5131  17FF  0008               	return
  5132  1800                     __end_of__tdiv_to_l_:	
  5133                           
  5134                           	psect	text10
  5135  0A06                     __ptext10:	
  5136 ;; *************** function __div_to_l_ *****************
  5137 ;; Defined at:
  5138 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  f1              3    0[COMMON] unsigned long 
  5141 ;;  f2              3    3[COMMON] unsigned long 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  quot            4    0[BANK0 ] unsigned long 
  5144 ;;  exp1            1    5[BANK0 ] unsigned char 
  5145 ;;  cntr            1    4[BANK0 ] unsigned char 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  4    0[COMMON] unsigned long 
  5148 ;; Registers used:
  5149 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5155 ;;      Params:         6       0       0       0       0
  5156 ;;      Locals:         0       6       0       0       0
  5157 ;;      Temps:          8       0       0       0       0
  5158 ;;      Totals:        14       6       0       0       0
  5159 ;;Total ram usage:       20 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_sprintf
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           
  5169                           ;psect for function __div_to_l_
  5170  0A06                     __div_to_l_:	
  5171                           
  5172                           ;incstack = 0
  5173                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5174  0A06  3070               	movlw	low (__div_to_l_@f1| 0)
  5175  0A07  0084               	movwf	4
  5176  0A08  0800               	movf	0,w
  5177  0A09  00F6               	movwf	??__div_to_l_
  5178  0A0A  0A84               	incf	4,f
  5179  0A0B  0800               	movf	0,w
  5180  0A0C  00F7               	movwf	??__div_to_l_+1
  5181  0A0D  0A84               	incf	4,f
  5182  0A0E  0800               	movf	0,w
  5183  0A0F  00F8               	movwf	??__div_to_l_+2
  5184  0A10  0A84               	incf	4,f
  5185  0A11  0800               	movf	0,w
  5186  0A12  00F9               	movwf	??__div_to_l_+3
  5187  0A13  1003               	clrc
  5188  0A14  0D78               	rlf	??__div_to_l_+2,w
  5189  0A15  0D79               	rlf	??__div_to_l_+3,w
  5190  0A16  00FA               	movwf	??__div_to_l_+4
  5191  0A17  087A               	movf	??__div_to_l_+4,w
  5192  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  5193  0A19  1303               	bcf	3,6	;RP1=0, select bank0
  5194  0A1A  00A5               	movwf	__div_to_l_@exp1
  5195  0A1B  0825               	movf	__div_to_l_@exp1,w
  5196  0A1C  1D03               	btfss	3,2
  5197  0A1D  2A27               	goto	l2933
  5198  0A1E  3000               	movlw	0
  5199  0A1F  00F3               	movwf	?__div_to_l_+3
  5200  0A20  3000               	movlw	0
  5201  0A21  00F2               	movwf	?__div_to_l_+2
  5202  0A22  3000               	movlw	0
  5203  0A23  00F1               	movwf	?__div_to_l_+1
  5204  0A24  3000               	movlw	0
  5205  0A25  00F0               	movwf	?__div_to_l_
  5206  0A26  0008               	return
  5207  0A27                     l2933:	
  5208  0A27  3073               	movlw	low (__div_to_l_@f2| 0)
  5209  0A28  0084               	movwf	4
  5210  0A29  0800               	movf	0,w
  5211  0A2A  00F6               	movwf	??__div_to_l_
  5212  0A2B  0A84               	incf	4,f
  5213  0A2C  0800               	movf	0,w
  5214  0A2D  00F7               	movwf	??__div_to_l_+1
  5215  0A2E  0A84               	incf	4,f
  5216  0A2F  0800               	movf	0,w
  5217  0A30  00F8               	movwf	??__div_to_l_+2
  5218  0A31  0A84               	incf	4,f
  5219  0A32  0800               	movf	0,w
  5220  0A33  00F9               	movwf	??__div_to_l_+3
  5221  0A34  1003               	clrc
  5222  0A35  0D78               	rlf	??__div_to_l_+2,w
  5223  0A36  0D79               	rlf	??__div_to_l_+3,w
  5224  0A37  00FA               	movwf	??__div_to_l_+4
  5225  0A38  087A               	movf	??__div_to_l_+4,w
  5226  0A39  00A4               	movwf	__div_to_l_@cntr
  5227  0A3A  0824               	movf	__div_to_l_@cntr,w
  5228  0A3B  1D03               	btfss	3,2
  5229  0A3C  2A46               	goto	l2939
  5230  0A3D  3000               	movlw	0
  5231  0A3E  00F3               	movwf	?__div_to_l_+3
  5232  0A3F  3000               	movlw	0
  5233  0A40  00F2               	movwf	?__div_to_l_+2
  5234  0A41  3000               	movlw	0
  5235  0A42  00F1               	movwf	?__div_to_l_+1
  5236  0A43  3000               	movlw	0
  5237  0A44  00F0               	movwf	?__div_to_l_
  5238  0A45  0008               	return
  5239  0A46                     l2939:	
  5240  0A46  3070               	movlw	low (__div_to_l_@f1| 0)
  5241  0A47  0084               	movwf	4
  5242  0A48  3000               	movlw	0
  5243  0A49  0480               	iorwf	0,f
  5244  0A4A  0A84               	incf	4,f
  5245  0A4B  3000               	movlw	0
  5246  0A4C  0480               	iorwf	0,f
  5247  0A4D  0A84               	incf	4,f
  5248  0A4E  3080               	movlw	128
  5249  0A4F  0480               	iorwf	0,f
  5250  0A50  0A84               	incf	4,f
  5251  0A51  3000               	movlw	0
  5252  0A52  0480               	iorwf	0,f
  5253  0A53  3070               	movlw	low (__div_to_l_@f1| 0)
  5254  0A54  0084               	movwf	4
  5255  0A55  30FF               	movlw	255
  5256  0A56  0580               	andwf	0,f
  5257  0A57  0A84               	incf	4,f
  5258  0A58  30FF               	movlw	255
  5259  0A59  0580               	andwf	0,f
  5260  0A5A  0A84               	incf	4,f
  5261  0A5B  30FF               	movlw	255
  5262  0A5C  0580               	andwf	0,f
  5263  0A5D  0A84               	incf	4,f
  5264  0A5E  3000               	movlw	0
  5265  0A5F  0580               	andwf	0,f
  5266  0A60  3073               	movlw	low (__div_to_l_@f2| 0)
  5267  0A61  0084               	movwf	4
  5268  0A62  3000               	movlw	0
  5269  0A63  0480               	iorwf	0,f
  5270  0A64  0A84               	incf	4,f
  5271  0A65  3000               	movlw	0
  5272  0A66  0480               	iorwf	0,f
  5273  0A67  0A84               	incf	4,f
  5274  0A68  3080               	movlw	128
  5275  0A69  0480               	iorwf	0,f
  5276  0A6A  0A84               	incf	4,f
  5277  0A6B  3000               	movlw	0
  5278  0A6C  0480               	iorwf	0,f
  5279  0A6D  3073               	movlw	low (__div_to_l_@f2| 0)
  5280  0A6E  0084               	movwf	4
  5281  0A6F  30FF               	movlw	255
  5282  0A70  0580               	andwf	0,f
  5283  0A71  0A84               	incf	4,f
  5284  0A72  30FF               	movlw	255
  5285  0A73  0580               	andwf	0,f
  5286  0A74  0A84               	incf	4,f
  5287  0A75  30FF               	movlw	255
  5288  0A76  0580               	andwf	0,f
  5289  0A77  0A84               	incf	4,f
  5290  0A78  3000               	movlw	0
  5291  0A79  0580               	andwf	0,f
  5292  0A7A  3000               	movlw	0
  5293  0A7B  00A3               	movwf	__div_to_l_@quot+3
  5294  0A7C  3000               	movlw	0
  5295  0A7D  00A2               	movwf	__div_to_l_@quot+2
  5296  0A7E  3000               	movlw	0
  5297  0A7F  00A1               	movwf	__div_to_l_@quot+1
  5298  0A80  3000               	movlw	0
  5299  0A81  00A0               	movwf	__div_to_l_@quot
  5300  0A82  307F               	movlw	127
  5301  0A83  02A5               	subwf	__div_to_l_@exp1,f
  5302  0A84  30A0               	movlw	160
  5303  0A85  0724               	addwf	__div_to_l_@cntr,w
  5304  0A86  00F6               	movwf	??__div_to_l_
  5305  0A87  0876               	movf	??__div_to_l_,w
  5306  0A88  02A5               	subwf	__div_to_l_@exp1,f
  5307  0A89  3020               	movlw	32
  5308  0A8A  00F6               	movwf	??__div_to_l_
  5309  0A8B  0876               	movf	??__div_to_l_,w
  5310  0A8C  00A4               	movwf	__div_to_l_@cntr
  5311  0A8D                     l2949:	
  5312  0A8D  3001               	movlw	1
  5313  0A8E  00F6               	movwf	??__div_to_l_
  5314  0A8F                     u2945:	
  5315  0A8F  1003               	clrc
  5316  0A90  0DA0               	rlf	__div_to_l_@quot,f
  5317  0A91  0DA1               	rlf	__div_to_l_@quot+1,f
  5318  0A92  0DA2               	rlf	__div_to_l_@quot+2,f
  5319  0A93  0DA3               	rlf	__div_to_l_@quot+3,f
  5320  0A94  0BF6               	decfsz	??__div_to_l_,f
  5321  0A95  2A8F               	goto	u2945
  5322  0A96  3073               	movlw	low (__div_to_l_@f2| 0)
  5323  0A97  0084               	movwf	4
  5324  0A98  0800               	movf	0,w
  5325  0A99  00F6               	movwf	??__div_to_l_
  5326  0A9A  0A84               	incf	4,f
  5327  0A9B  0800               	movf	0,w
  5328  0A9C  00F7               	movwf	??__div_to_l_+1
  5329  0A9D  0A84               	incf	4,f
  5330  0A9E  0800               	movf	0,w
  5331  0A9F  00F8               	movwf	??__div_to_l_+2
  5332  0AA0  0A84               	incf	4,f
  5333  0AA1  0800               	movf	0,w
  5334  0AA2  00F9               	movwf	??__div_to_l_+3
  5335  0AA3  3070               	movlw	low (__div_to_l_@f1| 0)
  5336  0AA4  0084               	movwf	4
  5337  0AA5  0800               	movf	0,w
  5338  0AA6  00FA               	movwf	??__div_to_l_+4
  5339  0AA7  0A84               	incf	4,f
  5340  0AA8  0800               	movf	0,w
  5341  0AA9  00FB               	movwf	??__div_to_l_+5
  5342  0AAA  0A84               	incf	4,f
  5343  0AAB  0800               	movf	0,w
  5344  0AAC  00FC               	movwf	??__div_to_l_+6
  5345  0AAD  0A84               	incf	4,f
  5346  0AAE  0800               	movf	0,w
  5347  0AAF  00FD               	movwf	??__div_to_l_+7
  5348  0AB0  0879               	movf	??__div_to_l_+3,w
  5349  0AB1  027D               	subwf	??__div_to_l_+7,w
  5350  0AB2  1D03               	skipz
  5351  0AB3  2ABE               	goto	u2955
  5352  0AB4  0878               	movf	??__div_to_l_+2,w
  5353  0AB5  027C               	subwf	??__div_to_l_+6,w
  5354  0AB6  1D03               	skipz
  5355  0AB7  2ABE               	goto	u2955
  5356  0AB8  0877               	movf	??__div_to_l_+1,w
  5357  0AB9  027B               	subwf	??__div_to_l_+5,w
  5358  0ABA  1D03               	skipz
  5359  0ABB  2ABE               	goto	u2955
  5360  0ABC  0876               	movf	??__div_to_l_,w
  5361  0ABD  027A               	subwf	??__div_to_l_+4,w
  5362  0ABE                     u2955:	
  5363  0ABE  1C03               	skipc
  5364  0ABF  2AE3               	goto	l1264
  5365  0AC0  3073               	movlw	low (__div_to_l_@f2| 0)
  5366  0AC1  0084               	movwf	4
  5367  0AC2  0800               	movf	0,w
  5368  0AC3  00F6               	movwf	??__div_to_l_
  5369  0AC4  0A84               	incf	4,f
  5370  0AC5  0800               	movf	0,w
  5371  0AC6  00F7               	movwf	??__div_to_l_+1
  5372  0AC7  0A84               	incf	4,f
  5373  0AC8  0800               	movf	0,w
  5374  0AC9  00F8               	movwf	??__div_to_l_+2
  5375  0ACA  0A84               	incf	4,f
  5376  0ACB  0800               	movf	0,w
  5377  0ACC  00F9               	movwf	??__div_to_l_+3
  5378  0ACD  3070               	movlw	low (__div_to_l_@f1| 0)
  5379  0ACE  0084               	movwf	4
  5380  0ACF  0876               	movf	??__div_to_l_,w
  5381  0AD0  0280               	subwf	0,f
  5382  0AD1  0A84               	incf	4,f
  5383  0AD2  0877               	movf	??__div_to_l_+1,w
  5384  0AD3  1C03               	skipc
  5385  0AD4  0F77               	incfsz	??__div_to_l_+1,w
  5386  0AD5  0280               	subwf	0,f
  5387  0AD6  0A84               	incf	4,f
  5388  0AD7  0878               	movf	??__div_to_l_+2,w
  5389  0AD8  1C03               	skipc
  5390  0AD9  0F78               	incfsz	??__div_to_l_+2,w
  5391  0ADA  0280               	subwf	0,f
  5392  0ADB  0A84               	incf	4,f
  5393  0ADC  0879               	movf	??__div_to_l_+3,w
  5394  0ADD  1C03               	skipc
  5395  0ADE  0A79               	incf	??__div_to_l_+3,w
  5396  0ADF  0280               	subwf	0,f
  5397  0AE0  3003               	movlw	3
  5398  0AE1  0284               	subwf	4,f
  5399  0AE2  1420               	bsf	__div_to_l_@quot,0
  5400  0AE3                     l1264:	
  5401  0AE3  3070               	movlw	low (__div_to_l_@f1| 0)
  5402  0AE4  0084               	movwf	4
  5403  0AE5  1003               	clrc
  5404  0AE6  0D80               	rlf	0,f
  5405  0AE7  0A84               	incf	4,f
  5406  0AE8  0D80               	rlf	0,f
  5407  0AE9  0A84               	incf	4,f
  5408  0AEA  0D80               	rlf	0,f
  5409  0AEB  0A84               	incf	4,f
  5410  0AEC  0D80               	rlf	0,f
  5411  0AED  0384               	decf	4,f
  5412  0AEE  0384               	decf	4,f
  5413  0AEF  0384               	decf	4,f
  5414  0AF0  3001               	movlw	1
  5415  0AF1  02A4               	subwf	__div_to_l_@cntr,f
  5416  0AF2  1D03               	btfss	3,2
  5417  0AF3  2A8D               	goto	l2949
  5418  0AF4  1FA5               	btfss	__div_to_l_@exp1,7
  5419  0AF5  2B14               	goto	l2967
  5420  0AF6  0825               	movf	__div_to_l_@exp1,w
  5421  0AF7  3A80               	xorlw	128
  5422  0AF8  3E9F               	addlw	159
  5423  0AF9  1803               	skipnc
  5424  0AFA  2B04               	goto	l2965
  5425  0AFB  3000               	movlw	0
  5426  0AFC  00F3               	movwf	?__div_to_l_+3
  5427  0AFD  3000               	movlw	0
  5428  0AFE  00F2               	movwf	?__div_to_l_+2
  5429  0AFF  3000               	movlw	0
  5430  0B00  00F1               	movwf	?__div_to_l_+1
  5431  0B01  3000               	movlw	0
  5432  0B02  00F0               	movwf	?__div_to_l_
  5433  0B03  0008               	return
  5434  0B04                     l2965:	
  5435  0B04  3001               	movlw	1
  5436  0B05                     u2995:	
  5437  0B05  1003               	clrc
  5438  0B06  0CA3               	rrf	__div_to_l_@quot+3,f
  5439  0B07  0CA2               	rrf	__div_to_l_@quot+2,f
  5440  0B08  0CA1               	rrf	__div_to_l_@quot+1,f
  5441  0B09  0CA0               	rrf	__div_to_l_@quot,f
  5442  0B0A  3EFF               	addlw	-1
  5443  0B0B  1D03               	skipz
  5444  0B0C  2B05               	goto	u2995
  5445  0B0D  3001               	movlw	1
  5446  0B0E  00F6               	movwf	??__div_to_l_
  5447  0B0F  0876               	movf	??__div_to_l_,w
  5448  0B10  07A5               	addwf	__div_to_l_@exp1,f
  5449  0B11  1903               	btfsc	3,2
  5450  0B12  2B2F               	goto	l2975
  5451  0B13  2B04               	goto	l2965
  5452  0B14                     l2967:	
  5453  0B14  3020               	movlw	32
  5454  0B15  0225               	subwf	__div_to_l_@exp1,w
  5455  0B16  1C03               	skipc
  5456  0B17  2B2C               	goto	l1272
  5457  0B18  3000               	movlw	0
  5458  0B19  00F3               	movwf	?__div_to_l_+3
  5459  0B1A  3000               	movlw	0
  5460  0B1B  00F2               	movwf	?__div_to_l_+2
  5461  0B1C  3000               	movlw	0
  5462  0B1D  00F1               	movwf	?__div_to_l_+1
  5463  0B1E  3000               	movlw	0
  5464  0B1F  00F0               	movwf	?__div_to_l_
  5465  0B20  0008               	return
  5466  0B21                     l2973:	
  5467  0B21  3001               	movlw	1
  5468  0B22  00F6               	movwf	??__div_to_l_
  5469  0B23                     u3025:	
  5470  0B23  1003               	clrc
  5471  0B24  0DA0               	rlf	__div_to_l_@quot,f
  5472  0B25  0DA1               	rlf	__div_to_l_@quot+1,f
  5473  0B26  0DA2               	rlf	__div_to_l_@quot+2,f
  5474  0B27  0DA3               	rlf	__div_to_l_@quot+3,f
  5475  0B28  0BF6               	decfsz	??__div_to_l_,f
  5476  0B29  2B23               	goto	u3025
  5477  0B2A  3001               	movlw	1
  5478  0B2B  02A5               	subwf	__div_to_l_@exp1,f
  5479  0B2C                     l1272:	
  5480  0B2C  0825               	movf	__div_to_l_@exp1,w
  5481  0B2D  1D03               	btfss	3,2
  5482  0B2E  2B21               	goto	l2973
  5483  0B2F                     l2975:	
  5484  0B2F  0823               	movf	__div_to_l_@quot+3,w
  5485  0B30  00F3               	movwf	?__div_to_l_+3
  5486  0B31  0822               	movf	__div_to_l_@quot+2,w
  5487  0B32  00F2               	movwf	?__div_to_l_+2
  5488  0B33  0821               	movf	__div_to_l_@quot+1,w
  5489  0B34  00F1               	movwf	?__div_to_l_+1
  5490  0B35  0820               	movf	__div_to_l_@quot,w
  5491  0B36  00F0               	movwf	?__div_to_l_
  5492  0B37  0008               	return
  5493  0B38                     __end_of__div_to_l_:	
  5494                           
  5495                           	psect	text11
  5496  0809                     __ptext11:	
  5497 ;; *************** function ___wmul *****************
  5498 ;; Defined at:
  5499 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  multiplier      2    0[COMMON] unsigned int 
  5502 ;;  multiplicand    2    2[COMMON] unsigned int 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  product         2    4[COMMON] unsigned int 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  2    0[COMMON] unsigned int 
  5507 ;; Registers used:
  5508 ;;		wreg, status,2, status,0
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5514 ;;      Params:         4       0       0       0       0
  5515 ;;      Locals:         2       0       0       0       0
  5516 ;;      Temps:          0       0       0       0       0
  5517 ;;      Totals:         6       0       0       0       0
  5518 ;;Total ram usage:        6 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_sprintf
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           
  5528                           ;psect for function ___wmul
  5529  0809                     ___wmul:	
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5533  0809  01F4               	clrf	___wmul@product
  5534  080A  01F5               	clrf	___wmul@product+1
  5535  080B                     l2981:	
  5536  080B  1C70               	btfss	___wmul@multiplier,0
  5537  080C  2813               	goto	l1106
  5538  080D  0872               	movf	___wmul@multiplicand,w
  5539  080E  07F4               	addwf	___wmul@product,f
  5540  080F  1803               	skipnc
  5541  0810  0AF5               	incf	___wmul@product+1,f
  5542  0811  0873               	movf	___wmul@multiplicand+1,w
  5543  0812  07F5               	addwf	___wmul@product+1,f
  5544  0813                     l1106:	
  5545  0813  3001               	movlw	1
  5546  0814                     u3055:	
  5547  0814  1003               	clrc
  5548  0815  0DF2               	rlf	___wmul@multiplicand,f
  5549  0816  0DF3               	rlf	___wmul@multiplicand+1,f
  5550  0817  3EFF               	addlw	-1
  5551  0818  1D03               	skipz
  5552  0819  2814               	goto	u3055
  5553  081A  3001               	movlw	1
  5554  081B                     u3065:	
  5555  081B  1003               	clrc
  5556  081C  0CF1               	rrf	___wmul@multiplier+1,f
  5557  081D  0CF0               	rrf	___wmul@multiplier,f
  5558  081E  3EFF               	addlw	-1
  5559  081F  1D03               	skipz
  5560  0820  281B               	goto	u3065
  5561  0821  0870               	movf	___wmul@multiplier,w
  5562  0822  0471               	iorwf	___wmul@multiplier+1,w
  5563  0823  1D03               	btfss	3,2
  5564  0824  280B               	goto	l2981
  5565  0825  0875               	movf	___wmul@product+1,w
  5566  0826  00F1               	movwf	?___wmul+1
  5567  0827  0874               	movf	___wmul@product,w
  5568  0828  00F0               	movwf	?___wmul
  5569  0829  0008               	return
  5570  082A                     __end_of___wmul:	
  5571                           
  5572                           	psect	text12
  5573  1358                     __ptext12:	
  5574 ;; *************** function ___lltoft *****************
  5575 ;; Defined at:
  5576 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  c               4    8[COMMON] unsigned long 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  exp             1   13[COMMON] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  3    8[COMMON] float 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0, pclath, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5590 ;;      Params:         4       0       0       0       0
  5591 ;;      Locals:         1       0       0       0       0
  5592 ;;      Temps:          1       0       0       0       0
  5593 ;;      Totals:         6       0       0       0       0
  5594 ;;Total ram usage:        6 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    1
  5597 ;; This function calls:
  5598 ;;		___ftpack
  5599 ;; This function is called by:
  5600 ;;		_sprintf
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           
  5605                           ;psect for function ___lltoft
  5606  1358                     ___lltoft:	
  5607                           
  5608                           ;incstack = 0
  5609                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5610  1358  308E               	movlw	142
  5611  1359  00FC               	movwf	??___lltoft
  5612  135A  087C               	movf	??___lltoft,w
  5613  135B  00FD               	movwf	___lltoft@exp
  5614  135C                     l3119:	
  5615  135C  30FF               	movlw	255
  5616  135D  057B               	andwf	___lltoft@c+3,w
  5617  135E  1903               	btfsc	3,2
  5618  135F  2B6E               	goto	l3121
  5619  1360  3001               	movlw	1
  5620  1361                     u3385:	
  5621  1361  1003               	clrc
  5622  1362  0CFB               	rrf	___lltoft@c+3,f
  5623  1363  0CFA               	rrf	___lltoft@c+2,f
  5624  1364  0CF9               	rrf	___lltoft@c+1,f
  5625  1365  0CF8               	rrf	___lltoft@c,f
  5626  1366  3EFF               	addlw	-1
  5627  1367  1D03               	skipz
  5628  1368  2B61               	goto	u3385
  5629  1369  3001               	movlw	1
  5630  136A  00FC               	movwf	??___lltoft
  5631  136B  087C               	movf	??___lltoft,w
  5632  136C  07FD               	addwf	___lltoft@exp,f
  5633  136D  2B5C               	goto	l3119
  5634  136E                     l3121:	
  5635  136E  0878               	movf	___lltoft@c,w
  5636  136F  00F0               	movwf	___ftpack@arg
  5637  1370  0879               	movf	___lltoft@c+1,w
  5638  1371  00F1               	movwf	___ftpack@arg+1
  5639  1372  087A               	movf	___lltoft@c+2,w
  5640  1373  00F2               	movwf	___ftpack@arg+2
  5641  1374  087D               	movf	___lltoft@exp,w
  5642  1375  00FC               	movwf	??___lltoft
  5643  1376  087C               	movf	??___lltoft,w
  5644  1377  00F3               	movwf	___ftpack@exp
  5645  1378  01F4               	clrf	___ftpack@sign
  5646  1379  160A  118A  258B   	fcall	___ftpack
  5647  137C  0870               	movf	?___ftpack,w
  5648  137D  00F8               	movwf	?___lltoft
  5649  137E  0871               	movf	?___ftpack+1,w
  5650  137F  00F9               	movwf	?___lltoft+1
  5651  1380  0872               	movf	?___ftpack+2,w
  5652  1381  00FA               	movwf	?___lltoft+2
  5653  1382  0008               	return
  5654  1383                     __end_of___lltoft:	
  5655                           
  5656                           	psect	text13
  5657  13CE                     __ptext13:	
  5658 ;; *************** function ___llmod *****************
  5659 ;; Defined at:
  5660 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  divisor         4    0[COMMON] unsigned long 
  5663 ;;  dividend        4    4[COMMON] unsigned long 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  counter         1    9[COMMON] unsigned char 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  4    0[COMMON] unsigned long 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2, status,0
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5675 ;;      Params:         8       0       0       0       0
  5676 ;;      Locals:         1       0       0       0       0
  5677 ;;      Temps:          1       0       0       0       0
  5678 ;;      Totals:        10       0       0       0       0
  5679 ;;Total ram usage:       10 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_sprintf
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           
  5689                           ;psect for function ___llmod
  5690  13CE                     ___llmod:	
  5691                           
  5692                           ;incstack = 0
  5693                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5694  13CE  0873               	movf	___llmod@divisor+3,w
  5695  13CF  0472               	iorwf	___llmod@divisor+2,w
  5696  13D0  0471               	iorwf	___llmod@divisor+1,w
  5697  13D1  0470               	iorwf	___llmod@divisor,w
  5698  13D2  1903               	skipnz
  5699  13D3  2C11               	goto	l3111
  5700  13D4  01F9               	clrf	___llmod@counter
  5701  13D5  0AF9               	incf	___llmod@counter,f
  5702  13D6                     l3101:	
  5703  13D6  1BF3               	btfsc	___llmod@divisor+3,7
  5704  13D7  2BE6               	goto	l3103
  5705  13D8  3001               	movlw	1
  5706  13D9  00F8               	movwf	??___llmod
  5707  13DA                     u3335:	
  5708  13DA  1003               	clrc
  5709  13DB  0DF0               	rlf	___llmod@divisor,f
  5710  13DC  0DF1               	rlf	___llmod@divisor+1,f
  5711  13DD  0DF2               	rlf	___llmod@divisor+2,f
  5712  13DE  0DF3               	rlf	___llmod@divisor+3,f
  5713  13DF  0BF8               	decfsz	??___llmod,f
  5714  13E0  2BDA               	goto	u3335
  5715  13E1  3001               	movlw	1
  5716  13E2  00F8               	movwf	??___llmod
  5717  13E3  0878               	movf	??___llmod,w
  5718  13E4  07F9               	addwf	___llmod@counter,f
  5719  13E5  2BD6               	goto	l3101
  5720  13E6                     l3103:	
  5721  13E6  0873               	movf	___llmod@divisor+3,w
  5722  13E7  0277               	subwf	___llmod@dividend+3,w
  5723  13E8  1D03               	skipz
  5724  13E9  2BF4               	goto	u3355
  5725  13EA  0872               	movf	___llmod@divisor+2,w
  5726  13EB  0276               	subwf	___llmod@dividend+2,w
  5727  13EC  1D03               	skipz
  5728  13ED  2BF4               	goto	u3355
  5729  13EE  0871               	movf	___llmod@divisor+1,w
  5730  13EF  0275               	subwf	___llmod@dividend+1,w
  5731  13F0  1D03               	skipz
  5732  13F1  2BF4               	goto	u3355
  5733  13F2  0870               	movf	___llmod@divisor,w
  5734  13F3  0274               	subwf	___llmod@dividend,w
  5735  13F4                     u3355:	
  5736  13F4  1C03               	skipc
  5737  13F5  2C04               	goto	l3107
  5738  13F6  0870               	movf	___llmod@divisor,w
  5739  13F7  02F4               	subwf	___llmod@dividend,f
  5740  13F8  0871               	movf	___llmod@divisor+1,w
  5741  13F9  1C03               	skipc
  5742  13FA  0F71               	incfsz	___llmod@divisor+1,w
  5743  13FB  02F5               	subwf	___llmod@dividend+1,f
  5744  13FC  0872               	movf	___llmod@divisor+2,w
  5745  13FD  1C03               	skipc
  5746  13FE  0F72               	incfsz	___llmod@divisor+2,w
  5747  13FF  02F6               	subwf	___llmod@dividend+2,f
  5748  1400  0873               	movf	___llmod@divisor+3,w
  5749  1401  1C03               	skipc
  5750  1402  0F73               	incfsz	___llmod@divisor+3,w
  5751  1403  02F7               	subwf	___llmod@dividend+3,f
  5752  1404                     l3107:	
  5753  1404  3001               	movlw	1
  5754  1405                     u3365:	
  5755  1405  1003               	clrc
  5756  1406  0CF3               	rrf	___llmod@divisor+3,f
  5757  1407  0CF2               	rrf	___llmod@divisor+2,f
  5758  1408  0CF1               	rrf	___llmod@divisor+1,f
  5759  1409  0CF0               	rrf	___llmod@divisor,f
  5760  140A  3EFF               	addlw	-1
  5761  140B  1D03               	skipz
  5762  140C  2C05               	goto	u3365
  5763  140D  3001               	movlw	1
  5764  140E  02F9               	subwf	___llmod@counter,f
  5765  140F  1D03               	btfss	3,2
  5766  1410  2BE6               	goto	l3103
  5767  1411                     l3111:	
  5768  1411  0877               	movf	___llmod@dividend+3,w
  5769  1412  00F3               	movwf	?___llmod+3
  5770  1413  0876               	movf	___llmod@dividend+2,w
  5771  1414  00F2               	movwf	?___llmod+2
  5772  1415  0875               	movf	___llmod@dividend+1,w
  5773  1416  00F1               	movwf	?___llmod+1
  5774  1417  0874               	movf	___llmod@dividend,w
  5775  1418  00F0               	movwf	?___llmod
  5776  1419  0008               	return
  5777  141A                     __end_of___llmod:	
  5778                           
  5779                           	psect	text14
  5780  152D                     __ptext14:	
  5781 ;; *************** function ___lldiv *****************
  5782 ;; Defined at:
  5783 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  divisor         4    0[COMMON] unsigned long 
  5786 ;;  dividend        4    4[COMMON] unsigned long 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  quotient        4    9[COMMON] unsigned long 
  5789 ;;  counter         1   13[COMMON] unsigned char 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  4    0[COMMON] unsigned long 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5799 ;;      Params:         8       0       0       0       0
  5800 ;;      Locals:         5       0       0       0       0
  5801 ;;      Temps:          1       0       0       0       0
  5802 ;;      Totals:        14       0       0       0       0
  5803 ;;Total ram usage:       14 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_sprintf
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function ___lldiv
  5814  152D                     ___lldiv:	
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5818  152D  3000               	movlw	0
  5819  152E  00FC               	movwf	___lldiv@quotient+3
  5820  152F  3000               	movlw	0
  5821  1530  00FB               	movwf	___lldiv@quotient+2
  5822  1531  3000               	movlw	0
  5823  1532  00FA               	movwf	___lldiv@quotient+1
  5824  1533  3000               	movlw	0
  5825  1534  00F9               	movwf	___lldiv@quotient
  5826  1535  0873               	movf	___lldiv@divisor+3,w
  5827  1536  0472               	iorwf	___lldiv@divisor+2,w
  5828  1537  0471               	iorwf	___lldiv@divisor+1,w
  5829  1538  0470               	iorwf	___lldiv@divisor,w
  5830  1539  1903               	skipnz
  5831  153A  2D82               	goto	l3091
  5832  153B  01FD               	clrf	___lldiv@counter
  5833  153C  0AFD               	incf	___lldiv@counter,f
  5834  153D                     l3077:	
  5835  153D  1BF3               	btfsc	___lldiv@divisor+3,7
  5836  153E  2D4D               	goto	l3079
  5837  153F  3001               	movlw	1
  5838  1540  00F8               	movwf	??___lldiv
  5839  1541                     u3265:	
  5840  1541  1003               	clrc
  5841  1542  0DF0               	rlf	___lldiv@divisor,f
  5842  1543  0DF1               	rlf	___lldiv@divisor+1,f
  5843  1544  0DF2               	rlf	___lldiv@divisor+2,f
  5844  1545  0DF3               	rlf	___lldiv@divisor+3,f
  5845  1546  0BF8               	decfsz	??___lldiv,f
  5846  1547  2D41               	goto	u3265
  5847  1548  3001               	movlw	1
  5848  1549  00F8               	movwf	??___lldiv
  5849  154A  0878               	movf	??___lldiv,w
  5850  154B  07FD               	addwf	___lldiv@counter,f
  5851  154C  2D3D               	goto	l3077
  5852  154D                     l3079:	
  5853  154D  3001               	movlw	1
  5854  154E  00F8               	movwf	??___lldiv
  5855  154F                     u3285:	
  5856  154F  1003               	clrc
  5857  1550  0DF9               	rlf	___lldiv@quotient,f
  5858  1551  0DFA               	rlf	___lldiv@quotient+1,f
  5859  1552  0DFB               	rlf	___lldiv@quotient+2,f
  5860  1553  0DFC               	rlf	___lldiv@quotient+3,f
  5861  1554  0BF8               	decfsz	??___lldiv,f
  5862  1555  2D4F               	goto	u3285
  5863  1556  0873               	movf	___lldiv@divisor+3,w
  5864  1557  0277               	subwf	___lldiv@dividend+3,w
  5865  1558  1D03               	skipz
  5866  1559  2D64               	goto	u3295
  5867  155A  0872               	movf	___lldiv@divisor+2,w
  5868  155B  0276               	subwf	___lldiv@dividend+2,w
  5869  155C  1D03               	skipz
  5870  155D  2D64               	goto	u3295
  5871  155E  0871               	movf	___lldiv@divisor+1,w
  5872  155F  0275               	subwf	___lldiv@dividend+1,w
  5873  1560  1D03               	skipz
  5874  1561  2D64               	goto	u3295
  5875  1562  0870               	movf	___lldiv@divisor,w
  5876  1563  0274               	subwf	___lldiv@dividend,w
  5877  1564                     u3295:	
  5878  1564  1C03               	skipc
  5879  1565  2D75               	goto	l3087
  5880  1566  0870               	movf	___lldiv@divisor,w
  5881  1567  02F4               	subwf	___lldiv@dividend,f
  5882  1568  0871               	movf	___lldiv@divisor+1,w
  5883  1569  1C03               	skipc
  5884  156A  0F71               	incfsz	___lldiv@divisor+1,w
  5885  156B  02F5               	subwf	___lldiv@dividend+1,f
  5886  156C  0872               	movf	___lldiv@divisor+2,w
  5887  156D  1C03               	skipc
  5888  156E  0F72               	incfsz	___lldiv@divisor+2,w
  5889  156F  02F6               	subwf	___lldiv@dividend+2,f
  5890  1570  0873               	movf	___lldiv@divisor+3,w
  5891  1571  1C03               	skipc
  5892  1572  0F73               	incfsz	___lldiv@divisor+3,w
  5893  1573  02F7               	subwf	___lldiv@dividend+3,f
  5894  1574  1479               	bsf	___lldiv@quotient,0
  5895  1575                     l3087:	
  5896  1575  3001               	movlw	1
  5897  1576                     u3305:	
  5898  1576  1003               	clrc
  5899  1577  0CF3               	rrf	___lldiv@divisor+3,f
  5900  1578  0CF2               	rrf	___lldiv@divisor+2,f
  5901  1579  0CF1               	rrf	___lldiv@divisor+1,f
  5902  157A  0CF0               	rrf	___lldiv@divisor,f
  5903  157B  3EFF               	addlw	-1
  5904  157C  1D03               	skipz
  5905  157D  2D76               	goto	u3305
  5906  157E  3001               	movlw	1
  5907  157F  02FD               	subwf	___lldiv@counter,f
  5908  1580  1D03               	btfss	3,2
  5909  1581  2D4D               	goto	l3079
  5910  1582                     l3091:	
  5911  1582  087C               	movf	___lldiv@quotient+3,w
  5912  1583  00F3               	movwf	?___lldiv+3
  5913  1584  087B               	movf	___lldiv@quotient+2,w
  5914  1585  00F2               	movwf	?___lldiv+2
  5915  1586  087A               	movf	___lldiv@quotient+1,w
  5916  1587  00F1               	movwf	?___lldiv+1
  5917  1588  0879               	movf	___lldiv@quotient,w
  5918  1589  00F0               	movwf	?___lldiv
  5919  158A  0008               	return
  5920  158B                     __end_of___lldiv:	
  5921                           
  5922                           	psect	text15
  5923  15F7                     __ptext15:	
  5924 ;; *************** function ___fttol *****************
  5925 ;; Defined at:
  5926 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  f1              3   32[BANK0 ] float 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  lval            4   41[BANK0 ] unsigned long 
  5931 ;;  exp1            1   45[BANK0 ] unsigned char 
  5932 ;;  sign1           1   40[BANK0 ] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  4   32[BANK0 ] long 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5942 ;;      Params:         0       4       0       0       0
  5943 ;;      Locals:         0       6       0       0       0
  5944 ;;      Temps:          0       4       0       0       0
  5945 ;;      Totals:         0      14       0       0       0
  5946 ;;Total ram usage:       14 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_sprintf
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           
  5956                           ;psect for function ___fttol
  5957  15F7                     ___fttol:	
  5958                           
  5959                           ;incstack = 0
  5960                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5961  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  5962  15F8  1303               	bcf	3,6	;RP1=0, select bank0
  5963  15F9  0840               	movf	___fttol@f1,w
  5964  15FA  00C4               	movwf	??___fttol
  5965  15FB  0841               	movf	___fttol@f1+1,w
  5966  15FC  00C5               	movwf	??___fttol+1
  5967  15FD  0842               	movf	___fttol@f1+2,w
  5968  15FE  00C6               	movwf	??___fttol+2
  5969  15FF  1003               	clrc
  5970  1600  0D45               	rlf	??___fttol+1,w
  5971  1601  0D46               	rlf	??___fttol+2,w
  5972  1602  00C7               	movwf	??___fttol+3
  5973  1603  0847               	movf	??___fttol+3,w
  5974  1604  00CD               	movwf	___fttol@exp1
  5975  1605  084D               	movf	___fttol@exp1,w
  5976  1606  1D03               	btfss	3,2
  5977  1607  2E11               	goto	l3035
  5978  1608  3000               	movlw	0
  5979  1609  00C3               	movwf	?___fttol+3
  5980  160A  3000               	movlw	0
  5981  160B  00C2               	movwf	?___fttol+2
  5982  160C  3000               	movlw	0
  5983  160D  00C1               	movwf	?___fttol+1
  5984  160E  3000               	movlw	0
  5985  160F  00C0               	movwf	?___fttol
  5986  1610  0008               	return
  5987  1611                     l3035:	
  5988  1611  0840               	movf	___fttol@f1,w
  5989  1612  00C4               	movwf	??___fttol
  5990  1613  0841               	movf	___fttol@f1+1,w
  5991  1614  00C5               	movwf	??___fttol+1
  5992  1615  0842               	movf	___fttol@f1+2,w
  5993  1616  00C6               	movwf	??___fttol+2
  5994  1617  3017               	movlw	23
  5995  1618                     u3165:	
  5996  1618  1003               	clrc
  5997  1619  0CC6               	rrf	??___fttol+2,f
  5998  161A  0CC5               	rrf	??___fttol+1,f
  5999  161B  0CC4               	rrf	??___fttol,f
  6000  161C  3EFF               	addlw	-1
  6001  161D  1D03               	skipz
  6002  161E  2E18               	goto	u3165
  6003  161F  0844               	movf	??___fttol,w
  6004  1620  00C7               	movwf	??___fttol+3
  6005  1621  0847               	movf	??___fttol+3,w
  6006  1622  00C8               	movwf	___fttol@sign1
  6007  1623  17C1               	bsf	___fttol@f1+1,7
  6008  1624  30FF               	movlw	255
  6009  1625  05C0               	andwf	___fttol@f1,f
  6010  1626  30FF               	movlw	255
  6011  1627  05C1               	andwf	___fttol@f1+1,f
  6012  1628  3000               	movlw	0
  6013  1629  05C2               	andwf	___fttol@f1+2,f
  6014  162A  0840               	movf	___fttol@f1,w
  6015  162B  00C9               	movwf	___fttol@lval
  6016  162C  0841               	movf	___fttol@f1+1,w
  6017  162D  00CA               	movwf	___fttol@lval+1
  6018  162E  0842               	movf	___fttol@f1+2,w
  6019  162F  00CB               	movwf	___fttol@lval+2
  6020  1630  01CC               	clrf	___fttol@lval+3
  6021  1631  308E               	movlw	142
  6022  1632  02CD               	subwf	___fttol@exp1,f
  6023  1633  1FCD               	btfss	___fttol@exp1,7
  6024  1634  2E53               	goto	l3055
  6025  1635  084D               	movf	___fttol@exp1,w
  6026  1636  3A80               	xorlw	128
  6027  1637  3E8F               	addlw	143
  6028  1638  1803               	skipnc
  6029  1639  2E43               	goto	l3053
  6030  163A  3000               	movlw	0
  6031  163B  00C3               	movwf	?___fttol+3
  6032  163C  3000               	movlw	0
  6033  163D  00C2               	movwf	?___fttol+2
  6034  163E  3000               	movlw	0
  6035  163F  00C1               	movwf	?___fttol+1
  6036  1640  3000               	movlw	0
  6037  1641  00C0               	movwf	?___fttol
  6038  1642  0008               	return
  6039  1643                     l3053:	
  6040  1643  3001               	movlw	1
  6041  1644                     u3195:	
  6042  1644  1003               	clrc
  6043  1645  0CCC               	rrf	___fttol@lval+3,f
  6044  1646  0CCB               	rrf	___fttol@lval+2,f
  6045  1647  0CCA               	rrf	___fttol@lval+1,f
  6046  1648  0CC9               	rrf	___fttol@lval,f
  6047  1649  3EFF               	addlw	-1
  6048  164A  1D03               	skipz
  6049  164B  2E44               	goto	u3195
  6050  164C  3001               	movlw	1
  6051  164D  00C4               	movwf	??___fttol
  6052  164E  0844               	movf	??___fttol,w
  6053  164F  07CD               	addwf	___fttol@exp1,f
  6054  1650  1903               	btfsc	3,2
  6055  1651  2E6E               	goto	l3063
  6056  1652  2E43               	goto	l3053
  6057  1653                     l3055:	
  6058  1653  3018               	movlw	24
  6059  1654  024D               	subwf	___fttol@exp1,w
  6060  1655  1C03               	skipc
  6061  1656  2E6B               	goto	l1392
  6062  1657  3000               	movlw	0
  6063  1658  00C3               	movwf	?___fttol+3
  6064  1659  3000               	movlw	0
  6065  165A  00C2               	movwf	?___fttol+2
  6066  165B  3000               	movlw	0
  6067  165C  00C1               	movwf	?___fttol+1
  6068  165D  3000               	movlw	0
  6069  165E  00C0               	movwf	?___fttol
  6070  165F  0008               	return
  6071  1660                     l3061:	
  6072  1660  3001               	movlw	1
  6073  1661  00C4               	movwf	??___fttol
  6074  1662                     u3225:	
  6075  1662  1003               	clrc
  6076  1663  0DC9               	rlf	___fttol@lval,f
  6077  1664  0DCA               	rlf	___fttol@lval+1,f
  6078  1665  0DCB               	rlf	___fttol@lval+2,f
  6079  1666  0DCC               	rlf	___fttol@lval+3,f
  6080  1667  0BC4               	decfsz	??___fttol,f
  6081  1668  2E62               	goto	u3225
  6082  1669  3001               	movlw	1
  6083  166A  02CD               	subwf	___fttol@exp1,f
  6084  166B                     l1392:	
  6085  166B  084D               	movf	___fttol@exp1,w
  6086  166C  1D03               	btfss	3,2
  6087  166D  2E60               	goto	l3061
  6088  166E                     l3063:	
  6089  166E  0848               	movf	___fttol@sign1,w
  6090  166F  1903               	btfsc	3,2
  6091  1670  2E7C               	goto	l3067
  6092  1671  09C9               	comf	___fttol@lval,f
  6093  1672  09CA               	comf	___fttol@lval+1,f
  6094  1673  09CB               	comf	___fttol@lval+2,f
  6095  1674  09CC               	comf	___fttol@lval+3,f
  6096  1675  0AC9               	incf	___fttol@lval,f
  6097  1676  1903               	skipnz
  6098  1677  0ACA               	incf	___fttol@lval+1,f
  6099  1678  1903               	skipnz
  6100  1679  0ACB               	incf	___fttol@lval+2,f
  6101  167A  1903               	skipnz
  6102  167B  0ACC               	incf	___fttol@lval+3,f
  6103  167C                     l3067:	
  6104  167C  084C               	movf	___fttol@lval+3,w
  6105  167D  00C3               	movwf	?___fttol+3
  6106  167E  084B               	movf	___fttol@lval+2,w
  6107  167F  00C2               	movwf	?___fttol+2
  6108  1680  084A               	movf	___fttol@lval+1,w
  6109  1681  00C1               	movwf	?___fttol+1
  6110  1682  0849               	movf	___fttol@lval,w
  6111  1683  00C0               	movwf	?___fttol
  6112  1684  0008               	return
  6113  1685                     __end_of___fttol:	
  6114                           
  6115                           	psect	text16
  6116  1337                     __ptext16:	
  6117 ;; *************** function ___ftsub *****************
  6118 ;; Defined at:
  6119 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftsub.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  f2              3   52[BANK0 ] float 
  6122 ;;  f1              3   55[BANK0 ] float 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;		None
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  3   52[BANK0 ] float 
  6127 ;; Registers used:
  6128 ;;		wreg, status,2, status,0, pclath, cstack
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6134 ;;      Params:         0       6       0       0       0
  6135 ;;      Locals:         0       0       0       0       0
  6136 ;;      Temps:          0       0       0       0       0
  6137 ;;      Totals:         0       6       0       0       0
  6138 ;;Total ram usage:        6 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    2
  6141 ;; This function calls:
  6142 ;;		___ftadd
  6143 ;; This function is called by:
  6144 ;;		_sprintf
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           
  6149                           ;psect for function ___ftsub
  6150  1337                     ___ftsub:	
  6151                           
  6152                           ;incstack = 0
  6153                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6154  1337  1283               	bcf	3,5	;RP0=0, select bank0
  6155  1338  1303               	bcf	3,6	;RP1=0, select bank0
  6156  1339  0856               	movf	___ftsub@f2+2,w
  6157  133A  0455               	iorwf	___ftsub@f2+1,w
  6158  133B  0454               	iorwf	___ftsub@f2,w
  6159  133C  1903               	skipnz
  6160  133D  2B40               	goto	l3025
  6161  133E  3080               	movlw	128
  6162  133F  06D6               	xorwf	___ftsub@f2+2,f
  6163  1340                     l3025:	
  6164  1340  0857               	movf	___ftsub@f1,w
  6165  1341  00C7               	movwf	___ftadd@f1
  6166  1342  0858               	movf	___ftsub@f1+1,w
  6167  1343  00C8               	movwf	___ftadd@f1+1
  6168  1344  0859               	movf	___ftsub@f1+2,w
  6169  1345  00C9               	movwf	___ftadd@f1+2
  6170  1346  0854               	movf	___ftsub@f2,w
  6171  1347  00CA               	movwf	___ftadd@f2
  6172  1348  0855               	movf	___ftsub@f2+1,w
  6173  1349  00CB               	movwf	___ftadd@f2+1
  6174  134A  0856               	movf	___ftsub@f2+2,w
  6175  134B  00CC               	movwf	___ftadd@f2+2
  6176  134C  120A  158A  20FD   	fcall	___ftadd
  6177  134F  1283               	bcf	3,5	;RP0=0, select bank0
  6178  1350  1303               	bcf	3,6	;RP1=0, select bank0
  6179  1351  0847               	movf	?___ftadd,w
  6180  1352  00D4               	movwf	?___ftsub
  6181  1353  0848               	movf	?___ftadd+1,w
  6182  1354  00D5               	movwf	?___ftsub+1
  6183  1355  0849               	movf	?___ftadd+2,w
  6184  1356  00D6               	movwf	?___ftsub+2
  6185  1357  0008               	return
  6186  1358                     __end_of___ftsub:	
  6187                           
  6188                           	psect	text17
  6189  08FD                     __ptext17:	
  6190 ;; *************** function ___ftadd *****************
  6191 ;; Defined at:
  6192 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;  f1              3   39[BANK0 ] float 
  6195 ;;  f2              3   42[BANK0 ] float 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;  exp1            1   51[BANK0 ] unsigned char 
  6198 ;;  exp2            1   50[BANK0 ] unsigned char 
  6199 ;;  sign            1   49[BANK0 ] unsigned char 
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  3   39[BANK0 ] float 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2, status,0, pclath, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6209 ;;      Params:         0       6       0       0       0
  6210 ;;      Locals:         0       3       0       0       0
  6211 ;;      Temps:          0       4       0       0       0
  6212 ;;      Totals:         0      13       0       0       0
  6213 ;;Total ram usage:       13 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    1
  6216 ;; This function calls:
  6217 ;;		___ftpack
  6218 ;; This function is called by:
  6219 ;;		_sprintf
  6220 ;;		___ftsub
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           
  6225                           ;psect for function ___ftadd
  6226  08FD                     ___ftadd:	
  6227                           
  6228                           ;incstack = 0
  6229                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6230  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  6231  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  6232  08FF  0847               	movf	___ftadd@f1,w
  6233  0900  00CD               	movwf	??___ftadd
  6234  0901  0848               	movf	___ftadd@f1+1,w
  6235  0902  00CE               	movwf	??___ftadd+1
  6236  0903  0849               	movf	___ftadd@f1+2,w
  6237  0904  00CF               	movwf	??___ftadd+2
  6238  0905  1003               	clrc
  6239  0906  0D4E               	rlf	??___ftadd+1,w
  6240  0907  0D4F               	rlf	??___ftadd+2,w
  6241  0908  00D0               	movwf	??___ftadd+3
  6242  0909  0850               	movf	??___ftadd+3,w
  6243  090A  00D3               	movwf	___ftadd@exp1
  6244  090B  084A               	movf	___ftadd@f2,w
  6245  090C  00CD               	movwf	??___ftadd
  6246  090D  084B               	movf	___ftadd@f2+1,w
  6247  090E  00CE               	movwf	??___ftadd+1
  6248  090F  084C               	movf	___ftadd@f2+2,w
  6249  0910  00CF               	movwf	??___ftadd+2
  6250  0911  1003               	clrc
  6251  0912  0D4E               	rlf	??___ftadd+1,w
  6252  0913  0D4F               	rlf	??___ftadd+2,w
  6253  0914  00D0               	movwf	??___ftadd+3
  6254  0915  0850               	movf	??___ftadd+3,w
  6255  0916  00D2               	movwf	___ftadd@exp2
  6256  0917  0853               	movf	___ftadd@exp1,w
  6257  0918  1903               	btfsc	3,2
  6258  0919  2926               	goto	l2683
  6259  091A  0852               	movf	___ftadd@exp2,w
  6260  091B  0253               	subwf	___ftadd@exp1,w
  6261  091C  1803               	skipnc
  6262  091D  292D               	goto	l2687
  6263  091E  0353               	decf	___ftadd@exp1,w
  6264  091F  3AFF               	xorlw	255
  6265  0920  0752               	addwf	___ftadd@exp2,w
  6266  0921  00CD               	movwf	??___ftadd
  6267  0922  3019               	movlw	25
  6268  0923  024D               	subwf	??___ftadd,w
  6269  0924  1C03               	skipc
  6270  0925  292D               	goto	l2687
  6271  0926                     l2683:	
  6272  0926  084A               	movf	___ftadd@f2,w
  6273  0927  00C7               	movwf	?___ftadd
  6274  0928  084B               	movf	___ftadd@f2+1,w
  6275  0929  00C8               	movwf	?___ftadd+1
  6276  092A  084C               	movf	___ftadd@f2+2,w
  6277  092B  00C9               	movwf	?___ftadd+2
  6278  092C  0008               	return
  6279  092D                     l2687:	
  6280  092D  0852               	movf	___ftadd@exp2,w
  6281  092E  1903               	btfsc	3,2
  6282  092F  0008               	return
  6283  0930  0853               	movf	___ftadd@exp1,w
  6284  0931  0252               	subwf	___ftadd@exp2,w
  6285  0932  1803               	skipnc
  6286  0933  293C               	goto	l2693
  6287  0934  0352               	decf	___ftadd@exp2,w
  6288  0935  3AFF               	xorlw	255
  6289  0936  0753               	addwf	___ftadd@exp1,w
  6290  0937  00CD               	movwf	??___ftadd
  6291  0938  3019               	movlw	25
  6292  0939  024D               	subwf	??___ftadd,w
  6293  093A  1803               	btfsc	3,0
  6294  093B  0008               	return
  6295  093C                     l2693:	
  6296  093C  3006               	movlw	6
  6297  093D  00CD               	movwf	??___ftadd
  6298  093E  084D               	movf	??___ftadd,w
  6299  093F  00D1               	movwf	___ftadd@sign
  6300  0940  1BC9               	btfsc	___ftadd@f1+2,7
  6301  0941  17D1               	bsf	___ftadd@sign,7
  6302  0942  1BCC               	btfsc	___ftadd@f2+2,7
  6303  0943  1751               	bsf	___ftadd@sign,6
  6304  0944  17C8               	bsf	___ftadd@f1+1,7
  6305  0945  30FF               	movlw	255
  6306  0946  05C7               	andwf	___ftadd@f1,f
  6307  0947  30FF               	movlw	255
  6308  0948  05C8               	andwf	___ftadd@f1+1,f
  6309  0949  3000               	movlw	0
  6310  094A  05C9               	andwf	___ftadd@f1+2,f
  6311  094B  17CB               	bsf	___ftadd@f2+1,7
  6312  094C  30FF               	movlw	255
  6313  094D  05CA               	andwf	___ftadd@f2,f
  6314  094E  30FF               	movlw	255
  6315  094F  05CB               	andwf	___ftadd@f2+1,f
  6316  0950  3000               	movlw	0
  6317  0951  05CC               	andwf	___ftadd@f2+2,f
  6318  0952  0852               	movf	___ftadd@exp2,w
  6319  0953  0253               	subwf	___ftadd@exp1,w
  6320  0954  1803               	skipnc
  6321  0955  297C               	goto	l2715
  6322  0956                     l2705:	
  6323  0956  3001               	movlw	1
  6324  0957                     u2415:	
  6325  0957  1003               	clrc
  6326  0958  0DCA               	rlf	___ftadd@f2,f
  6327  0959  0DCB               	rlf	___ftadd@f2+1,f
  6328  095A  0DCC               	rlf	___ftadd@f2+2,f
  6329  095B  3EFF               	addlw	-1
  6330  095C  1D03               	skipz
  6331  095D  2957               	goto	u2415
  6332  095E  3001               	movlw	1
  6333  095F  02D2               	subwf	___ftadd@exp2,f
  6334  0960  0852               	movf	___ftadd@exp2,w
  6335  0961  0653               	xorwf	___ftadd@exp1,w
  6336  0962  1903               	skipnz
  6337  0963  2977               	goto	l2713
  6338  0964  3001               	movlw	1
  6339  0965  02D1               	subwf	___ftadd@sign,f
  6340  0966  0851               	movf	___ftadd@sign,w
  6341  0967  3907               	andlw	7
  6342  0968  1903               	btfsc	3,2
  6343  0969  2977               	goto	l2713
  6344  096A  2956               	goto	l2705
  6345  096B                     l2711:	
  6346  096B  3001               	movlw	1
  6347  096C                     u2445:	
  6348  096C  1003               	clrc
  6349  096D  0CC9               	rrf	___ftadd@f1+2,f
  6350  096E  0CC8               	rrf	___ftadd@f1+1,f
  6351  096F  0CC7               	rrf	___ftadd@f1,f
  6352  0970  3EFF               	addlw	-1
  6353  0971  1D03               	skipz
  6354  0972  296C               	goto	u2445
  6355  0973  3001               	movlw	1
  6356  0974  00CD               	movwf	??___ftadd
  6357  0975  084D               	movf	??___ftadd,w
  6358  0976  07D3               	addwf	___ftadd@exp1,f
  6359  0977                     l2713:	
  6360  0977  0853               	movf	___ftadd@exp1,w
  6361  0978  0652               	xorwf	___ftadd@exp2,w
  6362  0979  1903               	btfsc	3,2
  6363  097A  29A5               	goto	l1315
  6364  097B  296B               	goto	l2711
  6365  097C                     l2715:	
  6366  097C  0853               	movf	___ftadd@exp1,w
  6367  097D  0252               	subwf	___ftadd@exp2,w
  6368  097E  1803               	skipnc
  6369  097F  29A5               	goto	l1315
  6370  0980                     l2717:	
  6371  0980  3001               	movlw	1
  6372  0981                     u2475:	
  6373  0981  1003               	clrc
  6374  0982  0DC7               	rlf	___ftadd@f1,f
  6375  0983  0DC8               	rlf	___ftadd@f1+1,f
  6376  0984  0DC9               	rlf	___ftadd@f1+2,f
  6377  0985  3EFF               	addlw	-1
  6378  0986  1D03               	skipz
  6379  0987  2981               	goto	u2475
  6380  0988  3001               	movlw	1
  6381  0989  02D3               	subwf	___ftadd@exp1,f
  6382  098A  0852               	movf	___ftadd@exp2,w
  6383  098B  0653               	xorwf	___ftadd@exp1,w
  6384  098C  1903               	skipnz
  6385  098D  29A1               	goto	l2725
  6386  098E  3001               	movlw	1
  6387  098F  02D1               	subwf	___ftadd@sign,f
  6388  0990  0851               	movf	___ftadd@sign,w
  6389  0991  3907               	andlw	7
  6390  0992  1903               	btfsc	3,2
  6391  0993  29A1               	goto	l2725
  6392  0994  2980               	goto	l2717
  6393  0995                     l2723:	
  6394  0995  3001               	movlw	1
  6395  0996                     u2505:	
  6396  0996  1003               	clrc
  6397  0997  0CCC               	rrf	___ftadd@f2+2,f
  6398  0998  0CCB               	rrf	___ftadd@f2+1,f
  6399  0999  0CCA               	rrf	___ftadd@f2,f
  6400  099A  3EFF               	addlw	-1
  6401  099B  1D03               	skipz
  6402  099C  2996               	goto	u2505
  6403  099D  3001               	movlw	1
  6404  099E  00CD               	movwf	??___ftadd
  6405  099F  084D               	movf	??___ftadd,w
  6406  09A0  07D2               	addwf	___ftadd@exp2,f
  6407  09A1                     l2725:	
  6408  09A1  0853               	movf	___ftadd@exp1,w
  6409  09A2  0652               	xorwf	___ftadd@exp2,w
  6410  09A3  1D03               	skipz
  6411  09A4  2995               	goto	l2723
  6412  09A5                     l1315:	
  6413  09A5  1FD1               	btfss	___ftadd@sign,7
  6414  09A6  29B7               	goto	l2729
  6415  09A7  30FF               	movlw	255
  6416  09A8  06C7               	xorwf	___ftadd@f1,f
  6417  09A9  30FF               	movlw	255
  6418  09AA  06C8               	xorwf	___ftadd@f1+1,f
  6419  09AB  30FF               	movlw	255
  6420  09AC  06C9               	xorwf	___ftadd@f1+2,f
  6421  09AD  3001               	movlw	1
  6422  09AE  07C7               	addwf	___ftadd@f1,f
  6423  09AF  3000               	movlw	0
  6424  09B0  1803               	skipnc
  6425  09B1  3001               	movlw	1
  6426  09B2  07C8               	addwf	___ftadd@f1+1,f
  6427  09B3  3000               	movlw	0
  6428  09B4  1803               	skipnc
  6429  09B5  3001               	movlw	1
  6430  09B6  07C9               	addwf	___ftadd@f1+2,f
  6431  09B7                     l2729:	
  6432  09B7  1F51               	btfss	___ftadd@sign,6
  6433  09B8  29C9               	goto	l2733
  6434  09B9  30FF               	movlw	255
  6435  09BA  06CA               	xorwf	___ftadd@f2,f
  6436  09BB  30FF               	movlw	255
  6437  09BC  06CB               	xorwf	___ftadd@f2+1,f
  6438  09BD  30FF               	movlw	255
  6439  09BE  06CC               	xorwf	___ftadd@f2+2,f
  6440  09BF  3001               	movlw	1
  6441  09C0  07CA               	addwf	___ftadd@f2,f
  6442  09C1  3000               	movlw	0
  6443  09C2  1803               	skipnc
  6444  09C3  3001               	movlw	1
  6445  09C4  07CB               	addwf	___ftadd@f2+1,f
  6446  09C5  3000               	movlw	0
  6447  09C6  1803               	skipnc
  6448  09C7  3001               	movlw	1
  6449  09C8  07CC               	addwf	___ftadd@f2+2,f
  6450  09C9                     l2733:	
  6451  09C9  01D1               	clrf	___ftadd@sign
  6452  09CA  0847               	movf	___ftadd@f1,w
  6453  09CB  07CA               	addwf	___ftadd@f2,f
  6454  09CC  0848               	movf	___ftadd@f1+1,w
  6455  09CD  1103               	clrz
  6456  09CE  1803               	skipnc
  6457  09CF  0A48               	incf	___ftadd@f1+1,w
  6458  09D0  1D03               	btfss	3,2
  6459  09D1  07CB               	addwf	___ftadd@f2+1,f
  6460  09D2  0849               	movf	___ftadd@f1+2,w
  6461  09D3  1103               	clrz
  6462  09D4  1803               	skipnc
  6463  09D5  0A49               	incf	___ftadd@f1+2,w
  6464  09D6  1D03               	btfss	3,2
  6465  09D7  07CC               	addwf	___ftadd@f2+2,f
  6466  09D8  1FCC               	btfss	___ftadd@f2+2,7
  6467  09D9  29EC               	goto	l2743
  6468  09DA  30FF               	movlw	255
  6469  09DB  06CA               	xorwf	___ftadd@f2,f
  6470  09DC  30FF               	movlw	255
  6471  09DD  06CB               	xorwf	___ftadd@f2+1,f
  6472  09DE  30FF               	movlw	255
  6473  09DF  06CC               	xorwf	___ftadd@f2+2,f
  6474  09E0  3001               	movlw	1
  6475  09E1  07CA               	addwf	___ftadd@f2,f
  6476  09E2  3000               	movlw	0
  6477  09E3  1803               	skipnc
  6478  09E4  3001               	movlw	1
  6479  09E5  07CB               	addwf	___ftadd@f2+1,f
  6480  09E6  3000               	movlw	0
  6481  09E7  1803               	skipnc
  6482  09E8  3001               	movlw	1
  6483  09E9  07CC               	addwf	___ftadd@f2+2,f
  6484  09EA  01D1               	clrf	___ftadd@sign
  6485  09EB  0AD1               	incf	___ftadd@sign,f
  6486  09EC                     l2743:	
  6487  09EC  084A               	movf	___ftadd@f2,w
  6488  09ED  00F0               	movwf	___ftpack@arg
  6489  09EE  084B               	movf	___ftadd@f2+1,w
  6490  09EF  00F1               	movwf	___ftpack@arg+1
  6491  09F0  084C               	movf	___ftadd@f2+2,w
  6492  09F1  00F2               	movwf	___ftpack@arg+2
  6493  09F2  0853               	movf	___ftadd@exp1,w
  6494  09F3  00CD               	movwf	??___ftadd
  6495  09F4  084D               	movf	??___ftadd,w
  6496  09F5  00F3               	movwf	___ftpack@exp
  6497  09F6  0851               	movf	___ftadd@sign,w
  6498  09F7  00CE               	movwf	??___ftadd+1
  6499  09F8  084E               	movf	??___ftadd+1,w
  6500  09F9  00F4               	movwf	___ftpack@sign
  6501  09FA  160A  118A  258B   	fcall	___ftpack
  6502  09FD  0870               	movf	?___ftpack,w
  6503  09FE  1283               	bcf	3,5	;RP0=0, select bank0
  6504  09FF  1303               	bcf	3,6	;RP1=0, select bank0
  6505  0A00  00C7               	movwf	?___ftadd
  6506  0A01  0871               	movf	?___ftpack+1,w
  6507  0A02  00C8               	movwf	?___ftadd+1
  6508  0A03  0872               	movf	?___ftpack+2,w
  6509  0A04  00C9               	movwf	?___ftadd+2
  6510  0A05  0008               	return
  6511  0A06                     __end_of___ftadd:	
  6512                           
  6513                           	psect	text18
  6514  128C                     __ptext18:	
  6515 ;; *************** function ___ftneg *****************
  6516 ;; Defined at:
  6517 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  f1              3    0[COMMON] float 
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  3    0[COMMON] float 
  6524 ;; Registers used:
  6525 ;;		wreg
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6531 ;;      Params:         3       0       0       0       0
  6532 ;;      Locals:         0       0       0       0       0
  6533 ;;      Temps:          0       0       0       0       0
  6534 ;;      Totals:         3       0       0       0       0
  6535 ;;Total ram usage:        3 bytes
  6536 ;; Hardware stack levels used:    1
  6537 ;; This function calls:
  6538 ;;		Nothing
  6539 ;; This function is called by:
  6540 ;;		_sprintf
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           
  6545                           ;psect for function ___ftneg
  6546  128C                     ___ftneg:	
  6547                           
  6548                           ;incstack = 0
  6549                           ; Regs used in ___ftneg: [wreg]
  6550  128C  0872               	movf	___ftneg@f1+2,w
  6551  128D  0471               	iorwf	___ftneg@f1+1,w
  6552  128E  0470               	iorwf	___ftneg@f1,w
  6553  128F  1903               	skipnz
  6554  1290  0008               	return
  6555  1291  3080               	movlw	128
  6556  1292  06F2               	xorwf	___ftneg@f1+2,f
  6557  1293  0008               	return
  6558  1294                     __end_of___ftneg:	
  6559                           
  6560                           	psect	text19
  6561  14D0                     __ptext19:	
  6562 ;; *************** function ___ftge *****************
  6563 ;; Defined at:
  6564 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  ff1             3    0[COMMON] float 
  6567 ;;  ff2             3    3[COMMON] float 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;		None               void
  6572 ;; Registers used:
  6573 ;;		wreg, status,2, status,0
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6579 ;;      Params:         6       0       0       0       0
  6580 ;;      Locals:         0       0       0       0       0
  6581 ;;      Temps:          6       0       0       0       0
  6582 ;;      Totals:        12       0       0       0       0
  6583 ;;Total ram usage:       12 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_sprintf
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           
  6593                           ;psect for function ___ftge
  6594  14D0                     ___ftge:	
  6595                           
  6596                           ;incstack = 0
  6597                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6598  14D0  1FF2               	btfss	___ftge@ff1+2,7
  6599  14D1  2CF7               	goto	l2997
  6600  14D2  3000               	movlw	0
  6601  14D3  00F6               	movwf	??___ftge
  6602  14D4  3000               	movlw	0
  6603  14D5  00F7               	movwf	??___ftge+1
  6604  14D6  3080               	movlw	128
  6605  14D7  00F8               	movwf	??___ftge+2
  6606  14D8  0970               	comf	___ftge@ff1,w
  6607  14D9  00F9               	movwf	??___ftge+3
  6608  14DA  0971               	comf	___ftge@ff1+1,w
  6609  14DB  00FA               	movwf	??___ftge+4
  6610  14DC  0972               	comf	___ftge@ff1+2,w
  6611  14DD  00FB               	movwf	??___ftge+5
  6612  14DE  0AF9               	incf	??___ftge+3,f
  6613  14DF  1903               	skipnz
  6614  14E0  0AFA               	incf	??___ftge+4,f
  6615  14E1  1903               	skipnz
  6616  14E2  0AFB               	incf	??___ftge+5,f
  6617  14E3  0879               	movf	??___ftge+3,w
  6618  14E4  07F6               	addwf	??___ftge,f
  6619  14E5  087A               	movf	??___ftge+4,w
  6620  14E6  1803               	skipnc
  6621  14E7  0F7A               	incfsz	??___ftge+4,w
  6622  14E8  2CEA               	goto	u3091
  6623  14E9  2CEB               	goto	u3092
  6624  14EA                     u3091:	
  6625  14EA  07F7               	addwf	??___ftge+1,f
  6626  14EB                     u3092:	
  6627  14EB  087B               	movf	??___ftge+5,w
  6628  14EC  1803               	skipnc
  6629  14ED  0F7B               	incfsz	??___ftge+5,w
  6630  14EE  2CF0               	goto	u3093
  6631  14EF  2CF1               	goto	u3094
  6632  14F0                     u3093:	
  6633  14F0  07F8               	addwf	??___ftge+2,f
  6634  14F1                     u3094:	
  6635  14F1  0876               	movf	??___ftge,w
  6636  14F2  00F0               	movwf	___ftge@ff1
  6637  14F3  0877               	movf	??___ftge+1,w
  6638  14F4  00F1               	movwf	___ftge@ff1+1
  6639  14F5  0878               	movf	??___ftge+2,w
  6640  14F6  00F2               	movwf	___ftge@ff1+2
  6641  14F7                     l2997:	
  6642  14F7  1FF5               	btfss	___ftge@ff2+2,7
  6643  14F8  2D1E               	goto	l3001
  6644  14F9  3000               	movlw	0
  6645  14FA  00F6               	movwf	??___ftge
  6646  14FB  3000               	movlw	0
  6647  14FC  00F7               	movwf	??___ftge+1
  6648  14FD  3080               	movlw	128
  6649  14FE  00F8               	movwf	??___ftge+2
  6650  14FF  0973               	comf	___ftge@ff2,w
  6651  1500  00F9               	movwf	??___ftge+3
  6652  1501  0974               	comf	___ftge@ff2+1,w
  6653  1502  00FA               	movwf	??___ftge+4
  6654  1503  0975               	comf	___ftge@ff2+2,w
  6655  1504  00FB               	movwf	??___ftge+5
  6656  1505  0AF9               	incf	??___ftge+3,f
  6657  1506  1903               	skipnz
  6658  1507  0AFA               	incf	??___ftge+4,f
  6659  1508  1903               	skipnz
  6660  1509  0AFB               	incf	??___ftge+5,f
  6661  150A  0879               	movf	??___ftge+3,w
  6662  150B  07F6               	addwf	??___ftge,f
  6663  150C  087A               	movf	??___ftge+4,w
  6664  150D  1803               	skipnc
  6665  150E  0F7A               	incfsz	??___ftge+4,w
  6666  150F  2D11               	goto	u3111
  6667  1510  2D12               	goto	u3112
  6668  1511                     u3111:	
  6669  1511  07F7               	addwf	??___ftge+1,f
  6670  1512                     u3112:	
  6671  1512  087B               	movf	??___ftge+5,w
  6672  1513  1803               	skipnc
  6673  1514  0F7B               	incfsz	??___ftge+5,w
  6674  1515  2D17               	goto	u3113
  6675  1516  2D18               	goto	u3114
  6676  1517                     u3113:	
  6677  1517  07F8               	addwf	??___ftge+2,f
  6678  1518                     u3114:	
  6679  1518  0876               	movf	??___ftge,w
  6680  1519  00F3               	movwf	___ftge@ff2
  6681  151A  0877               	movf	??___ftge+1,w
  6682  151B  00F4               	movwf	___ftge@ff2+1
  6683  151C  0878               	movf	??___ftge+2,w
  6684  151D  00F5               	movwf	___ftge@ff2+2
  6685  151E                     l3001:	
  6686  151E  3080               	movlw	128
  6687  151F  06F2               	xorwf	___ftge@ff1+2,f
  6688  1520  3080               	movlw	128
  6689  1521  06F5               	xorwf	___ftge@ff2+2,f
  6690  1522  0875               	movf	___ftge@ff2+2,w
  6691  1523  0272               	subwf	___ftge@ff1+2,w
  6692  1524  1D03               	skipz
  6693  1525  0008               	return
  6694  1526  0874               	movf	___ftge@ff2+1,w
  6695  1527  0271               	subwf	___ftge@ff1+1,w
  6696  1528  1D03               	skipz
  6697  1529  0008               	return
  6698  152A  0873               	movf	___ftge@ff2,w
  6699  152B  0270               	subwf	___ftge@ff1,w
  6700  152C  0008               	return
  6701  152D                     __end_of___ftge:	
  6702                           
  6703                           	psect	text20
  6704  12DF                     __ptext20:	
  6705 ;; *************** function _lcd_puts *****************
  6706 ;; Defined at:
  6707 ;;		line 58 in file "lcd.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  s               1    wreg     PTR const unsigned char 
  6710 ;;		 -> buffer(20), 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  s               1    7[COMMON] PTR const unsigned char 
  6713 ;;		 -> buffer(20), 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;		None               void
  6716 ;; Registers used:
  6717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6723 ;;      Params:         0       0       0       0       0
  6724 ;;      Locals:         1       0       0       0       0
  6725 ;;      Temps:          1       0       0       0       0
  6726 ;;      Totals:         2       0       0       0       0
  6727 ;;Total ram usage:        2 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; Hardware stack levels required when called:    3
  6730 ;; This function calls:
  6731 ;;		_lcd_write
  6732 ;; This function is called by:
  6733 ;;		_main
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           
  6738                           ;psect for function _lcd_puts
  6739  12DF                     _lcd_puts:	
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6743                           ;lcd_puts@s stored from wreg
  6744  12DF  00F7               	movwf	lcd_puts@s
  6745                           
  6746                           ;lcd.c: 60: RA2 = 1;
  6747  12E0  1283               	bcf	3,5	;RP0=0, select bank0
  6748  12E1  1303               	bcf	3,6	;RP1=0, select bank0
  6749  12E2  1505               	bsf	5,2	;volatile
  6750  12E3                     l3371:	
  6751                           ;lcd.c: 61: while(*s)
  6752                           
  6753  12E3  0877               	movf	lcd_puts@s,w
  6754  12E4  0084               	movwf	4
  6755  12E5  1383               	bcf	3,7	;select IRP bank0
  6756  12E6  0800               	movf	0,w
  6757  12E7  1903               	btfsc	3,2
  6758  12E8  0008               	return
  6759                           
  6760                           ;lcd.c: 62: lcd_write(*s++);
  6761  12E9  0877               	movf	lcd_puts@s,w
  6762  12EA  0084               	movwf	4
  6763  12EB  1383               	bcf	3,7	;select IRP bank0
  6764  12EC  0800               	movf	0,w
  6765  12ED  160A  118A  22F7  160A  118A  	fcall	_lcd_write
  6766  12F2  3001               	movlw	1
  6767  12F3  00F6               	movwf	??_lcd_puts
  6768  12F4  0876               	movf	??_lcd_puts,w
  6769  12F5  07F7               	addwf	lcd_puts@s,f
  6770  12F6  2AE3               	goto	l3371
  6771  12F7                     __end_of_lcd_puts:	
  6772                           
  6773                           	psect	text21
  6774  141A                     __ptext21:	
  6775 ;; *************** function _lcd_init *****************
  6776 ;; Defined at:
  6777 ;;		line 88 in file "lcd.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;		None
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;  init_value      1    7[COMMON] unsigned char 
  6782 ;; Return value:  Size  Location     Type
  6783 ;;		None               void
  6784 ;; Registers used:
  6785 ;;		wreg, status,2, status,0, pclath, cstack
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6791 ;;      Params:         0       0       0       0       0
  6792 ;;      Locals:         1       0       0       0       0
  6793 ;;      Temps:          1       0       0       0       0
  6794 ;;      Totals:         2       0       0       0       0
  6795 ;;Total ram usage:        2 bytes
  6796 ;; Hardware stack levels used:    1
  6797 ;; Hardware stack levels required when called:    4
  6798 ;; This function calls:
  6799 ;;		_lcd_clear
  6800 ;;		_lcd_write
  6801 ;;		_pause
  6802 ;; This function is called by:
  6803 ;;		_main
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           
  6808                           ;psect for function _lcd_init
  6809  141A                     _lcd_init:	
  6810                           
  6811                           ;lcd.c: 90: char init_value;
  6812                           ;lcd.c: 94: init_value = 0x3;
  6813                           
  6814                           ;incstack = 0
  6815                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  6816  141A  3003               	movlw	3
  6817  141B  00F6               	movwf	??_lcd_init
  6818  141C  0876               	movf	??_lcd_init,w
  6819  141D  00F7               	movwf	lcd_init@init_value
  6820                           
  6821                           ;lcd.c: 95: TRISA=0;
  6822  141E  1683               	bsf	3,5	;RP0=1, select bank1
  6823  141F  1303               	bcf	3,6	;RP1=0, select bank1
  6824  1420  0185               	clrf	5	;volatile
  6825                           
  6826                           ;lcd.c: 96: TRISC=0;
  6827  1421  0187               	clrf	7	;volatile
  6828                           
  6829                           ;lcd.c: 97: RA2 = 0;
  6830  1422  1283               	bcf	3,5	;RP0=0, select bank0
  6831  1423  1303               	bcf	3,6	;RP1=0, select bank0
  6832  1424  1105               	bcf	5,2	;volatile
  6833                           
  6834                           ;lcd.c: 98: RA1 = 0;
  6835  1425  1085               	bcf	5,1	;volatile
  6836                           
  6837                           ;lcd.c: 99: RA4 = 0;
  6838  1426  1205               	bcf	5,4	;volatile
  6839                           
  6840                           ;lcd.c: 101: pause (15);
  6841  1427  300F               	movlw	15
  6842  1428  00F0               	movwf	pause@usvalue
  6843  1429  3000               	movlw	0
  6844  142A  00F1               	movwf	pause@usvalue+1
  6845  142B  160A  118A  22C9  160A  118A  	fcall	_pause
  6846                           
  6847                           ;lcd.c: 102: PORTC = init_value;
  6848  1430  0877               	movf	lcd_init@init_value,w
  6849  1431  1283               	bcf	3,5	;RP0=0, select bank0
  6850  1432  1303               	bcf	3,6	;RP1=0, select bank0
  6851  1433  0087               	movwf	7	;volatile
  6852                           
  6853                           ;lcd.c: 103: ((RA1 = 1),(RA1=0));
  6854  1434  1485               	bsf	5,1	;volatile
  6855  1435  1085               	bcf	5,1	;volatile
  6856                           
  6857                           ;lcd.c: 104: pause(10);
  6858  1436  300A               	movlw	10
  6859  1437  00F0               	movwf	pause@usvalue
  6860  1438  3000               	movlw	0
  6861  1439  00F1               	movwf	pause@usvalue+1
  6862  143A  160A  118A  22C9  160A  118A  	fcall	_pause
  6863                           
  6864                           ;lcd.c: 105: ((RA1 = 1),(RA1=0));
  6865  143F  1283               	bcf	3,5	;RP0=0, select bank0
  6866  1440  1303               	bcf	3,6	;RP1=0, select bank0
  6867  1441  1485               	bsf	5,1	;volatile
  6868  1442  1085               	bcf	5,1	;volatile
  6869                           
  6870                           ;lcd.c: 106: pause(10);
  6871  1443  300A               	movlw	10
  6872  1444  00F0               	movwf	pause@usvalue
  6873  1445  3000               	movlw	0
  6874  1446  00F1               	movwf	pause@usvalue+1
  6875  1447  160A  118A  22C9  160A  118A  	fcall	_pause
  6876                           
  6877                           ;lcd.c: 107: ((RA1 = 1),(RA1=0));
  6878  144C  1283               	bcf	3,5	;RP0=0, select bank0
  6879  144D  1303               	bcf	3,6	;RP1=0, select bank0
  6880  144E  1485               	bsf	5,1	;volatile
  6881  144F  1085               	bcf	5,1	;volatile
  6882                           
  6883                           ;lcd.c: 108: pause(10);
  6884  1450  300A               	movlw	10
  6885  1451  00F0               	movwf	pause@usvalue
  6886  1452  3000               	movlw	0
  6887  1453  00F1               	movwf	pause@usvalue+1
  6888  1454  160A  118A  22C9  160A  118A  	fcall	_pause
  6889                           
  6890                           ;lcd.c: 109: PORTC = 2;
  6891  1459  3002               	movlw	2
  6892  145A  1283               	bcf	3,5	;RP0=0, select bank0
  6893  145B  1303               	bcf	3,6	;RP1=0, select bank0
  6894  145C  0087               	movwf	7	;volatile
  6895                           
  6896                           ;lcd.c: 110: ((RA1 = 1),(RA1=0));
  6897  145D  1485               	bsf	5,1	;volatile
  6898  145E  1085               	bcf	5,1	;volatile
  6899                           
  6900                           ;lcd.c: 112: lcd_write(0x28);
  6901  145F  3028               	movlw	40
  6902  1460  160A  118A  22F7  160A  118A  	fcall	_lcd_write
  6903                           
  6904                           ;lcd.c: 114: lcd_write(0xF);
  6905  1465  300F               	movlw	15
  6906  1466  160A  118A  22F7  160A  118A  	fcall	_lcd_write
  6907                           
  6908                           ;lcd.c: 115: lcd_clear();
  6909  146B  120A  118A  2003  160A  118A  	fcall	_lcd_clear
  6910                           
  6911                           ;lcd.c: 116: lcd_write(0x6);
  6912  1470  3006               	movlw	6
  6913  1471  160A  118A  22F7   	fcall	_lcd_write
  6914  1474  0008               	return
  6915  1475                     __end_of_lcd_init:	
  6916                           
  6917                           	psect	text22
  6918  0003                     __ptext22:	
  6919 ;; *************** function _lcd_clear *****************
  6920 ;; Defined at:
  6921 ;;		line 48 in file "lcd.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;		None               void
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0, pclath, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6935 ;;      Params:         0       0       0       0       0
  6936 ;;      Locals:         0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0
  6938 ;;      Totals:         0       0       0       0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    3
  6942 ;; This function calls:
  6943 ;;		_lcd_write
  6944 ;;		_pause
  6945 ;; This function is called by:
  6946 ;;		_main
  6947 ;;		_lcd_init
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           
  6952                           ;psect for function _lcd_clear
  6953  0003                     _lcd_clear:	
  6954                           
  6955                           ;lcd.c: 50: RA2 = 0;
  6956                           
  6957                           ;incstack = 0
  6958                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  6959  0003  1283               	bcf	3,5	;RP0=0, select bank0
  6960  0004  1303               	bcf	3,6	;RP1=0, select bank0
  6961  0005  1105               	bcf	5,2	;volatile
  6962                           
  6963                           ;lcd.c: 51: lcd_write(0x1);
  6964  0006  3001               	movlw	1
  6965  0007  160A  118A  22F7  120A  118A  	fcall	_lcd_write
  6966                           
  6967                           ;lcd.c: 52: pause (2);
  6968  000C  3002               	movlw	2
  6969  000D  00F0               	movwf	pause@usvalue
  6970  000E  3000               	movlw	0
  6971  000F  00F1               	movwf	pause@usvalue+1
  6972  0010  160A  118A  22C9   	fcall	_pause
  6973  0013  0008               	return
  6974  0014                     __end_of_lcd_clear:	
  6975                           
  6976                           	psect	text23
  6977  0800                     __ptext23:	
  6978 ;; *************** function _lcd_goto *****************
  6979 ;; Defined at:
  6980 ;;		line 80 in file "lcd.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  pos             1    wreg     unsigned char 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  pos             1    6[COMMON] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;		None               void
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0, pclath, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6994 ;;      Params:         0       0       0       0       0
  6995 ;;      Locals:         1       0       0       0       0
  6996 ;;      Temps:          0       0       0       0       0
  6997 ;;      Totals:         1       0       0       0       0
  6998 ;;Total ram usage:        1 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    3
  7001 ;; This function calls:
  7002 ;;		_lcd_write
  7003 ;; This function is called by:
  7004 ;;		_main
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           
  7009                           ;psect for function _lcd_goto
  7010  0800                     _lcd_goto:	
  7011                           
  7012                           ;incstack = 0
  7013                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  7014                           ;lcd_goto@pos stored from wreg
  7015  0800  00F6               	movwf	lcd_goto@pos
  7016                           
  7017                           ;lcd.c: 82: RA2 = 0;
  7018  0801  1283               	bcf	3,5	;RP0=0, select bank0
  7019  0802  1303               	bcf	3,6	;RP1=0, select bank0
  7020  0803  1105               	bcf	5,2	;volatile
  7021                           
  7022                           ;lcd.c: 83: lcd_write(pos);
  7023  0804  0876               	movf	lcd_goto@pos,w
  7024  0805  160A  118A  22F7   	fcall	_lcd_write
  7025  0808  0008               	return
  7026  0809                     __end_of_lcd_goto:	
  7027                           
  7028                           	psect	text24
  7029  12F7                     __ptext24:	
  7030 ;; *************** function _lcd_write *****************
  7031 ;; Defined at:
  7032 ;;		line 33 in file "lcd.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  c               1    wreg     unsigned char 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  c               1    5[COMMON] unsigned char 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;		None               void
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, status,0, pclath, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7046 ;;      Params:         0       0       0       0       0
  7047 ;;      Locals:         1       0       0       0       0
  7048 ;;      Temps:          1       0       0       0       0
  7049 ;;      Totals:         2       0       0       0       0
  7050 ;;Total ram usage:        2 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    2
  7053 ;; This function calls:
  7054 ;;		_pause
  7055 ;; This function is called by:
  7056 ;;		_lcd_clear
  7057 ;;		_lcd_puts
  7058 ;;		_lcd_goto
  7059 ;;		_lcd_init
  7060 ;;		_lcd_putch
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           
  7065                           ;psect for function _lcd_write
  7066  12F7                     _lcd_write:	
  7067                           
  7068                           ;incstack = 0
  7069                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  7070                           ;lcd_write@c stored from wreg
  7071  12F7  00F5               	movwf	lcd_write@c
  7072                           
  7073                           ;lcd.c: 35: pause (1);
  7074  12F8  3001               	movlw	1
  7075  12F9  00F0               	movwf	pause@usvalue
  7076  12FA  3000               	movlw	0
  7077  12FB  00F1               	movwf	pause@usvalue+1
  7078  12FC  160A  118A  22C9  160A  118A  	fcall	_pause
  7079                           
  7080                           ;lcd.c: 36: PORTC = ( ( c >> 4 ) & 0x0F );
  7081  1301  0875               	movf	lcd_write@c,w
  7082  1302  00F4               	movwf	??_lcd_write
  7083  1303  3004               	movlw	4
  7084  1304                     u2105:	
  7085  1304  1003               	clrc
  7086  1305  0CF4               	rrf	??_lcd_write,f
  7087  1306  3EFF               	addlw	-1
  7088  1307  1D03               	skipz
  7089  1308  2B04               	goto	u2105
  7090  1309  0874               	movf	??_lcd_write,w
  7091  130A  390F               	andlw	15
  7092  130B  1283               	bcf	3,5	;RP0=0, select bank0
  7093  130C  1303               	bcf	3,6	;RP1=0, select bank0
  7094  130D  0087               	movwf	7	;volatile
  7095                           
  7096                           ;lcd.c: 37: ((RA1 = 1),(RA1=0));
  7097  130E  1485               	bsf	5,1	;volatile
  7098  130F  1085               	bcf	5,1	;volatile
  7099                           
  7100                           ;lcd.c: 38: PORTC = ( c & 0x0F );
  7101  1310  0875               	movf	lcd_write@c,w
  7102  1311  390F               	andlw	15
  7103  1312  0087               	movwf	7	;volatile
  7104                           
  7105                           ;lcd.c: 39: ((RA1 = 1),(RA1=0));
  7106  1313  1485               	bsf	5,1	;volatile
  7107  1314  1085               	bcf	5,1	;volatile
  7108  1315  0008               	return
  7109  1316                     __end_of_lcd_write:	
  7110                           
  7111                           	psect	text25
  7112  12C9                     __ptext25:	
  7113 ;; *************** function _pause *****************
  7114 ;; Defined at:
  7115 ;;		line 8 in file "pause.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  usvalue         2    0[COMMON] unsigned short 
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;  x               2    2[COMMON] unsigned short 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;		None               void
  7122 ;; Registers used:
  7123 ;;		wreg, status,2, status,0, pclath, cstack
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7129 ;;      Params:         2       0       0       0       0
  7130 ;;      Locals:         2       0       0       0       0
  7131 ;;      Temps:          0       0       0       0       0
  7132 ;;      Totals:         4       0       0       0       0
  7133 ;;Total ram usage:        4 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:    1
  7136 ;; This function calls:
  7137 ;;		_msecbase
  7138 ;; This function is called by:
  7139 ;;		_main
  7140 ;;		_lcd_write
  7141 ;;		_lcd_clear
  7142 ;;		_lcd_init
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           
  7147                           ;psect for function _pause
  7148  12C9                     _pause:	
  7149                           
  7150                           ;pause.c: 11: unsigned short x;
  7151                           ;pause.c: 13: for (x=0; x<=usvalue; x++)
  7152                           
  7153                           ;incstack = 0
  7154                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  7155  12C9  01F2               	clrf	pause@x
  7156  12CA  01F3               	clrf	pause@x+1
  7157  12CB                     l2533:	
  7158  12CB  0873               	movf	pause@x+1,w
  7159  12CC  0271               	subwf	pause@usvalue+1,w
  7160  12CD  1D03               	skipz
  7161  12CE  2AD1               	goto	u1975
  7162  12CF  0872               	movf	pause@x,w
  7163  12D0  0270               	subwf	pause@usvalue,w
  7164  12D1                     u1975:	
  7165  12D1  1C03               	btfss	3,0
  7166  12D2  0008               	return
  7167                           
  7168                           ;pause.c: 14: {
  7169                           ;pause.c: 15: msecbase();
  7170  12D3  160A  118A  229C  160A  118A  	fcall	_msecbase
  7171  12D8  3001               	movlw	1
  7172  12D9  07F2               	addwf	pause@x,f
  7173  12DA  1803               	skipnc
  7174  12DB  0AF3               	incf	pause@x+1,f
  7175  12DC  3000               	movlw	0
  7176  12DD  07F3               	addwf	pause@x+1,f
  7177  12DE  2ACB               	goto	l2533
  7178  12DF                     __end_of_pause:	
  7179                           
  7180                           	psect	text26
  7181  129C                     __ptext26:	
  7182 ;; *************** function _msecbase *****************
  7183 ;; Defined at:
  7184 ;;		line 23 in file "msecbase.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;		None
  7189 ;; Return value:  Size  Location     Type
  7190 ;;		None               void
  7191 ;; Registers used:
  7192 ;;		wreg
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7198 ;;      Params:         0       0       0       0       0
  7199 ;;      Locals:         0       0       0       0       0
  7200 ;;      Temps:          0       0       0       0       0
  7201 ;;      Totals:         0       0       0       0       0
  7202 ;;Total ram usage:        0 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; This function calls:
  7205 ;;		Nothing
  7206 ;; This function is called by:
  7207 ;;		_pause
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           
  7212                           ;psect for function _msecbase
  7213  129C                     _msecbase:	
  7214                           
  7215                           ;msecbase.c: 25: OPTION_REG = 0b00000001;
  7216                           
  7217                           ;incstack = 0
  7218                           ; Regs used in _msecbase: [wreg]
  7219  129C  3001               	movlw	1
  7220  129D  1683               	bsf	3,5	;RP0=1, select bank1
  7221  129E  1303               	bcf	3,6	;RP1=0, select bank1
  7222  129F  0081               	movwf	1	;volatile
  7223                           
  7224                           ;msecbase.c: 26: TMR0 = 0xD;
  7225  12A0  300D               	movlw	13
  7226  12A1  1283               	bcf	3,5	;RP0=0, select bank0
  7227  12A2  1303               	bcf	3,6	;RP1=0, select bank0
  7228  12A3  0081               	movwf	1	;volatile
  7229  12A4                     l918:	
  7230                           ;msecbase.c: 27: while(!T0IF);
  7231                           
  7232  12A4  1D0B               	btfss	11,2	;volatile
  7233  12A5  2AA4               	goto	l918
  7234                           
  7235                           ;msecbase.c: 28: T0IF = 0;
  7236  12A6  110B               	bcf	11,2	;volatile
  7237  12A7  0008               	return
  7238  12A8                     __end_of_msecbase:	
  7239                           
  7240                           	psect	text27
  7241  1685                     __ptext27:	
  7242 ;; *************** function ___ftdiv *****************
  7243 ;; Defined at:
  7244 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;  f2              3   23[BANK0 ] float 
  7247 ;;  f1              3   26[BANK0 ] float 
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;  f3              3   34[BANK0 ] float 
  7250 ;;  sign            1   38[BANK0 ] unsigned char 
  7251 ;;  exp             1   37[BANK0 ] unsigned char 
  7252 ;;  cntr            1   33[BANK0 ] unsigned char 
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  3   23[BANK0 ] float 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0, pclath, cstack
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7262 ;;      Params:         0       6       0       0       0
  7263 ;;      Locals:         0       6       0       0       0
  7264 ;;      Temps:          0       4       0       0       0
  7265 ;;      Totals:         0      16       0       0       0
  7266 ;;Total ram usage:       16 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; Hardware stack levels required when called:    1
  7269 ;; This function calls:
  7270 ;;		___ftpack
  7271 ;; This function is called by:
  7272 ;;		_main
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           
  7277                           ;psect for function ___ftdiv
  7278  1685                     ___ftdiv:	
  7279                           
  7280                           ;incstack = 0
  7281                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7282  1685  1283               	bcf	3,5	;RP0=0, select bank0
  7283  1686  1303               	bcf	3,6	;RP1=0, select bank0
  7284  1687  083A               	movf	___ftdiv@f1,w
  7285  1688  00BD               	movwf	??___ftdiv
  7286  1689  083B               	movf	___ftdiv@f1+1,w
  7287  168A  00BE               	movwf	??___ftdiv+1
  7288  168B  083C               	movf	___ftdiv@f1+2,w
  7289  168C  00BF               	movwf	??___ftdiv+2
  7290  168D  1003               	clrc
  7291  168E  0D3E               	rlf	??___ftdiv+1,w
  7292  168F  0D3F               	rlf	??___ftdiv+2,w
  7293  1690  00C0               	movwf	??___ftdiv+3
  7294  1691  0840               	movf	??___ftdiv+3,w
  7295  1692  00C5               	movwf	___ftdiv@exp
  7296  1693  0845               	movf	___ftdiv@exp,w
  7297  1694  1D03               	btfss	3,2
  7298  1695  2E9D               	goto	l3391
  7299  1696  3000               	movlw	0
  7300  1697  00B7               	movwf	?___ftdiv
  7301  1698  3000               	movlw	0
  7302  1699  00B8               	movwf	?___ftdiv+1
  7303  169A  3000               	movlw	0
  7304  169B  00B9               	movwf	?___ftdiv+2
  7305  169C  0008               	return
  7306  169D                     l3391:	
  7307  169D  0837               	movf	___ftdiv@f2,w
  7308  169E  00BD               	movwf	??___ftdiv
  7309  169F  0838               	movf	___ftdiv@f2+1,w
  7310  16A0  00BE               	movwf	??___ftdiv+1
  7311  16A1  0839               	movf	___ftdiv@f2+2,w
  7312  16A2  00BF               	movwf	??___ftdiv+2
  7313  16A3  1003               	clrc
  7314  16A4  0D3E               	rlf	??___ftdiv+1,w
  7315  16A5  0D3F               	rlf	??___ftdiv+2,w
  7316  16A6  00C0               	movwf	??___ftdiv+3
  7317  16A7  0840               	movf	??___ftdiv+3,w
  7318  16A8  00C6               	movwf	___ftdiv@sign
  7319  16A9  0846               	movf	___ftdiv@sign,w
  7320  16AA  1D03               	btfss	3,2
  7321  16AB  2EB3               	goto	l3397
  7322  16AC  3000               	movlw	0
  7323  16AD  00B7               	movwf	?___ftdiv
  7324  16AE  3000               	movlw	0
  7325  16AF  00B8               	movwf	?___ftdiv+1
  7326  16B0  3000               	movlw	0
  7327  16B1  00B9               	movwf	?___ftdiv+2
  7328  16B2  0008               	return
  7329  16B3                     l3397:	
  7330  16B3  3000               	movlw	0
  7331  16B4  00C2               	movwf	___ftdiv@f3
  7332  16B5  3000               	movlw	0
  7333  16B6  00C3               	movwf	___ftdiv@f3+1
  7334  16B7  3000               	movlw	0
  7335  16B8  00C4               	movwf	___ftdiv@f3+2
  7336  16B9  3089               	movlw	137
  7337  16BA  0746               	addwf	___ftdiv@sign,w
  7338  16BB  00BD               	movwf	??___ftdiv
  7339  16BC  083D               	movf	??___ftdiv,w
  7340  16BD  02C5               	subwf	___ftdiv@exp,f
  7341  16BE  083A               	movf	___ftdiv@f1,w
  7342  16BF  00BD               	movwf	??___ftdiv
  7343  16C0  083B               	movf	___ftdiv@f1+1,w
  7344  16C1  00BE               	movwf	??___ftdiv+1
  7345  16C2  083C               	movf	___ftdiv@f1+2,w
  7346  16C3  00BF               	movwf	??___ftdiv+2
  7347  16C4  3010               	movlw	16
  7348  16C5                     u3815:	
  7349  16C5  1003               	clrc
  7350  16C6  0CBF               	rrf	??___ftdiv+2,f
  7351  16C7  0CBE               	rrf	??___ftdiv+1,f
  7352  16C8  0CBD               	rrf	??___ftdiv,f
  7353  16C9  3EFF               	addlw	-1
  7354  16CA  1D03               	skipz
  7355  16CB  2EC5               	goto	u3815
  7356  16CC  083D               	movf	??___ftdiv,w
  7357  16CD  00C0               	movwf	??___ftdiv+3
  7358  16CE  0840               	movf	??___ftdiv+3,w
  7359  16CF  00C6               	movwf	___ftdiv@sign
  7360  16D0  0837               	movf	___ftdiv@f2,w
  7361  16D1  00BD               	movwf	??___ftdiv
  7362  16D2  0838               	movf	___ftdiv@f2+1,w
  7363  16D3  00BE               	movwf	??___ftdiv+1
  7364  16D4  0839               	movf	___ftdiv@f2+2,w
  7365  16D5  00BF               	movwf	??___ftdiv+2
  7366  16D6  3010               	movlw	16
  7367  16D7                     u3825:	
  7368  16D7  1003               	clrc
  7369  16D8  0CBF               	rrf	??___ftdiv+2,f
  7370  16D9  0CBE               	rrf	??___ftdiv+1,f
  7371  16DA  0CBD               	rrf	??___ftdiv,f
  7372  16DB  3EFF               	addlw	-1
  7373  16DC  1D03               	skipz
  7374  16DD  2ED7               	goto	u3825
  7375  16DE  083D               	movf	??___ftdiv,w
  7376  16DF  00C0               	movwf	??___ftdiv+3
  7377  16E0  0840               	movf	??___ftdiv+3,w
  7378  16E1  06C6               	xorwf	___ftdiv@sign,f
  7379  16E2  3080               	movlw	128
  7380  16E3  00BD               	movwf	??___ftdiv
  7381  16E4  083D               	movf	??___ftdiv,w
  7382  16E5  05C6               	andwf	___ftdiv@sign,f
  7383  16E6  17BB               	bsf	___ftdiv@f1+1,7
  7384  16E7  30FF               	movlw	255
  7385  16E8  05BA               	andwf	___ftdiv@f1,f
  7386  16E9  30FF               	movlw	255
  7387  16EA  05BB               	andwf	___ftdiv@f1+1,f
  7388  16EB  3000               	movlw	0
  7389  16EC  05BC               	andwf	___ftdiv@f1+2,f
  7390  16ED  17B8               	bsf	___ftdiv@f2+1,7
  7391  16EE  30FF               	movlw	255
  7392  16EF  05B7               	andwf	___ftdiv@f2,f
  7393  16F0  30FF               	movlw	255
  7394  16F1  05B8               	andwf	___ftdiv@f2+1,f
  7395  16F2  3000               	movlw	0
  7396  16F3  05B9               	andwf	___ftdiv@f2+2,f
  7397  16F4  3018               	movlw	24
  7398  16F5  00BD               	movwf	??___ftdiv
  7399  16F6  083D               	movf	??___ftdiv,w
  7400  16F7  00C1               	movwf	___ftdiv@cntr
  7401  16F8                     l3411:	
  7402  16F8  3001               	movlw	1
  7403  16F9                     u3835:	
  7404  16F9  1003               	clrc
  7405  16FA  0DC2               	rlf	___ftdiv@f3,f
  7406  16FB  0DC3               	rlf	___ftdiv@f3+1,f
  7407  16FC  0DC4               	rlf	___ftdiv@f3+2,f
  7408  16FD  3EFF               	addlw	-1
  7409  16FE  1D03               	skipz
  7410  16FF  2EF9               	goto	u3835
  7411  1700  0839               	movf	___ftdiv@f2+2,w
  7412  1701  023C               	subwf	___ftdiv@f1+2,w
  7413  1702  1D03               	skipz
  7414  1703  2F0A               	goto	u3845
  7415  1704  0838               	movf	___ftdiv@f2+1,w
  7416  1705  023B               	subwf	___ftdiv@f1+1,w
  7417  1706  1D03               	skipz
  7418  1707  2F0A               	goto	u3845
  7419  1708  0837               	movf	___ftdiv@f2,w
  7420  1709  023A               	subwf	___ftdiv@f1,w
  7421  170A                     u3845:	
  7422  170A  1C03               	skipc
  7423  170B  2F17               	goto	l3419
  7424  170C  0837               	movf	___ftdiv@f2,w
  7425  170D  02BA               	subwf	___ftdiv@f1,f
  7426  170E  0838               	movf	___ftdiv@f2+1,w
  7427  170F  1C03               	skipc
  7428  1710  0F38               	incfsz	___ftdiv@f2+1,w
  7429  1711  02BB               	subwf	___ftdiv@f1+1,f
  7430  1712  0839               	movf	___ftdiv@f2+2,w
  7431  1713  1C03               	skipc
  7432  1714  0A39               	incf	___ftdiv@f2+2,w
  7433  1715  02BC               	subwf	___ftdiv@f1+2,f
  7434  1716  1442               	bsf	___ftdiv@f3,0
  7435  1717                     l3419:	
  7436  1717  3001               	movlw	1
  7437  1718                     u3855:	
  7438  1718  1003               	clrc
  7439  1719  0DBA               	rlf	___ftdiv@f1,f
  7440  171A  0DBB               	rlf	___ftdiv@f1+1,f
  7441  171B  0DBC               	rlf	___ftdiv@f1+2,f
  7442  171C  3EFF               	addlw	-1
  7443  171D  1D03               	skipz
  7444  171E  2F18               	goto	u3855
  7445  171F  3001               	movlw	1
  7446  1720  02C1               	subwf	___ftdiv@cntr,f
  7447  1721  1D03               	btfss	3,2
  7448  1722  2EF8               	goto	l3411
  7449  1723  0842               	movf	___ftdiv@f3,w
  7450  1724  00F0               	movwf	___ftpack@arg
  7451  1725  0843               	movf	___ftdiv@f3+1,w
  7452  1726  00F1               	movwf	___ftpack@arg+1
  7453  1727  0844               	movf	___ftdiv@f3+2,w
  7454  1728  00F2               	movwf	___ftpack@arg+2
  7455  1729  0845               	movf	___ftdiv@exp,w
  7456  172A  00BD               	movwf	??___ftdiv
  7457  172B  083D               	movf	??___ftdiv,w
  7458  172C  00F3               	movwf	___ftpack@exp
  7459  172D  0846               	movf	___ftdiv@sign,w
  7460  172E  00BE               	movwf	??___ftdiv+1
  7461  172F  083E               	movf	??___ftdiv+1,w
  7462  1730  00F4               	movwf	___ftpack@sign
  7463  1731  160A  118A  258B   	fcall	___ftpack
  7464  1734  0870               	movf	?___ftpack,w
  7465  1735  1283               	bcf	3,5	;RP0=0, select bank0
  7466  1736  1303               	bcf	3,6	;RP1=0, select bank0
  7467  1737  00B7               	movwf	?___ftdiv
  7468  1738  0871               	movf	?___ftpack+1,w
  7469  1739  00B8               	movwf	?___ftdiv+1
  7470  173A  0872               	movf	?___ftpack+2,w
  7471  173B  00B9               	movwf	?___ftdiv+2
  7472  173C  0008               	return
  7473  173D                     __end_of___ftdiv:	
  7474                           
  7475                           	psect	text28
  7476  1316                     __ptext28:	
  7477 ;; *************** function ___awtoft *****************
  7478 ;; Defined at:
  7479 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  c               2    8[COMMON] int 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  sign            1   13[COMMON] unsigned char 
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  3    8[COMMON] float 
  7486 ;; Registers used:
  7487 ;;		wreg, status,2, status,0, pclath, cstack
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7493 ;;      Params:         3       0       0       0       0
  7494 ;;      Locals:         1       0       0       0       0
  7495 ;;      Temps:          2       0       0       0       0
  7496 ;;      Totals:         6       0       0       0       0
  7497 ;;Total ram usage:        6 bytes
  7498 ;; Hardware stack levels used:    1
  7499 ;; Hardware stack levels required when called:    1
  7500 ;; This function calls:
  7501 ;;		___ftpack
  7502 ;; This function is called by:
  7503 ;;		_main
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           
  7508                           ;psect for function ___awtoft
  7509  1316                     ___awtoft:	
  7510                           
  7511                           ;incstack = 0
  7512                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7513  1316  01FD               	clrf	___awtoft@sign
  7514  1317  1FF9               	btfss	___awtoft@c+1,7
  7515  1318  2B20               	goto	l3381
  7516  1319  09F8               	comf	___awtoft@c,f
  7517  131A  09F9               	comf	___awtoft@c+1,f
  7518  131B  0AF8               	incf	___awtoft@c,f
  7519  131C  1903               	skipnz
  7520  131D  0AF9               	incf	___awtoft@c+1,f
  7521  131E  01FD               	clrf	___awtoft@sign
  7522  131F  0AFD               	incf	___awtoft@sign,f
  7523  1320                     l3381:	
  7524  1320  0878               	movf	___awtoft@c,w
  7525  1321  00F0               	movwf	___ftpack@arg
  7526  1322  0879               	movf	___awtoft@c+1,w
  7527  1323  00F1               	movwf	___ftpack@arg+1
  7528  1324  01F2               	clrf	___ftpack@arg+2
  7529  1325  308E               	movlw	142
  7530  1326  00FB               	movwf	??___awtoft
  7531  1327  087B               	movf	??___awtoft,w
  7532  1328  00F3               	movwf	___ftpack@exp
  7533  1329  087D               	movf	___awtoft@sign,w
  7534  132A  00FC               	movwf	??___awtoft+1
  7535  132B  087C               	movf	??___awtoft+1,w
  7536  132C  00F4               	movwf	___ftpack@sign
  7537  132D  160A  118A  258B   	fcall	___ftpack
  7538  1330  0870               	movf	?___ftpack,w
  7539  1331  00F8               	movwf	?___awtoft
  7540  1332  0871               	movf	?___ftpack+1,w
  7541  1333  00F9               	movwf	?___awtoft+1
  7542  1334  0872               	movf	?___ftpack+2,w
  7543  1335  00FA               	movwf	?___awtoft+2
  7544  1336  0008               	return
  7545  1337                     __end_of___awtoft:	
  7546                           
  7547                           	psect	text29
  7548  158B                     __ptext29:	
  7549 ;; *************** function ___ftpack *****************
  7550 ;; Defined at:
  7551 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  arg             3    0[COMMON] unsigned um
  7554 ;;  exp             1    3[COMMON] unsigned char 
  7555 ;;  sign            1    4[COMMON] unsigned char 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  3    0[COMMON] float 
  7560 ;; Registers used:
  7561 ;;		wreg, status,2, status,0
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7567 ;;      Params:         5       0       0       0       0
  7568 ;;      Locals:         0       0       0       0       0
  7569 ;;      Temps:          3       0       0       0       0
  7570 ;;      Totals:         8       0       0       0       0
  7571 ;;Total ram usage:        8 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		___awtoft
  7577 ;;		___ftadd
  7578 ;;		___ftdiv
  7579 ;;		___ftmul
  7580 ;;		___lltoft
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           
  7585                           ;psect for function ___ftpack
  7586  158B                     ___ftpack:	
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7590  158B  0873               	movf	___ftpack@exp,w
  7591  158C  1903               	btfsc	3,2
  7592  158D  2D93               	goto	l2539
  7593  158E  0872               	movf	___ftpack@arg+2,w
  7594  158F  0471               	iorwf	___ftpack@arg+1,w
  7595  1590  0470               	iorwf	___ftpack@arg,w
  7596  1591  1D03               	skipz
  7597  1592  2DA6               	goto	l2545
  7598  1593                     l2539:	
  7599  1593  3000               	movlw	0
  7600  1594  00F0               	movwf	?___ftpack
  7601  1595  3000               	movlw	0
  7602  1596  00F1               	movwf	?___ftpack+1
  7603  1597  3000               	movlw	0
  7604  1598  00F2               	movwf	?___ftpack+2
  7605  1599  0008               	return
  7606  159A                     l2543:	
  7607  159A  3001               	movlw	1
  7608  159B  00F5               	movwf	??___ftpack
  7609  159C  0875               	movf	??___ftpack,w
  7610  159D  07F3               	addwf	___ftpack@exp,f
  7611  159E  3001               	movlw	1
  7612  159F                     u2005:	
  7613  159F  1003               	clrc
  7614  15A0  0CF2               	rrf	___ftpack@arg+2,f
  7615  15A1  0CF1               	rrf	___ftpack@arg+1,f
  7616  15A2  0CF0               	rrf	___ftpack@arg,f
  7617  15A3  3EFF               	addlw	-1
  7618  15A4  1D03               	skipz
  7619  15A5  2D9F               	goto	u2005
  7620  15A6                     l2545:	
  7621  15A6  30FE               	movlw	254
  7622  15A7  0572               	andwf	___ftpack@arg+2,w
  7623  15A8  1903               	btfsc	3,2
  7624  15A9  2DC1               	goto	l1284
  7625  15AA  2D9A               	goto	l2543
  7626  15AB                     l2547:	
  7627  15AB  3001               	movlw	1
  7628  15AC  00F5               	movwf	??___ftpack
  7629  15AD  0875               	movf	??___ftpack,w
  7630  15AE  07F3               	addwf	___ftpack@exp,f
  7631  15AF  3001               	movlw	1
  7632  15B0  07F0               	addwf	___ftpack@arg,f
  7633  15B1  3000               	movlw	0
  7634  15B2  1803               	skipnc
  7635  15B3  3001               	movlw	1
  7636  15B4  07F1               	addwf	___ftpack@arg+1,f
  7637  15B5  3000               	movlw	0
  7638  15B6  1803               	skipnc
  7639  15B7  3001               	movlw	1
  7640  15B8  07F2               	addwf	___ftpack@arg+2,f
  7641  15B9  3001               	movlw	1
  7642  15BA                     u2025:	
  7643  15BA  1003               	clrc
  7644  15BB  0CF2               	rrf	___ftpack@arg+2,f
  7645  15BC  0CF1               	rrf	___ftpack@arg+1,f
  7646  15BD  0CF0               	rrf	___ftpack@arg,f
  7647  15BE  3EFF               	addlw	-1
  7648  15BF  1D03               	skipz
  7649  15C0  2DBA               	goto	u2025
  7650  15C1                     l1284:	
  7651  15C1  30FF               	movlw	255
  7652  15C2  0572               	andwf	___ftpack@arg+2,w
  7653  15C3  1903               	btfsc	3,2
  7654  15C4  2DD0               	goto	l2555
  7655  15C5  2DAB               	goto	l2547
  7656  15C6                     l2553:	
  7657  15C6  3001               	movlw	1
  7658  15C7  02F3               	subwf	___ftpack@exp,f
  7659  15C8  3001               	movlw	1
  7660  15C9                     u2045:	
  7661  15C9  1003               	clrc
  7662  15CA  0DF0               	rlf	___ftpack@arg,f
  7663  15CB  0DF1               	rlf	___ftpack@arg+1,f
  7664  15CC  0DF2               	rlf	___ftpack@arg+2,f
  7665  15CD  3EFF               	addlw	-1
  7666  15CE  1D03               	skipz
  7667  15CF  2DC9               	goto	u2045
  7668  15D0                     l2555:	
  7669  15D0  1BF1               	btfsc	___ftpack@arg+1,7
  7670  15D1  2DD6               	goto	l1291
  7671  15D2  3002               	movlw	2
  7672  15D3  0273               	subwf	___ftpack@exp,w
  7673  15D4  1803               	skipnc
  7674  15D5  2DC6               	goto	l2553
  7675  15D6                     l1291:	
  7676  15D6  1873               	btfsc	___ftpack@exp,0
  7677  15D7  2DDE               	goto	l1292
  7678  15D8  30FF               	movlw	255
  7679  15D9  05F0               	andwf	___ftpack@arg,f
  7680  15DA  307F               	movlw	127
  7681  15DB  05F1               	andwf	___ftpack@arg+1,f
  7682  15DC  30FF               	movlw	255
  7683  15DD  05F2               	andwf	___ftpack@arg+2,f
  7684  15DE                     l1292:	
  7685  15DE  1003               	clrc
  7686  15DF  0CF3               	rrf	___ftpack@exp,f
  7687  15E0  0873               	movf	___ftpack@exp,w
  7688  15E1  00F5               	movwf	??___ftpack
  7689  15E2  01F6               	clrf	??___ftpack+1
  7690  15E3  01F7               	clrf	??___ftpack+2
  7691  15E4  3010               	movlw	16
  7692  15E5                     u2085:	
  7693  15E5  1003               	clrc
  7694  15E6  0DF5               	rlf	??___ftpack,f
  7695  15E7  0DF6               	rlf	??___ftpack+1,f
  7696  15E8  0DF7               	rlf	??___ftpack+2,f
  7697  15E9  3EFF               	addlw	-1
  7698  15EA  1D03               	skipz
  7699  15EB  2DE5               	goto	u2085
  7700  15EC  0875               	movf	??___ftpack,w
  7701  15ED  04F0               	iorwf	___ftpack@arg,f
  7702  15EE  0876               	movf	??___ftpack+1,w
  7703  15EF  04F1               	iorwf	___ftpack@arg+1,f
  7704  15F0  0877               	movf	??___ftpack+2,w
  7705  15F1  04F2               	iorwf	___ftpack@arg+2,f
  7706  15F2  0874               	movf	___ftpack@sign,w
  7707  15F3  1903               	btfsc	3,2
  7708  15F4  0008               	return
  7709  15F5  17F2               	bsf	___ftpack@arg+2,7
  7710  15F6  0008               	return
  7711  15F7                     __end_of___ftpack:	
  7712  007E                     btemp	set	126	;btemp
  7713  007E                     wtemp	set	126
  7714  007E                     wtemp0	set	126
  7715  0080                     wtemp1	set	128
  7716  0082                     wtemp2	set	130
  7717  0084                     wtemp3	set	132
  7718  0086                     wtemp4	set	134
  7719  0088                     wtemp5	set	136
  7720  007F                     wtemp6	set	127
  7721  007E                     ttemp	set	126
  7722  007E                     ttemp0	set	126
  7723  0081                     ttemp1	set	129
  7724  0084                     ttemp2	set	132
  7725  0087                     ttemp3	set	135
  7726  007F                     ttemp4	set	127
  7727  007E                     ltemp	set	126
  7728  007E                     ltemp0	set	126
  7729  0082                     ltemp1	set	130
  7730  0086                     ltemp2	set	134
  7731  0080                     ltemp3	set	128


Data Sizes:
    Strings     32
    Constant    118
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      75
    BANK1            80     23      43
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 20
		 -> buffer(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    _scale->___bmul
    _fround->___bmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_write->_pause
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   50480
                                             68 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                              _pause
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             40    36      4   34491
                                             58 BANK0     10     6      4
                                              0 BANK1     23    23      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    7639
                                             23 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    7441
                                             23 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3980
                                              7 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1276
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1868
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             32 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    2971
                                             52 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2798
                                             39 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     560
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0     985
                                              6 COMMON     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0    3263
                                              6 COMMON     2     2      0
                          _lcd_clear
                          _lcd_write
                              _pause
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0    1620
                          _lcd_write
                              _pause
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             1     1      0     854
                                              6 COMMON     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0     832
                                              4 COMMON     2     2      0
                              _pause
 ---------------------------------------------------------------------------------
 (1) _pause                                                4     2      2     788
                                              0 COMMON     4     2      2
                           _msecbase
 ---------------------------------------------------------------------------------
 (2) _msecbase                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2450
                                             23 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2049
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftpack (ARG)
   _lcd_clear
     _lcd_write
       _pause
         _msecbase
     _pause
       _msecbase
   _lcd_goto
     _lcd_write
       _pause
         _msecbase
   _lcd_init
     _lcd_clear
       _lcd_write
         _pause
           _msecbase
       _pause
         _msecbase
     _lcd_write
       _pause
         _msecbase
     _pause
       _msecbase
   _lcd_puts
     _lcd_write
       _pause
         _msecbase
   _pause
     _msecbase
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      84       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     17      2B       7       53.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      84      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon May 13 13:59:08 2019

                       pc 0002            ___bmul@product 0025               __CFG_CP$OFF 0000  
                      l40 0B5E                        l43 0BE3                        l46 0C68  
                      l49 0CED              ___awdiv@sign 0021                        fsr 0004  
     ___wmul@multiplicand 0072              ___ftadd@exp1 0053              ___ftadd@exp2 0052  
            ___ftadd@sign 0051                       l918 12A4                       l975 0238  
                     _RA1 0029                       _RA2 002A                       _RA4 002C  
            __CFG_CPD$OFF 0000                       fsr0 0004                       indf 0000  
            ___awmod@sign 0076               lcd_goto@pos 0076               _sprintf$969 00A0  
            __CFG_LVP$OFF 0000              ___ftdiv@cntr 0041              ___ftdiv@sign 0046  
                    l1001 055E                      l1016 0781                      l1106 0813  
                    l1018 07C9                      l3001 151E                      l1315 09A5  
                    l3101 13D6                      l1341 176F                      l3103 13E6  
                    l3111 1411                      l1351 17F4                      l1272 0B2C  
                    l1264 0AE3                      l3025 1340                      l3121 136E  
                    l3201 023A                      l1291 15D6                      l3035 1611  
                    l3107 1404                      l3203 0250                      l1292 15DE  
                    l1284 15C1                      l3061 1660                      l3053 1643  
                    l3301 05CB                      l3063 166E                      l3055 1653  
                    l3119 135C                      l1392 166B                      l3321 0631  
                    l3313 05FE                      l3209 0268                      l3411 16F8  
                    l3067 167C                      l3091 1582                      l2603 1481  
                    l3307 05E4                      l3251 03E1                      l3243 037E  
                    l3235 0311                      l3219 02A7                      l2533 12CB  
                    l3077 153D                      l2621 14A2                      l3341 076A  
                    l2543 159A                      l2711 096B                      l3087 1575  
                    l3079 154D                      l2631 14C3                      l3351 07A7  
                    l3335 0751                      l3263 0436                      l3247 039B  
                    l3343 076F                      l2553 15C6                      l2545 15A6  
                    l2713 0977                      l2705 0956                      l2609 148C  
                    l3273 0478                      l3361 07ED                      l3193 01EF  
                    l3441 0B50                      l2555 15D0                      l2547 15AB  
                    l2539 1593                      l3419 1717                      l3371 12E3  
                    l2723 0995                      l2715 097C                      l2635 14CB  
                    l2627 14B8                      l2619 1494                      l2651 1394  
                    l2811 00F2                      l3283 04ED                      l3259 041F  
                    l3195 0232                      l3179 01D4                      l3381 1320  
                    l2733 09C9                      l2725 09A1                      l2717 0980  
                    l2661 13A8                      l3277 04E7                      l3391 169D  
                    l2743 09EC                      l2903 17B0                      l2647 138D  
                    l2583 12BA                      l3359 01B9                      l2729 09B7  
                    l2921 17E9                      l2913 17CC                      l2673 13C9  
                    l2665 13B6                      l2753 0842                      l2841 0E97  
                    l3289 053D                      l2683 0926                      l2923 17F7  
                    l2915 17DC                      l2659 139A                      l2587 12C0  
                    l2771 0897                      l2819 017C                      l2835 0E29  
                    l3397 16B3                      l2693 093C                      l2933 0A27  
                    l2669 13C1                      l2853 0F73                      l2845 0EB6  
                    l2687 092D                      l2783 08BF                      l2775 08A7  
                    l2759 0858                      l2871 12B4                      l2881 1757  
                    l2939 0A46                      l2787 08CF                      l2859 0FE1  
                    l2981 080B                      l2973 0B21                      l2965 0B04  
                    l2949 0A8D                      l2975 0B2F                      l2967 0B14  
                    l2895 1790                      l2997 14F7                      STR_1 107C  
                    STR_2 1084                      STR_3 108C                      STR_4 1094  
                    _T0IF 005A                      u2005 159F                      u2025 15BA  
                    u2105 1304                      u2045 15C9                      u2205 14B9  
                    u3111 1511                      u3112 1512                      u3113 1517  
                    u3025 0B23                      u3114 1518                      u2085 15E5  
                    u2165 1497                      u2415 0957                      u3055 0814  
                    u2505 0996                      u3225 1662                      u3305 1576  
                    u3065 081B                      u2185 14A3                      u2265 139D  
                    u3091 14EA                      u2195 14AF                      u3092 14EB  
                    u3093 14F0                      u2445 096C                      u3165 1618  
                    u2285 13AE                      u3094 14F1                      u3335 13DA  
                    u2295 13B7                      u3265 1541                      u2625 08A8  
                    u2475 0981                      u3195 1644                      u3355 13F4  
                    u2635 08B0                      u3515 03A6                      u3285 154F  
                    u3365 1405                      u3525 03EC                      u3295 1564  
                    u2815 1792                      u3385 1361                      u2905 17EB  
                    u2825 17A3                      u2585 0864                      u3625 056D  
                    u2835 17B1                      u2675 08D0                      u2595 0876  
                    u3555 041D                      u3475 02C1                      u2685 08D8  
                    u3645 05ED                      u3815 16C5                      u1975 12D1  
                    u3735 079A                      u3655 05FA                      u3825 16D7  
                    u2945 0A8F                      u3745 07C0                      u3585 04F2  
                    u3835 16F9                      u2955 0ABE                      u2875 17CD  
                    u3675 06A5                      u3595 052F                      u3845 170A  
                    u3685 0717                      u3855 1718                      u2995 0B05  
                    _TMR0 0001              __CFG_WRT$OFF 0000                      _main 0B38  
            ___ftpack@arg 0070                      _read 0068              ___ftpack@exp 0073  
                    btemp 007E                      ltemp 007E                      start 0000  
                    ttemp 007E                      wtemp 007E             __CFG_IESO$OFF 0000  
       ___bmul@multiplier 0026              ___ftmul@cntr 0035              ___ftmul@sign 0036  
            ___fttol@exp1 004D              ___fttol@lval 0049                     ?_main 0070  
         __end_of___awdiv 14D0           __end_of___ftadd 0A06             __CFG_WDTE$OFF 0000  
         __end_of___awmod 13CE           __end_of___ftdiv 173D           __end_of___ftneg 1294  
                   _ANSEL 0188           __end_of___lldiv 158B           __end_of___ftmul 08FD  
         ___awdiv@divisor 0077           __end_of___llmod 141A           __end_of___ftsub 1358  
         __end_of___fttol 1685           ___awdiv@counter 0020                     _PORTC 0007  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISE 0089              ___lltoft@exp 007D            __CFG_FCMEN$OFF 0000  
           ___awtoft@sign 007D           __end_of_dpowers 102E                     _scale 0D65  
         __end_of_isdigit 12B6                     _pause 12C9             ___ftpack@sign 0074  
          __CFG_BOREN$OFF 0000                     pclath 000A                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __end_of_sprintf 07F2            __CFG_MCLRE$OFF 0000  
         __initialization 07F2              __end_of_main 0D65                    ??_main 0064  
           ___fttol@sign1 0048      __size_of__tdiv_to_l_ 00C3                    _ADCON0 001F  
                  _ADCON1 009F          ___llmod@dividend 0074                    ?_scale 0037  
                  _ADRESH 001E                    _ADRESL 009E                    ?_pause 0070  
        ___awdiv@dividend 0079          __end_of___awtoft 1337          __end_of___ftpack 15F7  
                  _ANSELH 0189          __end_of___lltoft 1383            __CFG_PWRTE$OFF 0000  
        __end_of__powers_ 107C          __end_of_lcd_init 1475          __end_of_lcd_goto 0809  
                  ___bmul 12B6          __end_of_lcd_puts 12F7                    ___ftge 14D0  
                  ___wmul 0809                 ??___awdiv 007B                 ??___ftadd 004D  
               ??___awmod 0074                 ??___ftdiv 003D                 ??___ftneg 0073  
               ??___lldiv 0078                 ??___ftmul 002D                 ??___llmod 0078  
               ??___ftsub 007E                 ??___fttol 0044                    _buffer 00B7  
                  _fround 0014          ___awdiv@quotient 0022           ___awmod@divisor 0070  
         ___awmod@counter 0075          __end_of_msecbase 12A8     ___ftmul@f3_as_product 0032  
               ??_isdigit 0070                    pause@x 0072                 ??_sprintf 005E  
 __end_of__initialization 07FC                ___ftadd@f1 0047                ___ftadd@f2 004A  
              ___ftge@ff1 0070                ___ftge@ff2 0073                ___ftdiv@f1 003A  
              ___ftdiv@f2 0037                ___ftdiv@f3 0042                ___ftneg@f1 0070  
              ___awtoft@c 0078       ___bmul@multiplicand 0024                ___ftmul@f1 0027  
              ___ftmul@f2 002A                ___ftsub@f1 0057                ___ftsub@f2 0054  
              ___fttol@f1 0040            __pcstackCOMMON 0070                ___lltoft@c 0078  
           __end_of_scale 1000             __end_of_pause 12DF                __div_to_l_ 0A06  
      __size_of_lcd_clear 0011           __div_to_l_@exp1 0025        __size_of_lcd_write 001F  
         __div_to_l_@cntr 0024                   ??_scale 003A                   ??_pause 0072  
         __div_to_l_@quot 0020                __pbssBANK0 0068                __pbssBANK1 00B7  
           __div_to_l_@f1 0070             __div_to_l_@f2 0073                __pmaintext 0B38  
                 ?___bmul 0024                   ?___ftge 0070                   ?___wmul 0070  
                 ?_fround 0037                 ?___awtoft 0078                 ?___ftpack 0070  
               ?___lltoft 0078                   _GO_DONE 00F9                 ?_lcd_init 0070  
               ?_lcd_goto 0070                 ?_lcd_puts 0070                __stringtab 1000  
               ?_msecbase 0070         __end_of__npowers_ 1055         __end_of_lcd_clear 0014  
         __size_of___bmul 0013           __size_of___ftge 005D                   ___awdiv 1475  
                 ___ftadd 08FD                   ___awmod 1383                   ___ftdiv 1685  
       __end_of_lcd_write 1316                   ___ftneg 128C                   ___lldiv 152D  
         __size_of___wmul 0021                   ___ftmul 082A                   ___llmod 13CE  
                 ___ftsub 1337                   ___fttol 15F7                _fround$966 0043  
              _fround$967 0040                ??___awtoft 007B                ??___ftpack 0075  
         __size_of_fround 019A                ??___lltoft 007C                   __ptext1 01AE  
                 __ptext2 0D65                   __ptext3 12A8                   __ptext4 0014  
                 __ptext5 082A                   __ptext6 12B6                   __ptext7 1383  
                 __ptext8 1475                   __ptext9 173D               ?__div_to_l_ 0070  
                 _dpowers 1006                   _isdigit 12A8          ___awmod@dividend 0072  
                 _sprintf 01AE                   clrloop0 1295                ??_lcd_init 0076  
              ??_lcd_goto 0076                ??_lcd_puts 0076      end_of_initialization 07FC  
              ??_msecbase 0070           ___lldiv@divisor 0070           ___lldiv@counter 007D  
          __tdiv_to_l_@f1 0070            __tdiv_to_l_@f2 0073             ??__tdiv_to_l_ 0076  
             ___ftdiv@exp 0045       __size_of__div_to_l_ 0132                lcd_write@c 0075  
             ___ftmul@exp 0031            __end_of___bmul 12C9            __end_of___ftge 152D  
          __end_of___wmul 082A            __end_of_fround 01AE       start_initialization 07F2  
     __end_of__tdiv_to_l_ 1800        lcd_init@init_value 0077           ___llmod@divisor 0070  
         ___llmod@counter 0079  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___bmul 007C  
                ??___ftge 0076                  ??___wmul 0074                  ??_fround 003A  
           sprintf@tmpval 00AC                fround@prec 0046         __size_of___awtoft 0021  
       __size_of___ftpack 006C              pause@usvalue 0070         __size_of___lltoft 002B  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
       __size_of_lcd_init 005B         __size_of_lcd_goto 0009               sprintf@flag 00A4  
       __size_of_lcd_puts 0018               sprintf@fval 00B3               sprintf@prec 00B0  
       __size_of_msecbase 000C                  ?___awdiv 0077                  ?___ftadd 0047  
                ?___awmod 0070                  ?___ftdiv 0037                  ?___ftneg 0070  
                ?___lldiv 0070                  ?___ftmul 0027                  ?___llmod 0070  
                ?___ftsub 0054                 __npowers_ 102E                  ?___fttol 0040  
               _lcd_clear 0003                 __pstrings 1000               __tdiv_to_l_ 173D  
               _lcd_write 12F7              ??__div_to_l_ 0076                  ?_isdigit 0070  
               _scale$968 003C                  ?_sprintf 005A            __size_of_scale 029B  
          __size_of_pause 0016            ___wmul@product 0074                 clear_ram0 1294  
      __end_of__div_to_l_ 0B38                ?_lcd_clear 0070               __stringbase 1005  
              ?_lcd_write 0070         ___wmul@multiplier 0070                 lcd_puts@s 0077  
        __size_of___awdiv 005B          __size_of___ftadd 0109          __size_of___awmod 004B  
        __size_of___ftdiv 00B8          __size_of___ftneg 0008          __size_of___lldiv 005E  
        __size_of___ftmul 00D3          __size_of___llmod 004C          __size_of___ftsub 0021  
        __size_of___fttol 008E                  ___awtoft 1316                  ___ftpack 158B  
      __end_of__stringtab 1006                  ___lltoft 1358               _isdigit$755 0070  
              sprintf@exp 00AA                sprintf@val 00A6          __size_of_isdigit 000E  
                __ptext10 0A06                  __ptext11 0809                  __ptext20 12DF  
                __ptext12 1358                  __ptext21 141A                  __ptext13 13CE  
                __ptext22 0003                  __ptext14 152D                  __ptext23 0800  
                __ptext15 15F7                  __ptext24 12F7                  __ptext16 1337  
                __ptext25 12C9                  __ptext17 08FD                  __ptext26 129C  
                __ptext18 128C                  __ptext27 1685                  __ptext19 14D0  
                __ptext28 1316                  __ptext29 158B         __CFG_BOR4V$BOR40V 0000  
                __powers_ 1055                  _lcd_init 141A                  _lcd_goto 0800  
                _lcd_puts 12DF          __size_of_sprintf 0644             __size_of_main 022D  
                _msecbase 129C               ??_lcd_clear 0076               ??_lcd_write 0074  
                isdigit@c 0071                  scale@scl 003F                 sprintf@ap 00A3  
        __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024                 sprintf@sp 00B2  
        __tdiv_to_l_@quot 0020          ___lldiv@dividend 0074                 stringcode 1000  
            ?__tdiv_to_l_ 0070                _OPTION_REG 0081                  sprintf@c 00B6  
                sprintf@f 005A          ___lldiv@quotient 0079                  stringdir 1000  
                stringtab 1000  
